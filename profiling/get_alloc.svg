<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="373"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="373"> </text>
<g id="frames">
<g>
<title>all (59 samples, 100.00%)</title><rect x="10.0" y="339.0" width="1180.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="350.0">all</text>
</g>
<g>
<title>[Attach Listener tid=27395] (2 samples, 3.39%)</title><rect x="10.0" y="323.0" width="40.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="334.0">[At..</text>
</g>
<g>
<title>[not_walkable] (1 samples, 1.69%)</title><rect x="10.0" y="307.0" width="20.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 1.69%)</title><rect x="10.0" y="291.0" width="20.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/lang/NoSuchMethodError.&lt;init&gt; (1 samples, 1.69%)</title><rect x="30.0" y="307.0" width="20.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.0" y="318.0"></text>
</g>
<g>
<title>java/lang/IncompatibleClassChangeError.&lt;init&gt; (1 samples, 1.69%)</title><rect x="30.0" y="291.0" width="20.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.0" y="302.0"></text>
</g>
<g>
<title>java/lang/LinkageError.&lt;init&gt; (1 samples, 1.69%)</title><rect x="30.0" y="275.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="33.0" y="286.0"></text>
</g>
<g>
<title>java/lang/Error.&lt;init&gt; (1 samples, 1.69%)</title><rect x="30.0" y="259.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.0" y="270.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 1.69%)</title><rect x="30.0" y="243.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.0" y="254.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 1.69%)</title><rect x="30.0" y="227.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.0" y="238.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 1.69%)</title><rect x="30.0" y="211.0" width="20.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.0" y="222.0"></text>
</g>
<g>
<title>long[] (1 samples, 1.69%)</title><rect x="30.0" y="195.0" width="20.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="33.0" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=23555] (16 samples, 27.12%)</title><rect x="50.0" y="323.0" width="320.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="53.0" y="334.0">[NIO Selector #0 tid=23555]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (16 samples, 27.12%)</title><rect x="50.0" y="307.0" width="320.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.0" y="318.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (1 samples, 1.69%)</title><rect x="50.0" y="291.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.0" y="302.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 1.69%)</title><rect x="50.0" y="275.0" width="20.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.0" y="286.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (1 samples, 1.69%)</title><rect x="50.0" y="259.0" width="20.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="53.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (15 samples, 25.42%)</title><rect x="70.0" y="291.0" width="300.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.0" y="302.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (15 samples, 25.42%)</title><rect x="70.0" y="275.0" width="300.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.0" y="286.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (15 samples, 25.42%)</title><rect x="70.0" y="259.0" width="300.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.0" y="270.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (12 samples, 20.34%)</title><rect x="70.0" y="243.0" width="240.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.0" y="254.0">one/nio/http/HttpSession.handleP..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (12 samples, 20.34%)</title><rect x="70.0" y="227.0" width="240.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.0" y="238.0">one/nio/http/HttpServer.handleRe..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (12 samples, 20.34%)</title><rect x="70.0" y="211.0" width="240.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.0" y="222.0">RequestHandler1_entity.handleReq..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 1.69%)</title><rect x="70.0" y="195.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 1.69%)</title><rect x="70.0" y="179.0" width="20.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.0" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 1.69%)</title><rect x="70.0" y="163.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.0" y="174.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 1.69%)</title><rect x="70.0" y="147.0" width="20.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="73.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 1.69%)</title><rect x="90.0" y="195.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.0" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 1.69%)</title><rect x="90.0" y="179.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.0" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 1.69%)</title><rect x="90.0" y="163.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.0" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 1.69%)</title><rect x="90.0" y="147.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.0" y="158.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="90.0" y="131.0" width="20.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="93.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.entity (10 samples, 16.95%)</title><rect x="110.0" y="195.0" width="200.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.0" y="206.0">ru/mail/polis/service/rubt..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 5.08%)</title><rect x="110.0" y="179.0" width="60.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.0" y="190.0">one/ni..</text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="110.0" y="163.0" width="20.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="113.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 3.39%)</title><rect x="130.0" y="163.0" width="40.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="133.0" y="174.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.get (7 samples, 11.86%)</title><rect x="170.0" y="179.0" width="140.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="173.0" y="190.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (1 samples, 1.69%)</title><rect x="170.0" y="163.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.0" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 1.69%)</title><rect x="170.0" y="147.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 1.69%)</title><rect x="170.0" y="131.0" width="20.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="173.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.iterator (6 samples, 10.17%)</title><rect x="190.0" y="163.0" width="120.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.0" y="174.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.itemIterator (6 samples, 10.17%)</title><rect x="190.0" y="147.0" width="120.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.0" y="158.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransform (4 samples, 6.78%)</title><rect x="190.0" y="131.0" width="80.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.0" y="142.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (1 samples, 1.69%)</title><rect x="190.0" y="115.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.0" y="126.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (1 samples, 1.69%)</title><rect x="190.0" y="99.0" width="20.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="193.0" y="110.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3 samples, 5.08%)</title><rect x="210.0" y="115.0" width="60.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.0" y="126.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 5.08%)</title><rect x="210.0" y="99.0" width="60.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.0" y="110.0">com/go..</text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 3.39%)</title><rect x="210.0" y="83.0" width="40.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="213.0" y="94.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 1.69%)</title><rect x="250.0" y="83.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="253.0" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 1.69%)</title><rect x="250.0" y="67.0" width="20.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="253.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.iterator (2 samples, 3.39%)</title><rect x="270.0" y="131.0" width="40.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.0" y="142.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransform (2 samples, 3.39%)</title><rect x="270.0" y="115.0" width="40.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.0" y="126.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (1 samples, 1.69%)</title><rect x="270.0" y="99.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="273.0" y="110.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (1 samples, 1.69%)</title><rect x="270.0" y="83.0" width="20.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="273.0" y="94.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 1.69%)</title><rect x="290.0" y="99.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="293.0" y="110.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 1.69%)</title><rect x="290.0" y="83.0" width="20.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="293.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 3.39%)</title><rect x="310.0" y="243.0" width="40.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.0" y="254.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (1 samples, 1.69%)</title><rect x="310.0" y="227.0" width="20.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="313.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 1.69%)</title><rect x="330.0" y="227.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="333.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 1.69%)</title><rect x="330.0" y="211.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="330.0" y="195.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="333.0" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="330.0" y="179.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="333.0" y="190.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 1.69%)</title><rect x="330.0" y="163.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.0" y="174.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="330.0" y="147.0" width="20.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="333.0" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 1.69%)</title><rect x="350.0" y="243.0" width="20.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="353.0" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 1.69%)</title><rect x="350.0" y="227.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.0" y="238.0"></text>
</g>
<g>
<title>char[] (1 samples, 1.69%)</title><rect x="350.0" y="211.0" width="20.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="353.0" y="222.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=24579] (17 samples, 28.81%)</title><rect x="370.0" y="323.0" width="340.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="373.0" y="334.0">[NIO Selector #2 tid=24579]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (17 samples, 28.81%)</title><rect x="370.0" y="307.0" width="340.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="373.0" y="318.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (1 samples, 1.69%)</title><rect x="370.0" y="291.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="373.0" y="302.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 1.69%)</title><rect x="370.0" y="275.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="373.0" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (1 samples, 1.69%)</title><rect x="370.0" y="259.0" width="20.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="373.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (16 samples, 27.12%)</title><rect x="390.0" y="291.0" width="320.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.0" y="302.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (16 samples, 27.12%)</title><rect x="390.0" y="275.0" width="320.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.0" y="286.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (16 samples, 27.12%)</title><rect x="390.0" y="259.0" width="320.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.0" y="270.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (11 samples, 18.64%)</title><rect x="390.0" y="243.0" width="220.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="393.0" y="254.0">one/nio/http/HttpSession.hand..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (11 samples, 18.64%)</title><rect x="390.0" y="227.0" width="220.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.0" y="238.0">one/nio/http/HttpServer.handl..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (9 samples, 15.25%)</title><rect x="390.0" y="211.0" width="180.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="393.0" y="222.0">RequestHandler1_entity...</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.entity (9 samples, 15.25%)</title><rect x="390.0" y="195.0" width="180.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.0" y="206.0">ru/mail/polis/service/r..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 1.69%)</title><rect x="390.0" y="179.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="393.0" y="190.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 1.69%)</title><rect x="390.0" y="163.0" width="20.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="393.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.get (8 samples, 13.56%)</title><rect x="410.0" y="179.0" width="160.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="413.0" y="190.0">ru/mail/polis/dao/ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.iterator (8 samples, 13.56%)</title><rect x="410.0" y="163.0" width="160.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.0" y="174.0">ru/mail/polis/dao/ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.itemIterator (8 samples, 13.56%)</title><rect x="410.0" y="147.0" width="160.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.0" y="158.0">ru/mail/polis/dao/ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransform (5 samples, 8.47%)</title><rect x="410.0" y="131.0" width="100.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.0" y="142.0">ru/mail/poli..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (1 samples, 1.69%)</title><rect x="410.0" y="115.0" width="20.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="413.0" y="126.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (1 samples, 1.69%)</title><rect x="410.0" y="99.0" width="20.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="413.0" y="110.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 6.78%)</title><rect x="430.0" y="115.0" width="80.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.0" y="126.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4 samples, 6.78%)</title><rect x="430.0" y="99.0" width="80.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="433.0" y="110.0">com/googl..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 1.69%)</title><rect x="430.0" y="83.0" width="20.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="433.0" y="94.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 3.39%)</title><rect x="450.0" y="83.0" width="40.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="453.0" y="94.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 1.69%)</title><rect x="490.0" y="83.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.0" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 1.69%)</title><rect x="490.0" y="67.0" width="20.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="493.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.iterator (3 samples, 5.08%)</title><rect x="510.0" y="131.0" width="60.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="513.0" y="142.0">ru/mai..</text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 1.69%)</title><rect x="510.0" y="115.0" width="20.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="513.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransform (2 samples, 3.39%)</title><rect x="530.0" y="115.0" width="40.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.0" y="126.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (1 samples, 1.69%)</title><rect x="530.0" y="99.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.0" y="110.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (1 samples, 1.69%)</title><rect x="530.0" y="83.0" width="20.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="533.0" y="94.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 1.69%)</title><rect x="550.0" y="99.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.0" y="110.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 1.69%)</title><rect x="550.0" y="83.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.0" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 1.69%)</title><rect x="550.0" y="67.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="553.0" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 1.69%)</title><rect x="550.0" y="51.0" width="20.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="553.0" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 3.39%)</title><rect x="570.0" y="211.0" width="40.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.0" y="222.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 3.39%)</title><rect x="570.0" y="195.0" width="40.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.0" y="206.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 3.39%)</title><rect x="570.0" y="179.0" width="40.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="573.0" y="190.0">jav..</text>
</g>
<g>
<title>java.lang.String (1 samples, 1.69%)</title><rect x="570.0" y="163.0" width="20.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="573.0" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 1.69%)</title><rect x="590.0" y="163.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="593.0" y="174.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="590.0" y="147.0" width="20.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="593.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 6.78%)</title><rect x="610.0" y="243.0" width="80.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="613.0" y="254.0">one/nio/h..</text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 3.39%)</title><rect x="610.0" y="227.0" width="40.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="613.0" y="238.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 3.39%)</title><rect x="650.0" y="227.0" width="40.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="653.0" y="238.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 3.39%)</title><rect x="650.0" y="211.0" width="40.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.0" y="222.0">one..</text>
</g>
<g>
<title>char[] (2 samples, 3.39%)</title><rect x="650.0" y="195.0" width="40.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="653.0" y="206.0">cha..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 1.69%)</title><rect x="690.0" y="243.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.0" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 1.69%)</title><rect x="690.0" y="227.0" width="20.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="693.0" y="238.0"></text>
</g>
<g>
<title>char[] (1 samples, 1.69%)</title><rect x="690.0" y="211.0" width="20.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="693.0" y="222.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25091] (24 samples, 40.68%)</title><rect x="710.0" y="323.0" width="480.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="713.0" y="334.0">[NIO Selector #3 tid=25091]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (24 samples, 40.68%)</title><rect x="710.0" y="307.0" width="480.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.0" y="318.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (24 samples, 40.68%)</title><rect x="710.0" y="291.0" width="480.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.0" y="302.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (24 samples, 40.68%)</title><rect x="710.0" y="275.0" width="480.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.0" y="286.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (24 samples, 40.68%)</title><rect x="710.0" y="259.0" width="480.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.0" y="270.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (20 samples, 33.90%)</title><rect x="710.0" y="243.0" width="400.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.0" y="254.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (20 samples, 33.90%)</title><rect x="710.0" y="227.0" width="400.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.0" y="238.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (20 samples, 33.90%)</title><rect x="710.0" y="211.0" width="400.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.0" y="222.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 6.78%)</title><rect x="710.0" y="195.0" width="80.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="713.0" y="206.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 6.78%)</title><rect x="710.0" y="179.0" width="80.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="713.0" y="190.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 3.39%)</title><rect x="710.0" y="163.0" width="40.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="713.0" y="174.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 3.39%)</title><rect x="710.0" y="147.0" width="40.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="713.0" y="158.0">one..</text>
</g>
<g>
<title>byte[] (2 samples, 3.39%)</title><rect x="710.0" y="131.0" width="40.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="713.0" y="142.0">byt..</text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 3.39%)</title><rect x="750.0" y="163.0" width="40.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.0" y="174.0">one..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 3.39%)</title><rect x="750.0" y="147.0" width="40.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="753.0" y="158.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 1.69%)</title><rect x="790.0" y="195.0" width="20.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.0" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 1.69%)</title><rect x="790.0" y="179.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.0" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 1.69%)</title><rect x="790.0" y="163.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="793.0" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 1.69%)</title><rect x="790.0" y="147.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.0" y="158.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="790.0" y="131.0" width="20.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="793.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.entity (15 samples, 25.42%)</title><rect x="810.0" y="195.0" width="300.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.0" y="206.0">ru/mail/polis/service/rubtsov/MyService...</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 1.69%)</title><rect x="810.0" y="179.0" width="20.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="813.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 1.69%)</title><rect x="810.0" y="163.0" width="20.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="813.0" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 1.69%)</title><rect x="810.0" y="147.0" width="20.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="813.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 1.69%)</title><rect x="830.0" y="179.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="833.0" y="190.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 1.69%)</title><rect x="830.0" y="163.0" width="20.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="833.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.get (13 samples, 22.03%)</title><rect x="850.0" y="179.0" width="260.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.0" y="190.0">ru/mail/polis/dao/rubtsov/MyDAO.get</text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (2 samples, 3.39%)</title><rect x="850.0" y="163.0" width="40.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.0" y="174.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 3.39%)</title><rect x="850.0" y="147.0" width="40.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.0" y="158.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 3.39%)</title><rect x="850.0" y="131.0" width="40.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="853.0" y="142.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.iterator (11 samples, 18.64%)</title><rect x="890.0" y="163.0" width="220.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="893.0" y="174.0">ru/mail/polis/dao/rubtsov/MyD..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.itemIterator (11 samples, 18.64%)</title><rect x="890.0" y="147.0" width="220.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="893.0" y="158.0">ru/mail/polis/dao/rubtsov/MyD..</text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 3.39%)</title><rect x="890.0" y="131.0" width="40.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="893.0" y="142.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 1.69%)</title><rect x="930.0" y="131.0" width="20.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="933.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 1.69%)</title><rect x="930.0" y="115.0" width="20.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="933.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 1.69%)</title><rect x="930.0" y="99.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="933.0" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 1.69%)</title><rect x="930.0" y="83.0" width="20.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="933.0" y="94.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 1.69%)</title><rect x="930.0" y="67.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="933.0" y="78.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 1.69%)</title><rect x="930.0" y="51.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.0" y="62.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 1.69%)</title><rect x="930.0" y="35.0" width="20.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="933.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransform (2 samples, 3.39%)</title><rect x="950.0" y="131.0" width="40.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="953.0" y="142.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 3.39%)</title><rect x="950.0" y="115.0" width="40.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="953.0" y="126.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 3.39%)</title><rect x="950.0" y="99.0" width="40.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="953.0" y="110.0">com..</text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 3.39%)</title><rect x="950.0" y="83.0" width="40.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="953.0" y="94.0">jav..</text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 3.39%)</title><rect x="950.0" y="67.0" width="40.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="953.0" y="78.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.iterator (6 samples, 10.17%)</title><rect x="990.0" y="131.0" width="120.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="993.0" y="142.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 3.39%)</title><rect x="990.0" y="115.0" width="40.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="993.0" y="126.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTable.iterator (4 samples, 6.78%)</title><rect x="1030.0" y="115.0" width="80.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.0" y="126.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (1 samples, 1.69%)</title><rect x="1030.0" y="99.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1033.0" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (1 samples, 1.69%)</title><rect x="1030.0" y="83.0" width="20.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1033.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 5.08%)</title><rect x="1050.0" y="99.0" width="60.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1053.0" y="110.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 5.08%)</title><rect x="1050.0" y="83.0" width="60.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1053.0" y="94.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 5.08%)</title><rect x="1050.0" y="67.0" width="60.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1053.0" y="78.0">java/u..</text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (3 samples, 5.08%)</title><rect x="1050.0" y="51.0" width="60.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1053.0" y="62.0">java.u..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 3.39%)</title><rect x="1110.0" y="243.0" width="40.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1113.0" y="254.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 3.39%)</title><rect x="1110.0" y="227.0" width="40.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1113.0" y="238.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 3.39%)</title><rect x="1110.0" y="211.0" width="40.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1113.0" y="222.0">one..</text>
</g>
<g>
<title>char[] (1 samples, 1.69%)</title><rect x="1110.0" y="195.0" width="20.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1113.0" y="206.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 1.69%)</title><rect x="1130.0" y="195.0" width="20.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1133.0" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 3.39%)</title><rect x="1150.0" y="243.0" width="40.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1153.0" y="254.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 3.39%)</title><rect x="1150.0" y="227.0" width="40.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1153.0" y="238.0">one..</text>
</g>
<g>
<title>char[] (1 samples, 1.69%)</title><rect x="1150.0" y="211.0" width="20.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1153.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="1170.0" y="211.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1173.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="1170.0" y="195.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1173.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 1.69%)</title><rect x="1170.0" y="179.0" width="20.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1173.0" y="190.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="1170.0" y="163.0" width="20.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1173.0" y="174.0"></text>
</g>
</g>
</svg>
