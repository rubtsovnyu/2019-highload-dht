<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="485"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="485"> </text>
<g id="frames">
<g>
<title>all (486 samples, 100.00%)</title><rect x="10.0" y="451.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="462.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=23555] (166 samples, 34.16%)</title><rect x="10.0" y="435.0" width="403.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="13.0" y="446.0">[NIO Selector #0 tid=23555]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (166 samples, 34.16%)</title><rect x="10.0" y="419.0" width="403.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="430.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.isOpen (1 samples, 0.21%)</title><rect x="14.9" y="403.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (69 samples, 14.20%)</title><rect x="17.3" y="403.0" width="167.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.3" y="414.0">one/nio/net/JavaSelec..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.21%)</title><rect x="17.3" y="387.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (1 samples, 0.21%)</title><rect x="17.3" y="371.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.3" y="382.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.21%)</title><rect x="19.7" y="387.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="22.7" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (67 samples, 13.79%)</title><rect x="22.1" y="387.0" width="162.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.1" y="398.0">sun/nio/ch/SelectorIm..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (67 samples, 13.79%)</title><rect x="22.1" y="371.0" width="162.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.1" y="382.0">sun/nio/ch/SelectorIm..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (67 samples, 13.79%)</title><rect x="22.1" y="355.0" width="162.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.1" y="366.0">sun/nio/ch/KQueueSele..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (64 samples, 13.17%)</title><rect x="22.1" y="339.0" width="155.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.1" y="350.0">sun/nio/ch/KQueue.poll</text>
</g>
<g>
<title>kevent (59 samples, 12.14%)</title><rect x="34.3" y="323.0" width="143.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="37.3" y="334.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (1 samples, 0.21%)</title><rect x="177.5" y="339.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="180.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.21%)</title><rect x="177.5" y="323.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="180.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.41%)</title><rect x="180.0" y="339.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.0" y="350.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.21%)</title><rect x="182.4" y="323.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.4" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.21%)</title><rect x="182.4" y="307.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.4" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.21%)</title><rect x="182.4" y="291.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.4" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.21%)</title><rect x="182.4" y="275.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="185.4" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (94 samples, 19.34%)</title><rect x="184.8" y="403.0" width="228.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.8" y="414.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.21%)</title><rect x="187.2" y="387.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (91 samples, 18.72%)</title><rect x="189.7" y="387.0" width="220.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.7" y="398.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (81 samples, 16.67%)</title><rect x="189.7" y="371.0" width="196.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.7" y="382.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (79 samples, 16.26%)</title><rect x="192.1" y="355.0" width="191.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.1" y="366.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (79 samples, 16.26%)</title><rect x="192.1" y="339.0" width="191.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.1" y="350.0">one/nio/http/HttpServer.h..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (77 samples, 15.84%)</title><rect x="192.1" y="323.0" width="187.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.1" y="334.0">RequestHandler1_entity.h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (49 samples, 10.08%)</title><rect x="194.5" y="307.0" width="119.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.5" y="318.0">one/nio/http/H..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.21%)</title><rect x="201.8" y="291.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="204.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.21%)</title><rect x="201.8" y="275.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="204.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.21%)</title><rect x="201.8" y="259.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (45 samples, 9.26%)</title><rect x="204.2" y="291.0" width="109.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="207.2" y="302.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.21%)</title><rect x="204.2" y="275.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.2" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (44 samples, 9.05%)</title><rect x="206.7" y="275.0" width="106.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="209.7" y="286.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session.write (44 samples, 9.05%)</title><rect x="206.7" y="259.0" width="106.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.7" y="270.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (42 samples, 8.64%)</title><rect x="211.5" y="243.0" width="102.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="214.5" y="254.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (42 samples, 8.64%)</title><rect x="211.5" y="227.0" width="102.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.5" y="238.0">one/nio/net/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (42 samples, 8.64%)</title><rect x="211.5" y="211.0" width="102.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="214.5" y="222.0">sun/nio/ch/S..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (42 samples, 8.64%)</title><rect x="211.5" y="195.0" width="102.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.5" y="206.0">sun/nio/ch/I..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (42 samples, 8.64%)</title><rect x="211.5" y="179.0" width="102.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.5" y="190.0">sun/nio/ch/I..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (35 samples, 7.20%)</title><rect x="211.5" y="163.0" width="85.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="214.5" y="174.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (35 samples, 7.20%)</title><rect x="211.5" y="147.0" width="85.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="214.5" y="158.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (35 samples, 7.20%)</title><rect x="211.5" y="131.0" width="85.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="214.5" y="142.0">sun/nio/ch..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.21%)</title><rect x="218.8" y="115.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="221.8" y="126.0"></text>
</g>
<g>
<title>write (31 samples, 6.38%)</title><rect x="221.2" y="115.0" width="75.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="224.2" y="126.0">write</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 1.44%)</title><rect x="296.5" y="163.0" width="17.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.5" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.62%)</title><rect x="296.5" y="147.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.5" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.62%)</title><rect x="296.5" y="131.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.62%)</title><rect x="296.5" y="115.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="299.5" y="126.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.21%)</title><rect x="296.5" y="99.0" width="2.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="299.5" y="110.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.41%)</title><rect x="298.9" y="99.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="301.9" y="110.0"></text>
</g>
<g>
<title>__chk_fail_overlap.cold.1 (1 samples, 0.21%)</title><rect x="298.9" y="83.0" width="2.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="301.9" y="94.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.21%)</title><rect x="301.4" y="83.0" width="2.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="304.4" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.82%)</title><rect x="303.8" y="147.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.8" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (4 samples, 0.82%)</title><rect x="303.8" y="131.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.8" y="142.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (4 samples, 0.82%)</title><rect x="303.8" y="115.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (4 samples, 0.82%)</title><rect x="303.8" y="99.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.8" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.21%)</title><rect x="313.5" y="307.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.5" y="318.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.21%)</title><rect x="313.5" y="291.0" width="2.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="316.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.entity (26 samples, 5.35%)</title><rect x="315.9" y="307.0" width="63.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="318.9" y="318.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.62%)</title><rect x="315.9" y="291.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="318.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.62%)</title><rect x="315.9" y="275.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="318.9" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.62%)</title><rect x="315.9" y="259.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.9" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.62%)</title><rect x="315.9" y="243.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="318.9" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="320.8" y="227.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="323.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.21%)</title><rect x="320.8" y="211.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="323.8" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.21%)</title><rect x="320.8" y="195.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="323.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.get (22 samples, 4.53%)</title><rect x="323.2" y="291.0" width="53.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="326.2" y="302.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3 samples, 0.62%)</title><rect x="323.2" y="275.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3 samples, 0.62%)</title><rect x="323.2" y="259.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3 samples, 0.62%)</title><rect x="323.2" y="243.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3 samples, 0.62%)</title><rect x="323.2" y="227.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.62%)</title><rect x="323.2" y="211.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.62%)</title><rect x="323.2" y="195.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.62%)</title><rect x="323.2" y="179.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (2 samples, 0.41%)</title><rect x="325.6" y="163.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.41%)</title><rect x="325.6" y="147.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="328.6" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.21%)</title><rect x="328.1" y="131.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="331.1" y="142.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.21%)</title><rect x="328.1" y="115.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="331.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.21%)</title><rect x="328.1" y="99.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.1" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.21%)</title><rect x="328.1" y="83.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.1" y="94.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.21%)</title><rect x="330.5" y="275.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="333.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.21%)</title><rect x="330.5" y="259.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO$$Lambda$81/358344845.apply (1 samples, 0.21%)</title><rect x="330.5" y="243.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="333.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.21%)</title><rect x="330.5" y="227.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="333.5" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.41%)</title><rect x="332.9" y="275.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.9" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.41%)</title><rect x="332.9" y="259.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.9" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.21%)</title><rect x="335.3" y="243.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (1 samples, 0.21%)</title><rect x="337.8" y="275.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.21%)</title><rect x="337.8" y="259.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.21%)</title><rect x="337.8" y="243.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.8" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="337.8" y="227.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="337.8" y="211.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.8" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="337.8" y="195.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.iterator (15 samples, 3.09%)</title><rect x="340.2" y="275.0" width="36.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.2" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.itemIterator (15 samples, 3.09%)</title><rect x="340.2" y="259.0" width="36.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="343.2" y="270.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.21%)</title><rect x="340.2" y="243.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="343.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.21%)</title><rect x="340.2" y="227.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="343.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.21%)</title><rect x="340.2" y="211.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="343.2" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (1 samples, 0.21%)</title><rect x="340.2" y="195.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="343.2" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (1 samples, 0.21%)</title><rect x="340.2" y="179.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.expungeStaleEntry (1 samples, 0.21%)</title><rect x="340.2" y="163.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="343.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransform (4 samples, 0.82%)</title><rect x="342.6" y="243.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="345.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.82%)</title><rect x="342.6" y="227.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="345.6" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4 samples, 0.82%)</title><rect x="342.6" y="211.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (4 samples, 0.82%)</title><rect x="342.6" y="195.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (4 samples, 0.82%)</title><rect x="342.6" y="179.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (4 samples, 0.82%)</title><rect x="342.6" y="163.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="345.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.82%)</title><rect x="342.6" y="147.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.6" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.82%)</title><rect x="342.6" y="131.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="345.6" y="142.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.21%)</title><rect x="342.6" y="115.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.6" y="126.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.21%)</title><rect x="342.6" y="99.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="345.6" y="110.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.21%)</title><rect x="342.6" y="83.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.6" y="94.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.62%)</title><rect x="345.1" y="115.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="348.1" y="126.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (2 samples, 0.41%)</title><rect x="347.5" y="99.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="350.5" y="110.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.41%)</title><rect x="347.5" y="83.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="350.5" y="94.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.21%)</title><rect x="349.9" y="67.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="352.9" y="78.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.21%)</title><rect x="349.9" y="51.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="352.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.iterator (10 samples, 2.06%)</title><rect x="352.3" y="243.0" width="24.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="355.3" y="254.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.21%)</title><rect x="352.3" y="227.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="355.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.21%)</title><rect x="352.3" y="211.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="355.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.21%)</title><rect x="352.3" y="195.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="355.3" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.21%)</title><rect x="352.3" y="179.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.3" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.21%)</title><rect x="352.3" y="163.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="355.3" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.21%)</title><rect x="352.3" y="147.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="355.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransform (1 samples, 0.21%)</title><rect x="354.8" y="227.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="357.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.21%)</title><rect x="354.8" y="211.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.21%)</title><rect x="354.8" y="195.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="357.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.21%)</title><rect x="354.8" y="179.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="357.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTable.iterator (8 samples, 1.65%)</title><rect x="357.2" y="227.0" width="19.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="360.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 1.65%)</title><rect x="357.2" y="211.0" width="19.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="360.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (6 samples, 1.23%)</title><rect x="357.2" y="195.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (6 samples, 1.23%)</title><rect x="357.2" y="179.0" width="14.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="360.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (6 samples, 1.23%)</title><rect x="357.2" y="163.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 1.23%)</title><rect x="357.2" y="147.0" width="14.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.21%)</title><rect x="357.2" y="131.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="360.2" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.21%)</title><rect x="357.2" y="115.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.21%)</title><rect x="357.2" y="99.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="360.2" y="110.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.21%)</title><rect x="357.2" y="83.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 1.03%)</title><rect x="359.6" y="131.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="362.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$ValueIterator.&lt;init&gt; (2 samples, 0.41%)</title><rect x="371.8" y="195.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="374.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.upsert (1 samples, 0.21%)</title><rect x="376.6" y="291.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.upsert (1 samples, 0.21%)</title><rect x="376.6" y="275.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="379.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTable.upsert (1 samples, 0.21%)</title><rect x="376.6" y="259.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/Item.of (1 samples, 0.21%)</title><rect x="376.6" y="243.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.21%)</title><rect x="376.6" y="227.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="379.6" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="376.6" y="211.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="379.6" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="376.6" y="195.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="379.6" y="206.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.21%)</title><rect x="379.1" y="323.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.1" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.21%)</title><rect x="379.1" y="307.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.1" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.21%)</title><rect x="379.1" y="291.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.1" y="302.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.21%)</title><rect x="379.1" y="275.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.21%)</title><rect x="379.1" y="259.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.21%)</title><rect x="381.5" y="323.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.21%)</title><rect x="381.5" y="307.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.21%)</title><rect x="381.5" y="291.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="384.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.21%)</title><rect x="383.9" y="355.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.21%)</title><rect x="383.9" y="339.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="386.9" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (10 samples, 2.06%)</title><rect x="386.3" y="371.0" width="24.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.3" y="382.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (10 samples, 2.06%)</title><rect x="386.3" y="355.0" width="24.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.3" y="366.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (10 samples, 2.06%)</title><rect x="386.3" y="339.0" width="24.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="389.3" y="350.0">s..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.21%)</title><rect x="386.3" y="323.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="389.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.21%)</title><rect x="386.3" y="307.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="389.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.21%)</title><rect x="386.3" y="291.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.21%)</title><rect x="386.3" y="275.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="389.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.21%)</title><rect x="386.3" y="259.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.21%)</title><rect x="386.3" y="243.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="389.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 1.85%)</title><rect x="388.8" y="323.0" width="21.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.8" y="334.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 1.85%)</title><rect x="388.8" y="307.0" width="21.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="391.8" y="318.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 1.85%)</title><rect x="388.8" y="291.0" width="21.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="391.8" y="302.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (9 samples, 1.85%)</title><rect x="388.8" y="275.0" width="21.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.8" y="286.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (9 samples, 1.85%)</title><rect x="388.8" y="259.0" width="21.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.8" y="270.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.21%)</title><rect x="391.2" y="243.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="394.2" y="254.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.21%)</title><rect x="393.6" y="243.0" width="2.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="396.6" y="254.0"></text>
</g>
<g>
<title>read (6 samples, 1.23%)</title><rect x="396.0" y="243.0" width="14.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="399.0" y="254.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.21%)</title><rect x="410.6" y="387.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="413.6" y="398.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.21%)</title><rect x="410.6" y="371.0" width="2.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="413.6" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=39683] (123 samples, 25.31%)</title><rect x="413.0" y="435.0" width="298.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="416.0" y="446.0">[NIO Selector #1 tid=39683]</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.21%)</title><rect x="413.0" y="419.0" width="2.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="416.0" y="430.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (122 samples, 25.10%)</title><rect x="415.5" y="419.0" width="296.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="418.5" y="430.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector$1.hasNext (1 samples, 0.21%)</title><rect x="425.2" y="403.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="428.2" y="414.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (39 samples, 8.02%)</title><rect x="427.6" y="403.0" width="94.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="430.6" y="414.0">one/nio/net..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (39 samples, 8.02%)</title><rect x="427.6" y="387.0" width="94.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.6" y="398.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (39 samples, 8.02%)</title><rect x="427.6" y="371.0" width="94.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="430.6" y="382.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (39 samples, 8.02%)</title><rect x="427.6" y="355.0" width="94.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.6" y="366.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (38 samples, 7.82%)</title><rect x="427.6" y="339.0" width="92.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.6" y="350.0">sun/nio/ch/..</text>
</g>
<g>
<title>kevent (38 samples, 7.82%)</title><rect x="427.6" y="323.0" width="92.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="430.6" y="334.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.21%)</title><rect x="519.9" y="339.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.9" y="350.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.21%)</title><rect x="519.9" y="323.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.9" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (78 samples, 16.05%)</title><rect x="522.3" y="403.0" width="189.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.3" y="414.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (76 samples, 15.64%)</title><rect x="524.7" y="387.0" width="184.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="527.7" y="398.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (70 samples, 14.40%)</title><rect x="524.7" y="371.0" width="170.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="527.7" y="382.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (67 samples, 13.79%)</title><rect x="527.2" y="355.0" width="162.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.2" y="366.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (66 samples, 13.58%)</title><rect x="529.6" y="339.0" width="160.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.6" y="350.0">one/nio/http/HttpSer..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (65 samples, 13.37%)</title><rect x="529.6" y="323.0" width="157.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="532.6" y="334.0">RequestHandler1_enti..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (48 samples, 9.88%)</title><rect x="529.6" y="307.0" width="116.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.6" y="318.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (48 samples, 9.88%)</title><rect x="529.6" y="291.0" width="116.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="532.6" y="302.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.41%)</title><rect x="529.6" y="275.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.6" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (46 samples, 9.47%)</title><rect x="534.4" y="275.0" width="111.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="537.4" y="286.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session.write (46 samples, 9.47%)</title><rect x="534.4" y="259.0" width="111.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="537.4" y="270.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (45 samples, 9.26%)</title><rect x="536.9" y="243.0" width="109.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="539.9" y="254.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (45 samples, 9.26%)</title><rect x="536.9" y="227.0" width="109.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.9" y="238.0">one/nio/net/J..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (45 samples, 9.26%)</title><rect x="536.9" y="211.0" width="109.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="539.9" y="222.0">sun/nio/ch/So..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (45 samples, 9.26%)</title><rect x="536.9" y="195.0" width="109.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.9" y="206.0">sun/nio/ch/IO..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (45 samples, 9.26%)</title><rect x="536.9" y="179.0" width="109.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="539.9" y="190.0">sun/nio/ch/IO..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (44 samples, 9.05%)</title><rect x="536.9" y="163.0" width="106.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.9" y="174.0">sun/nio/ch/IO..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (44 samples, 9.05%)</title><rect x="536.9" y="147.0" width="106.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.9" y="158.0">sun/nio/ch/So..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (44 samples, 9.05%)</title><rect x="536.9" y="131.0" width="106.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="539.9" y="142.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.21%)</title><rect x="544.2" y="115.0" width="2.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="547.2" y="126.0"></text>
</g>
<g>
<title>write (40 samples, 8.23%)</title><rect x="546.6" y="115.0" width="97.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="549.6" y="126.0">write</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.21%)</title><rect x="643.7" y="163.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="646.7" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.21%)</title><rect x="643.7" y="147.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.7" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.21%)</title><rect x="643.7" y="131.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="646.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.21%)</title><rect x="643.7" y="115.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.7" y="126.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.21%)</title><rect x="643.7" y="99.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="646.7" y="110.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.21%)</title><rect x="643.7" y="83.0" width="2.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="646.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.entity (17 samples, 3.50%)</title><rect x="646.1" y="307.0" width="41.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="649.1" y="318.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.21%)</title><rect x="646.1" y="291.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.1" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.21%)</title><rect x="646.1" y="275.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="649.1" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="646.1" y="259.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="649.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="646.1" y="243.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="649.1" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="646.1" y="227.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.get (14 samples, 2.88%)</title><rect x="648.6" y="291.0" width="34.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.6" y="302.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (2 samples, 0.41%)</title><rect x="648.6" y="275.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.41%)</title><rect x="648.6" y="259.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.41%)</title><rect x="648.6" y="243.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2 samples, 0.41%)</title><rect x="648.6" y="227.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="651.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.41%)</title><rect x="648.6" y="211.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.41%)</title><rect x="648.6" y="195.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="651.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.41%)</title><rect x="648.6" y="179.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="651.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (2 samples, 0.41%)</title><rect x="648.6" y="163.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.41%)</title><rect x="648.6" y="147.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.6" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.41%)</title><rect x="648.6" y="131.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="651.6" y="142.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.21%)</title><rect x="651.0" y="115.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/IteratorUtils$$Lambda$78/1530038283.apply (1 samples, 0.21%)</title><rect x="651.0" y="99.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.0" y="110.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.21%)</title><rect x="653.4" y="275.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.21%)</title><rect x="653.4" y="259.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.21%)</title><rect x="655.8" y="275.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.8" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.21%)</title><rect x="655.8" y="259.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.21%)</title><rect x="655.8" y="243.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.8" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.21%)</title><rect x="655.8" y="227.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.iterator (10 samples, 2.06%)</title><rect x="658.3" y="275.0" width="24.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="661.3" y="286.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.itemIterator (10 samples, 2.06%)</title><rect x="658.3" y="259.0" width="24.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.3" y="270.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransform (2 samples, 0.41%)</title><rect x="658.3" y="243.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="661.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.21%)</title><rect x="658.3" y="227.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.21%)</title><rect x="658.3" y="211.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="661.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.21%)</title><rect x="658.3" y="195.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.21%)</title><rect x="658.3" y="179.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.21%)</title><rect x="658.3" y="163.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.21%)</title><rect x="658.3" y="147.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.3" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.21%)</title><rect x="658.3" y="131.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.3" y="142.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.21%)</title><rect x="658.3" y="115.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.3" y="126.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.21%)</title><rect x="658.3" y="99.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="661.3" y="110.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.21%)</title><rect x="658.3" y="83.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.21%)</title><rect x="660.7" y="227.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.21%)</title><rect x="660.7" y="211.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.21%)</title><rect x="660.7" y="195.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="663.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.21%)</title><rect x="660.7" y="179.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.21%)</title><rect x="660.7" y="163.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.21%)</title><rect x="660.7" y="147.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.21%)</title><rect x="660.7" y="131.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="663.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.21%)</title><rect x="660.7" y="115.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.21%)</title><rect x="660.7" y="99.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.7" y="110.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.21%)</title><rect x="660.7" y="83.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="663.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.21%)</title><rect x="660.7" y="67.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.iterator (8 samples, 1.65%)</title><rect x="663.1" y="243.0" width="19.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.21%)</title><rect x="663.1" y="227.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.21%)</title><rect x="663.1" y="211.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.21%)</title><rect x="663.1" y="195.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="666.1" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.21%)</title><rect x="663.1" y="179.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.1" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.21%)</title><rect x="663.1" y="163.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.1" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.21%)</title><rect x="663.1" y="147.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.1" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.21%)</title><rect x="663.1" y="131.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="666.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransform (2 samples, 0.41%)</title><rect x="665.6" y="227.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.6" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 0.41%)</title><rect x="665.6" y="211.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.41%)</title><rect x="665.6" y="195.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="668.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTable.iterator (5 samples, 1.03%)</title><rect x="670.4" y="227.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 1.03%)</title><rect x="670.4" y="211.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="673.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (4 samples, 0.82%)</title><rect x="670.4" y="195.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="673.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.82%)</title><rect x="670.4" y="179.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (4 samples, 0.82%)</title><rect x="670.4" y="163.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="673.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.82%)</title><rect x="670.4" y="147.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.82%)</title><rect x="670.4" y="131.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.41%)</title><rect x="675.3" y="115.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="678.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.41%)</title><rect x="675.3" y="99.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="678.3" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.41%)</title><rect x="675.3" y="83.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.3" y="94.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.41%)</title><rect x="675.3" y="67.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="678.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.21%)</title><rect x="677.7" y="51.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.7" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$ValueIterator.&lt;init&gt; (1 samples, 0.21%)</title><rect x="680.1" y="195.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="683.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.21%)</title><rect x="680.1" y="179.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.upsert (2 samples, 0.41%)</title><rect x="682.6" y="291.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.upsert (2 samples, 0.41%)</title><rect x="682.6" y="275.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTable.upsert (1 samples, 0.21%)</title><rect x="685.0" y="259.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/Item.of (1 samples, 0.21%)</title><rect x="685.0" y="243.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.21%)</title><rect x="685.0" y="227.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="685.0" y="211.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="688.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="685.0" y="195.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.0" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="685.0" y="179.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.21%)</title><rect x="685.0" y="163.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="688.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.21%)</title><rect x="687.4" y="323.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.4" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.21%)</title><rect x="687.4" y="307.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.4" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.21%)</title><rect x="687.4" y="291.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.4" y="302.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.21%)</title><rect x="687.4" y="275.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.21%)</title><rect x="687.4" y="259.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.41%)</title><rect x="689.8" y="355.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.21%)</title><rect x="692.3" y="339.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.3" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.21%)</title><rect x="692.3" y="323.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.3" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 1.23%)</title><rect x="694.7" y="371.0" width="14.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.7" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (6 samples, 1.23%)</title><rect x="694.7" y="355.0" width="14.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (6 samples, 1.23%)</title><rect x="694.7" y="339.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="697.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.41%)</title><rect x="694.7" y="323.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.41%)</title><rect x="694.7" y="307.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="697.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.41%)</title><rect x="694.7" y="291.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.41%)</title><rect x="694.7" y="275.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.21%)</title><rect x="694.7" y="259.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="697.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.21%)</title><rect x="697.1" y="259.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.21%)</title><rect x="697.1" y="243.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.21%)</title><rect x="697.1" y="227.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="700.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.82%)</title><rect x="699.5" y="323.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.82%)</title><rect x="699.5" y="307.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="702.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.82%)</title><rect x="699.5" y="291.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (4 samples, 0.82%)</title><rect x="699.5" y="275.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (4 samples, 0.82%)</title><rect x="699.5" y="259.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.5" y="270.0"></text>
</g>
<g>
<title>read (3 samples, 0.62%)</title><rect x="702.0" y="243.0" width="7.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="705.0" y="254.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.21%)</title><rect x="709.3" y="387.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="712.3" y="398.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.21%)</title><rect x="709.3" y="371.0" width="2.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="712.3" y="382.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.21%)</title><rect x="709.3" y="355.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="712.3" y="366.0"></text>
</g>
<g>
<title>_res (1 samples, 0.21%)</title><rect x="709.3" y="339.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="712.3" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=24579] (191 samples, 39.30%)</title><rect x="711.7" y="435.0" width="463.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="714.7" y="446.0">[NIO Selector #2 tid=24579]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (191 samples, 39.30%)</title><rect x="711.7" y="419.0" width="463.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.7" y="430.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector$1.hasNext (1 samples, 0.21%)</title><rect x="714.1" y="403.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="717.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (56 samples, 11.52%)</title><rect x="716.5" y="403.0" width="136.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.5" y="414.0">one/nio/net/JavaS..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 0.21%)</title><rect x="716.5" y="387.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.5" y="398.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.21%)</title><rect x="719.0" y="387.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="722.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (54 samples, 11.11%)</title><rect x="721.4" y="387.0" width="131.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="724.4" y="398.0">sun/nio/ch/Selec..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (54 samples, 11.11%)</title><rect x="721.4" y="371.0" width="131.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.4" y="382.0">sun/nio/ch/Selec..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (54 samples, 11.11%)</title><rect x="721.4" y="355.0" width="131.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.4" y="366.0">sun/nio/ch/KQueu..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (49 samples, 10.08%)</title><rect x="723.8" y="339.0" width="119.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.8" y="350.0">sun/nio/ch/KQu..</text>
</g>
<g>
<title>kevent (47 samples, 9.67%)</title><rect x="728.7" y="323.0" width="114.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="731.7" y="334.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1 samples, 0.21%)</title><rect x="842.8" y="339.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.21%)</title><rect x="842.8" y="323.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="845.8" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.21%)</title><rect x="842.8" y="307.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="845.8" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.21%)</title><rect x="842.8" y="291.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.8" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.21%)</title><rect x="842.8" y="275.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="845.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (2 samples, 0.41%)</title><rect x="845.2" y="339.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="848.2" y="350.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.21%)</title><rect x="847.7" y="323.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.21%)</title><rect x="850.1" y="339.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.1" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (133 samples, 27.37%)</title><rect x="852.5" y="403.0" width="322.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.5" y="414.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (133 samples, 27.37%)</title><rect x="852.5" y="387.0" width="322.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.5" y="398.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (115 samples, 23.66%)</title><rect x="852.5" y="371.0" width="279.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.5" y="382.0">one/nio/http/HttpSession.processHttpB..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (109 samples, 22.43%)</title><rect x="859.8" y="355.0" width="264.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="862.8" y="366.0">one/nio/http/HttpSession.handlePars..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (109 samples, 22.43%)</title><rect x="859.8" y="339.0" width="264.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="862.8" y="350.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (107 samples, 22.02%)</title><rect x="859.8" y="323.0" width="259.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="862.8" y="334.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (71 samples, 14.61%)</title><rect x="859.8" y="307.0" width="172.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="862.8" y="318.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (68 samples, 13.99%)</title><rect x="864.7" y="291.0" width="165.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="867.7" y="302.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.82%)</title><rect x="864.7" y="275.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="867.7" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (64 samples, 13.17%)</title><rect x="874.4" y="275.0" width="155.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="877.4" y="286.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/net/Session.write (64 samples, 13.17%)</title><rect x="874.4" y="259.0" width="155.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="877.4" y="270.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (64 samples, 13.17%)</title><rect x="874.4" y="243.0" width="155.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="877.4" y="254.0">one/nio/net/Session$..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (64 samples, 13.17%)</title><rect x="874.4" y="227.0" width="155.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="877.4" y="238.0">one/nio/net/JavaSock..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (64 samples, 13.17%)</title><rect x="874.4" y="211.0" width="155.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.4" y="222.0">sun/nio/ch/SocketCha..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (64 samples, 13.17%)</title><rect x="874.4" y="195.0" width="155.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="877.4" y="206.0">sun/nio/ch/IOUtil.wr..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (64 samples, 13.17%)</title><rect x="874.4" y="179.0" width="155.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="877.4" y="190.0">sun/nio/ch/IOUtil.wr..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.21%)</title><rect x="874.4" y="163.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="877.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.21%)</title><rect x="874.4" y="147.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="877.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.21%)</title><rect x="874.4" y="131.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="877.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.21%)</title><rect x="874.4" y="115.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="877.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.21%)</title><rect x="874.4" y="99.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.21%)</title><rect x="874.4" y="83.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="877.4" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (58 samples, 11.93%)</title><rect x="876.8" y="163.0" width="140.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="879.8" y="174.0">sun/nio/ch/IOUtil...</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (58 samples, 11.93%)</title><rect x="876.8" y="147.0" width="140.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="879.8" y="158.0">sun/nio/ch/SocketD..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (58 samples, 11.93%)</title><rect x="876.8" y="131.0" width="140.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="879.8" y="142.0">sun/nio/ch/FileDis..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (2 samples, 0.41%)</title><rect x="876.8" y="115.0" width="4.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="879.8" y="126.0"></text>
</g>
<g>
<title>write (56 samples, 11.52%)</title><rect x="881.6" y="115.0" width="136.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="884.6" y="126.0">write</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 1.03%)</title><rect x="1017.6" y="163.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.6" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.62%)</title><rect x="1017.6" y="147.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1020.6" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.62%)</title><rect x="1017.6" y="131.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1020.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.62%)</title><rect x="1017.6" y="115.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1020.6" y="126.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.41%)</title><rect x="1017.6" y="99.0" width="4.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1020.6" y="110.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.21%)</title><rect x="1022.5" y="99.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1025.5" y="110.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.21%)</title><rect x="1022.5" y="83.0" width="2.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1025.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.41%)</title><rect x="1024.9" y="147.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1027.9" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (2 samples, 0.41%)</title><rect x="1024.9" y="131.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1027.9" y="142.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (2 samples, 0.41%)</title><rect x="1024.9" y="115.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1027.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (2 samples, 0.41%)</title><rect x="1024.9" y="99.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1027.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.21%)</title><rect x="1029.8" y="291.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1032.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.entity (36 samples, 7.41%)</title><rect x="1032.2" y="307.0" width="87.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1035.2" y="318.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.21%)</title><rect x="1037.0" y="291.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1040.0" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.21%)</title><rect x="1037.0" y="275.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1040.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.get (32 samples, 6.58%)</title><rect x="1039.5" y="291.0" width="77.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1042.5" y="302.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (4 samples, 0.82%)</title><rect x="1039.5" y="275.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1042.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (4 samples, 0.82%)</title><rect x="1039.5" y="259.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1042.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (4 samples, 0.82%)</title><rect x="1039.5" y="243.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1042.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (4 samples, 0.82%)</title><rect x="1039.5" y="227.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1042.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.82%)</title><rect x="1039.5" y="211.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1042.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.62%)</title><rect x="1039.5" y="195.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1042.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.21%)</title><rect x="1039.5" y="179.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1042.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.21%)</title><rect x="1039.5" y="163.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1042.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.21%)</title><rect x="1039.5" y="147.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1042.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.21%)</title><rect x="1039.5" y="131.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1042.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.21%)</title><rect x="1039.5" y="115.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1042.5" y="126.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.21%)</title><rect x="1039.5" y="99.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1042.5" y="110.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.41%)</title><rect x="1041.9" y="179.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1044.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (2 samples, 0.41%)</title><rect x="1041.9" y="163.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.41%)</title><rect x="1041.9" y="147.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.21%)</title><rect x="1044.3" y="131.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1047.3" y="142.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.21%)</title><rect x="1044.3" y="115.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.21%)</title><rect x="1044.3" y="99.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1047.3" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.21%)</title><rect x="1044.3" y="83.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.3" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.21%)</title><rect x="1046.7" y="195.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1049.7" y="206.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.21%)</title><rect x="1046.7" y="179.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1049.7" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.21%)</title><rect x="1046.7" y="163.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1049.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (2 samples, 0.41%)</title><rect x="1049.2" y="275.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1052.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.41%)</title><rect x="1049.2" y="259.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1052.2" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.41%)</title><rect x="1049.2" y="243.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1052.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.41%)</title><rect x="1049.2" y="227.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1052.2" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.41%)</title><rect x="1049.2" y="211.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1052.2" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.41%)</title><rect x="1049.2" y="195.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1052.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.iterator (26 samples, 5.35%)</title><rect x="1054.0" y="275.0" width="63.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1057.0" y="286.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.itemIterator (26 samples, 5.35%)</title><rect x="1054.0" y="259.0" width="63.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.0" y="270.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransform (3 samples, 0.62%)</title><rect x="1054.0" y="243.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1057.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 0.41%)</title><rect x="1054.0" y="227.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1057.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.41%)</title><rect x="1054.0" y="211.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1057.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.41%)</title><rect x="1054.0" y="195.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1057.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.41%)</title><rect x="1054.0" y="179.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1057.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2 samples, 0.41%)</title><rect x="1054.0" y="163.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1057.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.41%)</title><rect x="1054.0" y="147.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1057.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.21%)</title><rect x="1054.0" y="131.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.0" y="142.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.21%)</title><rect x="1054.0" y="115.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1057.0" y="126.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.21%)</title><rect x="1054.0" y="99.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1057.0" y="110.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.21%)</title><rect x="1054.0" y="83.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.21%)</title><rect x="1056.5" y="131.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.5" y="142.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.21%)</title><rect x="1056.5" y="115.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1059.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.21%)</title><rect x="1056.5" y="99.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1059.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.21%)</title><rect x="1058.9" y="227.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1061.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.21%)</title><rect x="1058.9" y="211.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1061.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.21%)</title><rect x="1058.9" y="195.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1061.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.21%)</title><rect x="1058.9" y="179.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1061.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.iterator (23 samples, 4.73%)</title><rect x="1061.3" y="243.0" width="55.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.3" y="254.0">ru/ma..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.21%)</title><rect x="1061.3" y="227.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.21%)</title><rect x="1063.7" y="227.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1066.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTable.iterator (21 samples, 4.32%)</title><rect x="1066.2" y="227.0" width="51.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1069.2" y="238.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (21 samples, 4.32%)</title><rect x="1066.2" y="211.0" width="51.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1069.2" y="222.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (21 samples, 4.32%)</title><rect x="1066.2" y="195.0" width="51.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1069.2" y="206.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (21 samples, 4.32%)</title><rect x="1066.2" y="179.0" width="51.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1069.2" y="190.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (21 samples, 4.32%)</title><rect x="1066.2" y="163.0" width="51.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1069.2" y="174.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (21 samples, 4.32%)</title><rect x="1066.2" y="147.0" width="51.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1069.2" y="158.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.21%)</title><rect x="1066.2" y="131.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.2" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.21%)</title><rect x="1066.2" y="115.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1069.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.21%)</title><rect x="1066.2" y="99.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.2" y="110.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.21%)</title><rect x="1066.2" y="83.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1069.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (20 samples, 4.12%)</title><rect x="1068.6" y="131.0" width="48.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1071.6" y="142.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (10 samples, 2.06%)</title><rect x="1092.9" y="115.0" width="24.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.9" y="126.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 2.06%)</title><rect x="1092.9" y="99.0" width="24.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1095.9" y="110.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 2.06%)</title><rect x="1092.9" y="83.0" width="24.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.9" y="94.0">j..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 1.85%)</title><rect x="1095.3" y="67.0" width="21.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1098.3" y="78.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 1.03%)</title><rect x="1105.0" y="51.0" width="12.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1108.0" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (5 samples, 1.03%)</title><rect x="1105.0" y="35.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1108.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.upsert (1 samples, 0.21%)</title><rect x="1117.2" y="291.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.upsert (1 samples, 0.21%)</title><rect x="1117.2" y="275.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1120.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTable.upsert (1 samples, 0.21%)</title><rect x="1117.2" y="259.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1120.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/Item.of (1 samples, 0.21%)</title><rect x="1117.2" y="243.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1120.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.21%)</title><rect x="1117.2" y="227.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.21%)</title><rect x="1119.6" y="323.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1122.6" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.21%)</title><rect x="1119.6" y="307.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.6" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.21%)</title><rect x="1119.6" y="291.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1122.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.21%)</title><rect x="1122.0" y="323.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.21%)</title><rect x="1122.0" y="307.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.21%)</title><rect x="1122.0" y="291.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1125.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.21%)</title><rect x="1122.0" y="275.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1125.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.41%)</title><rect x="1124.4" y="355.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1127.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.41%)</title><rect x="1124.4" y="339.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.41%)</title><rect x="1124.4" y="323.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.21%)</title><rect x="1129.3" y="355.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1132.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (18 samples, 3.70%)</title><rect x="1131.7" y="371.0" width="43.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.7" y="382.0">one/..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (18 samples, 3.70%)</title><rect x="1131.7" y="355.0" width="43.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1134.7" y="366.0">one/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.21%)</title><rect x="1134.2" y="339.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="1134.2" y="323.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1137.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="1134.2" y="307.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1137.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (16 samples, 3.29%)</title><rect x="1136.6" y="339.0" width="38.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.6" y="350.0">sun..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.21%)</title><rect x="1136.6" y="323.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1139.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.21%)</title><rect x="1136.6" y="307.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1139.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.21%)</title><rect x="1136.6" y="291.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1139.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.21%)</title><rect x="1136.6" y="275.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1139.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.21%)</title><rect x="1136.6" y="259.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1139.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (15 samples, 3.09%)</title><rect x="1139.0" y="323.0" width="36.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1142.0" y="334.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (15 samples, 3.09%)</title><rect x="1139.0" y="307.0" width="36.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.0" y="318.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (14 samples, 2.88%)</title><rect x="1141.4" y="291.0" width="34.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1144.4" y="302.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (14 samples, 2.88%)</title><rect x="1141.4" y="275.0" width="34.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1144.4" y="286.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (14 samples, 2.88%)</title><rect x="1141.4" y="259.0" width="34.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1144.4" y="270.0">su..</text>
</g>
<g>
<title>read (14 samples, 2.88%)</title><rect x="1141.4" y="243.0" width="34.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1144.4" y="254.0">read</text>
</g>
<g>
<title>[tid=19459] (1 samples, 0.21%)</title><rect x="1175.4" y="435.0" width="2.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1178.4" y="446.0"></text>
</g>
<g>
<title>thread_start (1 samples, 0.21%)</title><rect x="1175.4" y="419.0" width="2.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1178.4" y="430.0"></text>
</g>
<g>
<title>_pthread_start (1 samples, 0.21%)</title><rect x="1175.4" y="403.0" width="2.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1178.4" y="414.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.21%)</title><rect x="1175.4" y="387.0" width="2.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1178.4" y="398.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.21%)</title><rect x="1175.4" y="371.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.4" y="382.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.21%)</title><rect x="1175.4" y="355.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1178.4" y="366.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.21%)</title><rect x="1175.4" y="339.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.4" y="350.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.21%)</title><rect x="1175.4" y="323.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.4" y="334.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.21%)</title><rect x="1175.4" y="307.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.4" y="318.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.21%)</title><rect x="1175.4" y="291.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.4" y="302.0"></text>
</g>
<g>
<title>__gettimeofday (1 samples, 0.21%)</title><rect x="1175.4" y="275.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1178.4" y="286.0"></text>
</g>
<g>
<title>[tid=20227] (1 samples, 0.21%)</title><rect x="1177.9" y="435.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1180.9" y="446.0"></text>
</g>
<g>
<title>thread_start (1 samples, 0.21%)</title><rect x="1177.9" y="419.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1180.9" y="430.0"></text>
</g>
<g>
<title>_pthread_start (1 samples, 0.21%)</title><rect x="1177.9" y="403.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1180.9" y="414.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.21%)</title><rect x="1177.9" y="387.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1180.9" y="398.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.21%)</title><rect x="1177.9" y="371.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.9" y="382.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.21%)</title><rect x="1177.9" y="355.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.9" y="366.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.21%)</title><rect x="1177.9" y="339.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.9" y="350.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sample_young_list_rs_lengths() (1 samples, 0.21%)</title><rect x="1177.9" y="323.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.9" y="334.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.21%)</title><rect x="1177.9" y="307.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1180.9" y="318.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.21%)</title><rect x="1177.9" y="291.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.9" y="302.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.21%)</title><rect x="1177.9" y="275.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.9" y="286.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.21%)</title><rect x="1177.9" y="259.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.9" y="270.0"></text>
</g>
<g>
<title>G1Analytics::predict_object_copy_time_ms(unsigned long, bool) const (1 samples, 0.21%)</title><rect x="1177.9" y="243.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.9" y="254.0"></text>
</g>
<g>
<title>G1Predictions::stddev_estimate(TruncatedSeq const*) const (1 samples, 0.21%)</title><rect x="1177.9" y="227.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.9" y="238.0"></text>
</g>
<g>
<title>AbsSeq::dsd() const (1 samples, 0.21%)</title><rect x="1177.9" y="211.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.9" y="222.0"></text>
</g>
<g>
<title>[tid=41475] (4 samples, 0.82%)</title><rect x="1180.3" y="435.0" width="9.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1183.3" y="446.0"></text>
</g>
<g>
<title>thread_start (4 samples, 0.82%)</title><rect x="1180.3" y="419.0" width="9.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1183.3" y="430.0"></text>
</g>
<g>
<title>_pthread_start (4 samples, 0.82%)</title><rect x="1180.3" y="403.0" width="9.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1183.3" y="414.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.82%)</title><rect x="1180.3" y="387.0" width="9.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1183.3" y="398.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.82%)</title><rect x="1180.3" y="371.0" width="9.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.3" y="382.0"></text>
</g>
<g>
<title>WatcherThread::run() (4 samples, 0.82%)</title><rect x="1180.3" y="355.0" width="9.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.3" y="366.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (4 samples, 0.82%)</title><rect x="1180.3" y="339.0" width="9.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.3" y="350.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 0.62%)</title><rect x="1180.3" y="323.0" width="7.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.3" y="334.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (3 samples, 0.62%)</title><rect x="1180.3" y="307.0" width="7.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.3" y="318.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (3 samples, 0.62%)</title><rect x="1180.3" y="291.0" width="7.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.3" y="302.0"></text>
</g>
<g>
<title>__gettimeofday (1 samples, 0.21%)</title><rect x="1180.3" y="275.0" width="2.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1183.3" y="286.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.41%)</title><rect x="1182.7" y="275.0" width="4.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1185.7" y="286.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.21%)</title><rect x="1187.6" y="323.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.6" y="334.0"></text>
</g>
<g>
<title>svcudp_op (1 samples, 0.21%)</title><rect x="1187.6" y="307.0" width="2.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1190.6" y="318.0"></text>
</g>
</g>
</svg>
