<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="453"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="453"> </text>
<g id="frames">
<g>
<title>all (602 samples, 100.00%)</title><rect x="10.0" y="419.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="430.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=23555] (293 samples, 48.67%)</title><rect x="10.0" y="403.0" width="574.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="414.0">[NIO Selector #0 tid=23555]</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.17%)</title><rect x="10.0" y="387.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (292 samples, 48.50%)</title><rect x="12.0" y="387.0" width="572.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.0" y="398.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.17%)</title><rect x="37.4" y="371.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="40.4" y="382.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.17%)</title><rect x="37.4" y="355.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="40.4" y="366.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.17%)</title><rect x="37.4" y="339.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="40.4" y="350.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.17%)</title><rect x="37.4" y="323.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="40.4" y="334.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.17%)</title><rect x="37.4" y="307.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="40.4" y="318.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.17%)</title><rect x="37.4" y="291.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="40.4" y="302.0"></text>
</g>
<g>
<title>bool CompilerOracle::has_option_value&lt;double&gt;(methodHandle const&amp;, char const*, double&amp;) (1 samples, 0.17%)</title><rect x="37.4" y="275.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="40.4" y="286.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (114 samples, 18.94%)</title><rect x="39.4" y="371.0" width="223.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.4" y="382.0">one/nio/net/JavaSelector.select</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (5 samples, 0.83%)</title><rect x="39.4" y="355.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (1 samples, 0.17%)</title><rect x="47.2" y="339.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="50.2" y="350.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.17%)</title><rect x="47.2" y="323.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="50.2" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.17%)</title><rect x="47.2" y="307.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.2" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.17%)</title><rect x="47.2" y="291.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.2" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.17%)</title><rect x="47.2" y="275.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.2" y="286.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.17%)</title><rect x="49.2" y="355.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="52.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (108 samples, 17.94%)</title><rect x="51.2" y="355.0" width="211.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.2" y="366.0">sun/nio/ch/SelectorImpl.select</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (107 samples, 17.77%)</title><rect x="53.1" y="339.0" width="209.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.1" y="350.0">sun/nio/ch/SelectorImpl.loc..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (106 samples, 17.61%)</title><rect x="55.1" y="323.0" width="207.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.1" y="334.0">sun/nio/ch/KQueueSelectorIm..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (100 samples, 16.61%)</title><rect x="57.0" y="307.0" width="196.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.0" y="318.0">sun/nio/ch/KQueue.poll</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (2 samples, 0.33%)</title><rect x="61.0" y="291.0" width="3.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="64.0" y="302.0"></text>
</g>
<g>
<title>kevent (96 samples, 15.95%)</title><rect x="64.9" y="291.0" width="188.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="67.9" y="302.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (2 samples, 0.33%)</title><rect x="253.1" y="307.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.33%)</title><rect x="253.1" y="291.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="256.1" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.33%)</title><rect x="253.1" y="275.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.1" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.33%)</title><rect x="253.1" y="259.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.1" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.33%)</title><rect x="253.1" y="243.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.17%)</title><rect x="257.0" y="307.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="260.0" y="318.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.17%)</title><rect x="257.0" y="291.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.33%)</title><rect x="258.9" y="307.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="261.9" y="318.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (2 samples, 0.33%)</title><rect x="258.9" y="291.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="261.9" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.33%)</title><rect x="258.9" y="275.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.9" y="286.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.33%)</title><rect x="258.9" y="259.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="261.9" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (164 samples, 27.24%)</title><rect x="262.9" y="371.0" width="321.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="265.9" y="382.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (164 samples, 27.24%)</title><rect x="262.9" y="355.0" width="321.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="265.9" y="366.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (139 samples, 23.09%)</title><rect x="262.9" y="339.0" width="272.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="265.9" y="350.0">one/nio/http/HttpSession.processHttp..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (124 samples, 20.60%)</title><rect x="262.9" y="323.0" width="243.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="265.9" y="334.0">one/nio/http/HttpSession.handleP..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (121 samples, 20.10%)</title><rect x="268.7" y="307.0" width="237.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="271.7" y="318.0">one/nio/http/HttpServer.handleR..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (119 samples, 19.77%)</title><rect x="268.7" y="291.0" width="233.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="271.7" y="302.0">RequestHandler1_entity.handleRe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (96 samples, 15.95%)</title><rect x="268.7" y="275.0" width="188.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="271.7" y="286.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (96 samples, 15.95%)</title><rect x="268.7" y="259.0" width="188.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="271.7" y="270.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.33%)</title><rect x="268.7" y="243.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.7" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (94 samples, 15.61%)</title><rect x="272.7" y="243.0" width="184.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.7" y="254.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.17%)</title><rect x="272.7" y="227.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="275.7" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (93 samples, 15.45%)</title><rect x="274.6" y="227.0" width="182.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="277.6" y="238.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (92 samples, 15.28%)</title><rect x="276.6" y="211.0" width="180.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="279.6" y="222.0">one/nio/net/Session$Arr..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (92 samples, 15.28%)</title><rect x="276.6" y="195.0" width="180.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.6" y="206.0">one/nio/net/JavaSocket...</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (92 samples, 15.28%)</title><rect x="276.6" y="179.0" width="180.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.6" y="190.0">sun/nio/ch/SocketChanne..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (92 samples, 15.28%)</title><rect x="276.6" y="163.0" width="180.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.6" y="174.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (92 samples, 15.28%)</title><rect x="276.6" y="147.0" width="180.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="279.6" y="158.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.33%)</title><rect x="276.6" y="131.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="279.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.33%)</title><rect x="276.6" y="115.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="279.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.33%)</title><rect x="276.6" y="99.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="279.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.33%)</title><rect x="276.6" y="83.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.33%)</title><rect x="276.6" y="67.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="279.6" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.33%)</title><rect x="276.6" y="51.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="279.6" y="62.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (2 samples, 0.33%)</title><rect x="276.6" y="35.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="279.6" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (85 samples, 14.12%)</title><rect x="280.5" y="131.0" width="166.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.5" y="142.0">sun/nio/ch/IOUtil.wri..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (85 samples, 14.12%)</title><rect x="280.5" y="115.0" width="166.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.5" y="126.0">sun/nio/ch/SocketDisp..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (85 samples, 14.12%)</title><rect x="280.5" y="99.0" width="166.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.5" y="110.0">sun/nio/ch/FileDispat..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (2 samples, 0.33%)</title><rect x="284.4" y="83.0" width="3.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="287.4" y="94.0"></text>
</g>
<g>
<title>write (81 samples, 13.46%)</title><rect x="288.3" y="83.0" width="158.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="291.3" y="94.0">write</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.83%)</title><rect x="447.1" y="131.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="450.1" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.17%)</title><rect x="447.1" y="115.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="450.1" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.17%)</title><rect x="447.1" y="99.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="450.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.17%)</title><rect x="447.1" y="83.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="450.1" y="94.0"></text>
</g>
<g>
<title>__cxx_global_var_init (1 samples, 0.17%)</title><rect x="447.1" y="67.0" width="2.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="450.1" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.66%)</title><rect x="449.1" y="115.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.1" y="126.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (4 samples, 0.66%)</title><rect x="449.1" y="99.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="452.1" y="110.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (4 samples, 0.66%)</title><rect x="449.1" y="83.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="452.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (4 samples, 0.66%)</title><rect x="449.1" y="67.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="452.1" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.17%)</title><rect x="456.9" y="275.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.9" y="286.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.17%)</title><rect x="456.9" y="259.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.entity (22 samples, 3.65%)</title><rect x="458.9" y="275.0" width="43.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.9" y="286.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.upsert (21 samples, 3.49%)</title><rect x="460.8" y="259.0" width="41.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="463.8" y="270.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.upsert (21 samples, 3.49%)</title><rect x="460.8" y="243.0" width="41.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="463.8" y="254.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.33%)</title><rect x="460.8" y="227.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="463.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.33%)</title><rect x="460.8" y="211.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.33%)</title><rect x="460.8" y="195.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.8" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.17%)</title><rect x="460.8" y="179.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.17%)</title><rect x="460.8" y="163.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="463.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.17%)</title><rect x="462.8" y="179.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="465.8" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.17%)</title><rect x="462.8" y="163.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.8" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.17%)</title><rect x="462.8" y="147.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="465.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTable.upsert (19 samples, 3.16%)</title><rect x="464.8" y="227.0" width="37.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.8" y="238.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (16 samples, 2.66%)</title><rect x="464.8" y="211.0" width="31.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.8" y="222.0">ja..</text>
</g>
<g>
<title>__cxx_global_var_init (2 samples, 0.33%)</title><rect x="464.8" y="195.0" width="3.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="467.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (14 samples, 2.33%)</title><rect x="468.7" y="195.0" width="27.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.7" y="206.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (11 samples, 1.83%)</title><rect x="474.6" y="179.0" width="21.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.6" y="190.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 1.83%)</title><rect x="474.6" y="163.0" width="21.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.6" y="174.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 1.83%)</title><rect x="474.6" y="147.0" width="21.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="477.6" y="158.0">j..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (11 samples, 1.83%)</title><rect x="474.6" y="131.0" width="21.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="477.6" y="142.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/Item.of (3 samples, 0.50%)</title><rect x="496.1" y="211.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.1" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.50%)</title><rect x="496.1" y="195.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.1" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.50%)</title><rect x="496.1" y="179.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.1" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.50%)</title><rect x="496.1" y="163.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="499.1" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.50%)</title><rect x="496.1" y="147.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.1" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.50%)</title><rect x="496.1" y="131.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="499.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.50%)</title><rect x="496.1" y="115.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="499.1" y="126.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.17%)</title><rect x="500.0" y="99.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="503.0" y="110.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.33%)</title><rect x="502.0" y="291.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="505.0" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.33%)</title><rect x="502.0" y="275.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.0" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.17%)</title><rect x="502.0" y="259.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.0" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.17%)</title><rect x="504.0" y="259.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="507.0" y="270.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.17%)</title><rect x="504.0" y="243.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.17%)</title><rect x="504.0" y="227.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="507.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 1.00%)</title><rect x="505.9" y="323.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="508.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.17%)</title><rect x="507.9" y="307.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.17%)</title><rect x="507.9" y="291.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="510.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.17%)</title><rect x="507.9" y="275.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="510.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.17%)</title><rect x="507.9" y="259.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="510.9" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.17%)</title><rect x="507.9" y="243.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="510.9" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.17%)</title><rect x="509.8" y="307.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="512.8" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.17%)</title><rect x="509.8" y="291.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.8" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.50%)</title><rect x="511.8" y="307.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.17%)</title><rect x="517.7" y="323.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.7" y="334.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.17%)</title><rect x="517.7" y="307.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.7" y="318.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.17%)</title><rect x="517.7" y="291.0" width="1.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="520.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.50%)</title><rect x="519.6" y="323.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="522.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.17%)</title><rect x="521.6" y="307.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.17%)</title><rect x="521.6" y="291.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.6" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.17%)</title><rect x="523.6" y="307.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="526.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.17%)</title><rect x="523.6" y="291.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="526.6" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.83%)</title><rect x="525.5" y="323.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="528.5" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.33%)</title><rect x="531.4" y="307.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.4" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (25 samples, 4.15%)</title><rect x="535.3" y="339.0" width="49.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.3" y="350.0">one/n..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (25 samples, 4.15%)</title><rect x="535.3" y="323.0" width="49.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="538.3" y="334.0">one/n..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (25 samples, 4.15%)</title><rect x="535.3" y="307.0" width="49.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="538.3" y="318.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 4.15%)</title><rect x="535.3" y="291.0" width="49.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.3" y="302.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 4.15%)</title><rect x="535.3" y="275.0" width="49.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="538.3" y="286.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (21 samples, 3.49%)</title><rect x="535.3" y="259.0" width="41.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="538.3" y="270.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (21 samples, 3.49%)</title><rect x="535.3" y="243.0" width="41.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.3" y="254.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (20 samples, 3.32%)</title><rect x="537.3" y="227.0" width="39.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.3" y="238.0">sun..</text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.17%)</title><rect x="543.2" y="211.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="546.2" y="222.0"></text>
</g>
<g>
<title>read (16 samples, 2.66%)</title><rect x="545.1" y="211.0" width="31.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="548.1" y="222.0">read</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.66%)</title><rect x="576.5" y="259.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="579.5" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.66%)</title><rect x="576.5" y="243.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.5" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.66%)</title><rect x="576.5" y="227.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="579.5" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (4 samples, 0.66%)</title><rect x="576.5" y="211.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.5" y="222.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.50%)</title><rect x="578.4" y="195.0" width="5.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="581.4" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=24579] (150 samples, 24.92%)</title><rect x="584.3" y="403.0" width="294.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="587.3" y="414.0">[NIO Selector #2 tid=24579]</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.17%)</title><rect x="584.3" y="387.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="587.3" y="398.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (149 samples, 24.75%)</title><rect x="586.3" y="387.0" width="292.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="589.3" y="398.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.33%)</title><rect x="598.0" y="371.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (69 samples, 11.46%)</title><rect x="602.0" y="371.0" width="135.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="605.0" y="382.0">one/nio/net/JavaS..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 0.17%)</title><rect x="602.0" y="355.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (68 samples, 11.30%)</title><rect x="603.9" y="355.0" width="133.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.9" y="366.0">sun/nio/ch/Select..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (68 samples, 11.30%)</title><rect x="603.9" y="339.0" width="133.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.9" y="350.0">sun/nio/ch/Select..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (68 samples, 11.30%)</title><rect x="603.9" y="323.0" width="133.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.9" y="334.0">sun/nio/ch/KQueue..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (66 samples, 10.96%)</title><rect x="603.9" y="307.0" width="129.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.9" y="318.0">sun/nio/ch/KQueu..</text>
</g>
<g>
<title>kevent (63 samples, 10.47%)</title><rect x="609.8" y="291.0" width="123.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="612.8" y="302.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1 samples, 0.17%)</title><rect x="733.3" y="307.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="736.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.17%)</title><rect x="733.3" y="291.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.3" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.17%)</title><rect x="733.3" y="275.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="736.3" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.17%)</title><rect x="733.3" y="259.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="736.3" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.17%)</title><rect x="733.3" y="243.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (1 samples, 0.17%)</title><rect x="735.2" y="307.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="738.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.17%)</title><rect x="735.2" y="291.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="738.2" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (72 samples, 11.96%)</title><rect x="737.2" y="371.0" width="141.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.2" y="382.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (72 samples, 11.96%)</title><rect x="737.2" y="355.0" width="141.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="740.2" y="366.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (62 samples, 10.30%)</title><rect x="737.2" y="339.0" width="121.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.2" y="350.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (58 samples, 9.63%)</title><rect x="737.2" y="323.0" width="113.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="740.2" y="334.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (58 samples, 9.63%)</title><rect x="737.2" y="307.0" width="113.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.2" y="318.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (57 samples, 9.47%)</title><rect x="737.2" y="291.0" width="111.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.2" y="302.0">RequestHandle..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (47 samples, 7.81%)</title><rect x="737.2" y="275.0" width="92.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.2" y="286.0">one/nio/htt..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.17%)</title><rect x="737.2" y="259.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.2" y="270.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.17%)</title><rect x="737.2" y="243.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.2" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.17%)</title><rect x="737.2" y="227.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (46 samples, 7.64%)</title><rect x="739.2" y="259.0" width="90.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="742.2" y="270.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.17%)</title><rect x="739.2" y="243.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.2" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (45 samples, 7.48%)</title><rect x="741.1" y="243.0" width="88.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.1" y="254.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.17%)</title><rect x="745.0" y="227.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.0" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (42 samples, 6.98%)</title><rect x="747.0" y="227.0" width="82.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.0" y="238.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (41 samples, 6.81%)</title><rect x="749.0" y="211.0" width="80.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.0" y="222.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (41 samples, 6.81%)</title><rect x="749.0" y="195.0" width="80.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.0" y="206.0">one/nio/n..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (41 samples, 6.81%)</title><rect x="749.0" y="179.0" width="80.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="752.0" y="190.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (41 samples, 6.81%)</title><rect x="749.0" y="163.0" width="80.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="752.0" y="174.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (41 samples, 6.81%)</title><rect x="749.0" y="147.0" width="80.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.0" y="158.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (38 samples, 6.31%)</title><rect x="749.0" y="131.0" width="74.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="752.0" y="142.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (38 samples, 6.31%)</title><rect x="749.0" y="115.0" width="74.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.0" y="126.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (38 samples, 6.31%)</title><rect x="749.0" y="99.0" width="74.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="752.0" y="110.0">sun/nio/..</text>
</g>
<g>
<title>write (34 samples, 5.65%)</title><rect x="756.8" y="83.0" width="66.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="759.8" y="94.0">write</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.50%)</title><rect x="823.5" y="131.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.5" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.33%)</title><rect x="823.5" y="115.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.5" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.33%)</title><rect x="823.5" y="99.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.33%)</title><rect x="823.5" y="83.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="826.5" y="94.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.17%)</title><rect x="825.4" y="67.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="828.4" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.17%)</title><rect x="827.4" y="115.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.4" y="126.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.17%)</title><rect x="827.4" y="99.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.4" y="110.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.17%)</title><rect x="827.4" y="83.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.17%)</title><rect x="827.4" y="67.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="830.4" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.17%)</title><rect x="829.3" y="275.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="832.3" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.17%)</title><rect x="829.3" y="259.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.17%)</title><rect x="829.3" y="243.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="832.3" y="254.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.17%)</title><rect x="829.3" y="227.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="832.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.entity (9 samples, 1.50%)</title><rect x="831.3" y="275.0" width="17.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.upsert (9 samples, 1.50%)</title><rect x="831.3" y="259.0" width="17.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="834.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.upsert (9 samples, 1.50%)</title><rect x="831.3" y="243.0" width="17.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.50%)</title><rect x="831.3" y="227.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.50%)</title><rect x="831.3" y="211.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.50%)</title><rect x="831.3" y="195.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="834.3" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.33%)</title><rect x="831.3" y="179.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="834.3" y="190.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.17%)</title><rect x="833.3" y="163.0" width="1.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="836.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.17%)</title><rect x="835.2" y="179.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTable.upsert (6 samples, 1.00%)</title><rect x="837.2" y="227.0" width="11.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="840.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 1.00%)</title><rect x="837.2" y="211.0" width="11.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (4 samples, 0.66%)</title><rect x="841.1" y="195.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="844.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.17%)</title><rect x="843.1" y="179.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.17%)</title><rect x="843.1" y="163.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.1" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.17%)</title><rect x="843.1" y="147.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="846.1" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.17%)</title><rect x="843.1" y="131.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="846.1" y="142.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.17%)</title><rect x="843.1" y="115.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.33%)</title><rect x="845.0" y="179.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="848.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.33%)</title><rect x="845.0" y="163.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.0" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.33%)</title><rect x="845.0" y="147.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="848.0" y="158.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.33%)</title><rect x="845.0" y="131.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.17%)</title><rect x="848.9" y="291.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="851.9" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.17%)</title><rect x="848.9" y="275.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="851.9" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.17%)</title><rect x="848.9" y="259.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="851.9" y="270.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.17%)</title><rect x="848.9" y="243.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.9" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.17%)</title><rect x="848.9" y="227.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.17%)</title><rect x="850.9" y="323.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.9" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.17%)</title><rect x="850.9" y="307.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.17%)</title><rect x="852.9" y="323.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.9" y="334.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.17%)</title><rect x="852.9" y="307.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.9" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.33%)</title><rect x="854.8" y="323.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="857.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (10 samples, 1.66%)</title><rect x="858.7" y="339.0" width="19.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="861.7" y="350.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (10 samples, 1.66%)</title><rect x="858.7" y="323.0" width="19.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (10 samples, 1.66%)</title><rect x="858.7" y="307.0" width="19.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="861.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 1.66%)</title><rect x="858.7" y="291.0" width="19.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 1.66%)</title><rect x="858.7" y="275.0" width="19.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="861.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 1.50%)</title><rect x="858.7" y="259.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="861.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (9 samples, 1.50%)</title><rect x="858.7" y="243.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="861.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (9 samples, 1.50%)</title><rect x="858.7" y="227.0" width="17.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="861.7" y="238.0"></text>
</g>
<g>
<title>read (5 samples, 0.83%)</title><rect x="866.6" y="211.0" width="9.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="869.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.17%)</title><rect x="876.4" y="259.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="879.4" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.17%)</title><rect x="876.4" y="243.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="879.4" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.17%)</title><rect x="876.4" y="227.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="879.4" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.17%)</title><rect x="876.4" y="211.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="879.4" y="222.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25091] (148 samples, 24.58%)</title><rect x="878.3" y="403.0" width="290.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="881.3" y="414.0">[NIO Selector #3 tid=25091]</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (3 samples, 0.50%)</title><rect x="878.3" y="387.0" width="5.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="881.3" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.17%)</title><rect x="880.3" y="371.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="883.3" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.17%)</title><rect x="882.3" y="371.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="885.3" y="382.0"></text>
</g>
<g>
<title>update_heuristics(oopDesc*, bool) (1 samples, 0.17%)</title><rect x="882.3" y="355.0" width="1.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="885.3" y="366.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.83%)</title><rect x="884.2" y="387.0" width="9.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="887.2" y="398.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (5 samples, 0.83%)</title><rect x="884.2" y="371.0" width="9.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="887.2" y="382.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.17%)</title><rect x="884.2" y="355.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="887.2" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.17%)</title><rect x="886.2" y="355.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="889.2" y="366.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (3 samples, 0.50%)</title><rect x="888.1" y="355.0" width="5.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="891.1" y="366.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.33%)</title><rect x="894.0" y="387.0" width="3.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="897.0" y="398.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (138 samples, 22.92%)</title><rect x="897.9" y="387.0" width="270.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.9" y="398.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (78 samples, 12.96%)</title><rect x="911.7" y="371.0" width="152.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="914.7" y="382.0">one/nio/net/JavaSel..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (77 samples, 12.79%)</title><rect x="911.7" y="355.0" width="150.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.7" y="366.0">sun/nio/ch/Selector..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (77 samples, 12.79%)</title><rect x="911.7" y="339.0" width="150.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="914.7" y="350.0">sun/nio/ch/Selector..</text>
</g>
<g>
<title>monitorexit_nofpu Runtime1 stub (1 samples, 0.17%)</title><rect x="913.6" y="323.0" width="2.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="916.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (75 samples, 12.46%)</title><rect x="915.6" y="323.0" width="147.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="918.6" y="334.0">sun/nio/ch/KQueueSe..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (68 samples, 11.30%)</title><rect x="917.5" y="307.0" width="133.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.5" y="318.0">sun/nio/ch/KQueue..</text>
</g>
<g>
<title>kevent (66 samples, 10.96%)</title><rect x="921.5" y="291.0" width="129.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="924.5" y="302.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (6 samples, 1.00%)</title><rect x="1050.8" y="307.0" width="11.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1053.8" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.33%)</title><rect x="1052.8" y="291.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.8" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.33%)</title><rect x="1052.8" y="275.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.8" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.33%)</title><rect x="1052.8" y="259.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.50%)</title><rect x="1056.7" y="291.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1059.7" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.50%)</title><rect x="1056.7" y="275.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1059.7" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.50%)</title><rect x="1056.7" y="259.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1059.7" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.50%)</title><rect x="1056.7" y="243.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1059.7" y="254.0"></text>
</g>
<g>
<title>svcudp_op (1 samples, 0.17%)</title><rect x="1062.6" y="355.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1065.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (53 samples, 8.80%)</title><rect x="1064.6" y="371.0" width="103.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1067.6" y="382.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (53 samples, 8.80%)</title><rect x="1064.6" y="355.0" width="103.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1067.6" y="366.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (46 samples, 7.64%)</title><rect x="1064.6" y="339.0" width="90.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1067.6" y="350.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (41 samples, 6.81%)</title><rect x="1064.6" y="323.0" width="80.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1067.6" y="334.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (41 samples, 6.81%)</title><rect x="1064.6" y="307.0" width="80.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1067.6" y="318.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (41 samples, 6.81%)</title><rect x="1064.6" y="291.0" width="80.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1067.6" y="302.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (26 samples, 4.32%)</title><rect x="1064.6" y="275.0" width="50.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1067.6" y="286.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (26 samples, 4.32%)</title><rect x="1064.6" y="259.0" width="50.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1067.6" y="270.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.17%)</title><rect x="1064.6" y="243.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1067.6" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (25 samples, 4.15%)</title><rect x="1066.5" y="243.0" width="49.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1069.5" y="254.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (25 samples, 4.15%)</title><rect x="1066.5" y="227.0" width="49.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.5" y="238.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (25 samples, 4.15%)</title><rect x="1066.5" y="211.0" width="49.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.5" y="222.0">one/n..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (25 samples, 4.15%)</title><rect x="1066.5" y="195.0" width="49.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.5" y="206.0">one/n..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (25 samples, 4.15%)</title><rect x="1066.5" y="179.0" width="49.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1069.5" y="190.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (25 samples, 4.15%)</title><rect x="1066.5" y="163.0" width="49.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1069.5" y="174.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (25 samples, 4.15%)</title><rect x="1066.5" y="147.0" width="49.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1069.5" y="158.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (25 samples, 4.15%)</title><rect x="1066.5" y="131.0" width="49.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1069.5" y="142.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (25 samples, 4.15%)</title><rect x="1066.5" y="115.0" width="49.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.5" y="126.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (25 samples, 4.15%)</title><rect x="1066.5" y="99.0" width="49.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1069.5" y="110.0">sun/n..</text>
</g>
<g>
<title>write (24 samples, 3.99%)</title><rect x="1068.5" y="83.0" width="47.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1071.5" y="94.0">write</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.33%)</title><rect x="1115.5" y="275.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1118.5" y="286.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.17%)</title><rect x="1117.5" y="259.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1120.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.17%)</title><rect x="1117.5" y="243.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.entity (13 samples, 2.16%)</title><rect x="1119.4" y="275.0" width="25.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.4" y="286.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.upsert (13 samples, 2.16%)</title><rect x="1119.4" y="259.0" width="25.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.4" y="270.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.upsert (13 samples, 2.16%)</title><rect x="1119.4" y="243.0" width="25.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.4" y="254.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.50%)</title><rect x="1119.4" y="227.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.50%)</title><rect x="1119.4" y="211.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1122.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.50%)</title><rect x="1119.4" y="195.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.4" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.33%)</title><rect x="1119.4" y="179.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.17%)</title><rect x="1123.4" y="179.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1126.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTable.upsert (10 samples, 1.66%)</title><rect x="1125.3" y="227.0" width="19.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (9 samples, 1.50%)</title><rect x="1125.3" y="211.0" width="17.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.3" y="222.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.17%)</title><rect x="1125.3" y="195.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1128.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 1.33%)</title><rect x="1127.3" y="195.0" width="15.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1130.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 1.16%)</title><rect x="1129.2" y="179.0" width="13.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1132.2" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 1.16%)</title><rect x="1129.2" y="163.0" width="13.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1132.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 1.16%)</title><rect x="1129.2" y="147.0" width="13.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.2" y="158.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 1.16%)</title><rect x="1129.2" y="131.0" width="13.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1132.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/Item.of (1 samples, 0.17%)</title><rect x="1143.0" y="211.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1146.0" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.17%)</title><rect x="1143.0" y="195.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1146.0" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.17%)</title><rect x="1143.0" y="179.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1146.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.17%)</title><rect x="1143.0" y="163.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.0" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.17%)</title><rect x="1143.0" y="147.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1146.0" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.17%)</title><rect x="1143.0" y="131.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1146.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.17%)</title><rect x="1143.0" y="115.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1146.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.17%)</title><rect x="1144.9" y="323.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1147.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.17%)</title><rect x="1144.9" y="307.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1147.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.17%)</title><rect x="1144.9" y="291.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1147.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.17%)</title><rect x="1144.9" y="275.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1147.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.17%)</title><rect x="1144.9" y="259.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1147.9" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.17%)</title><rect x="1144.9" y="243.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1147.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.17%)</title><rect x="1146.9" y="323.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1149.9" y="334.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.17%)</title><rect x="1146.9" y="307.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1149.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.33%)</title><rect x="1148.8" y="323.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1151.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.33%)</title><rect x="1148.8" y="307.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1151.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.33%)</title><rect x="1148.8" y="291.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1151.8" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.17%)</title><rect x="1152.8" y="323.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1155.8" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.17%)</title><rect x="1152.8" y="307.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.8" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 1.16%)</title><rect x="1154.7" y="339.0" width="13.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1157.7" y="350.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (7 samples, 1.16%)</title><rect x="1154.7" y="323.0" width="13.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (7 samples, 1.16%)</title><rect x="1154.7" y="307.0" width="13.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 1.16%)</title><rect x="1154.7" y="291.0" width="13.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 1.16%)</title><rect x="1154.7" y="275.0" width="13.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1157.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 1.16%)</title><rect x="1154.7" y="259.0" width="13.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1157.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (7 samples, 1.16%)</title><rect x="1154.7" y="243.0" width="13.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (6 samples, 1.00%)</title><rect x="1156.7" y="227.0" width="11.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1159.7" y="238.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.17%)</title><rect x="1156.7" y="211.0" width="1.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1159.7" y="222.0"></text>
</g>
<g>
<title>read (5 samples, 0.83%)</title><rect x="1158.6" y="211.0" width="9.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1161.6" y="222.0"></text>
</g>
<g>
<title>[tid=20227] (2 samples, 0.33%)</title><rect x="1168.4" y="403.0" width="4.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1171.4" y="414.0"></text>
</g>
<g>
<title>thread_start (2 samples, 0.33%)</title><rect x="1168.4" y="387.0" width="4.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1171.4" y="398.0"></text>
</g>
<g>
<title>_pthread_start (2 samples, 0.33%)</title><rect x="1168.4" y="371.0" width="4.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1171.4" y="382.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.33%)</title><rect x="1168.4" y="355.0" width="4.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1171.4" y="366.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.33%)</title><rect x="1168.4" y="339.0" width="4.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.4" y="350.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.33%)</title><rect x="1168.4" y="323.0" width="4.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.4" y="334.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.33%)</title><rect x="1168.4" y="307.0" width="4.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1171.4" y="318.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sleep_before_next_cycle() (2 samples, 0.33%)</title><rect x="1168.4" y="291.0" width="4.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.4" y="302.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.33%)</title><rect x="1168.4" y="275.0" width="4.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1171.4" y="286.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.33%)</title><rect x="1168.4" y="259.0" width="4.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.4" y="270.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.33%)</title><rect x="1168.4" y="243.0" width="4.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.4" y="254.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.33%)</title><rect x="1168.4" y="227.0" width="4.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1171.4" y="238.0"></text>
</g>
<g>
<title>[tid=21763] (4 samples, 0.66%)</title><rect x="1172.4" y="403.0" width="7.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1175.4" y="414.0"></text>
</g>
<g>
<title>thread_start (4 samples, 0.66%)</title><rect x="1172.4" y="387.0" width="7.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1175.4" y="398.0"></text>
</g>
<g>
<title>_pthread_start (4 samples, 0.66%)</title><rect x="1172.4" y="371.0" width="7.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1175.4" y="382.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.66%)</title><rect x="1172.4" y="355.0" width="7.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1175.4" y="366.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.66%)</title><rect x="1172.4" y="339.0" width="7.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.4" y="350.0"></text>
</g>
<g>
<title>JavaThread::run() (4 samples, 0.66%)</title><rect x="1172.4" y="323.0" width="7.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.4" y="334.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (4 samples, 0.66%)</title><rect x="1172.4" y="307.0" width="7.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.4" y="318.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (4 samples, 0.66%)</title><rect x="1172.4" y="291.0" width="7.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.4" y="302.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (4 samples, 0.66%)</title><rect x="1172.4" y="275.0" width="7.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.4" y="286.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (3 samples, 0.50%)</title><rect x="1172.4" y="259.0" width="5.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.4" y="270.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (3 samples, 0.50%)</title><rect x="1172.4" y="243.0" width="5.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.4" y="254.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (3 samples, 0.50%)</title><rect x="1172.4" y="227.0" width="5.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.4" y="238.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.17%)</title><rect x="1172.4" y="211.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.4" y="222.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.17%)</title><rect x="1172.4" y="195.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.4" y="206.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.17%)</title><rect x="1172.4" y="179.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.4" y="190.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1 samples, 0.17%)</title><rect x="1174.3" y="211.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.3" y="222.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.17%)</title><rect x="1174.3" y="195.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.3" y="206.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.17%)</title><rect x="1174.3" y="179.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.3" y="190.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.17%)</title><rect x="1174.3" y="163.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.3" y="174.0"></text>
</g>
<g>
<title>PhasePeephole::PhasePeephole(PhaseRegAlloc*, PhaseCFG&amp;) (1 samples, 0.17%)</title><rect x="1176.3" y="211.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.3" y="222.0"></text>
</g>
<g>
<title>PhaseTransform::PhaseTransform(Phase::PhaseNumber) (1 samples, 0.17%)</title><rect x="1176.3" y="195.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.3" y="206.0"></text>
</g>
<g>
<title>Type_Array::grow(unsigned int) (1 samples, 0.17%)</title><rect x="1176.3" y="179.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.3" y="190.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.17%)</title><rect x="1176.3" y="163.0" width="1.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1179.3" y="174.0"></text>
</g>
<g>
<title>CompilationLog::log_compile(JavaThread*, CompileTask*) (1 samples, 0.17%)</title><rect x="1178.2" y="259.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.2" y="270.0"></text>
</g>
<g>
<title>CompileTask::print(outputStream*, char const*, bool, bool) (1 samples, 0.17%)</title><rect x="1178.2" y="243.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.2" y="254.0"></text>
</g>
<g>
<title>CompileTask::print_impl(outputStream*, Method*, int, int, bool, int, bool, char const*, bool, bool) (1 samples, 0.17%)</title><rect x="1178.2" y="227.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.2" y="238.0"></text>
</g>
<g>
<title>Method::print_short_name(outputStream*) (1 samples, 0.17%)</title><rect x="1178.2" y="211.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.2" y="222.0"></text>
</g>
<g>
<title>Symbol::print_symbol_on(outputStream*) const (1 samples, 0.17%)</title><rect x="1178.2" y="195.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.2" y="206.0"></text>
</g>
<g>
<title>os::strdup(char const*, MemoryType) (1 samples, 0.17%)</title><rect x="1178.2" y="179.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.2" y="190.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType) (1 samples, 0.17%)</title><rect x="1178.2" y="163.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.2" y="174.0"></text>
</g>
<g>
<title>[tid=41475] (5 samples, 0.83%)</title><rect x="1180.2" y="403.0" width="9.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1183.2" y="414.0"></text>
</g>
<g>
<title>thread_start (5 samples, 0.83%)</title><rect x="1180.2" y="387.0" width="9.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1183.2" y="398.0"></text>
</g>
<g>
<title>_pthread_start (5 samples, 0.83%)</title><rect x="1180.2" y="371.0" width="9.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1183.2" y="382.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.83%)</title><rect x="1180.2" y="355.0" width="9.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1183.2" y="366.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.83%)</title><rect x="1180.2" y="339.0" width="9.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.2" y="350.0"></text>
</g>
<g>
<title>WatcherThread::run() (5 samples, 0.83%)</title><rect x="1180.2" y="323.0" width="9.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.2" y="334.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (5 samples, 0.83%)</title><rect x="1180.2" y="307.0" width="9.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.2" y="318.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (5 samples, 0.83%)</title><rect x="1180.2" y="291.0" width="9.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.2" y="302.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (5 samples, 0.83%)</title><rect x="1180.2" y="275.0" width="9.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.2" y="286.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (5 samples, 0.83%)</title><rect x="1180.2" y="259.0" width="9.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.2" y="270.0"></text>
</g>
<g>
<title>__psynch_cvwait (5 samples, 0.83%)</title><rect x="1180.2" y="243.0" width="9.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1183.2" y="254.0"></text>
</g>
</g>
</svg>
