<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390"
     xmlns="http://www.w3.org/2000/svg">
    <style type="text/css">
        text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
        #search { opacity:0.1; cursor:pointer; }
        #search:hover, #search.show { opacity:1; }
        #subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
        #title { text-anchor:middle; font-size:17px}
        #unzoom { cursor:pointer; }
        #frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
        .hide { display:none; }
        .parent { opacity:0.5; }
    </style>
    <script type="text/ecmascript">
        <![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
    </script>
    <rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
    <text id="title" x="600" y="24">Flame Graph</text>
    <text id="details" x="10" y="373"></text>
    <text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
    <text id="search" x="1090" y="24">Search</text>
    <text id="matched" x="1090" y="373"></text>
    <g id="frames">
        <g>
            <title>all (31,137 samples, 100.00%)</title>
            <rect x="10.0" y="339.0" width="1180.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="13.0" y="350.0">all</text>
        </g>
        <g>
            <title>java/lang/Thread.run (18,895 samples, 60.68%)</title>
            <rect x="10.0" y="323.0" width="716.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="13.0" y="334.0">java/lang/Thread.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.run (18,895 samples, 60.68%)</title>
            <rect x="10.0" y="307.0" width="716.1" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="13.0" y="318.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.runWorker (18,895 samples, 60.68%)</title>
            <rect x="10.0" y="291.0" width="716.1" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="13.0" y="302.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.getTask (556 samples, 1.79%)</title>
            <rect x="10.0" y="275.0" width="21.1" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="13.0" y="286.0">j..</text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.take (556 samples, 1.79%)</title>
            <rect x="10.0" y="259.0" width="21.1" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="13.0" y="270.0">j..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (540 samples, 1.73%)
            </title>
            <rect x="10.0" y="243.0" width="20.5" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="13.0" y="254.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (540
                samples, 1.73%)
            </title>
            <rect x="10.0" y="227.0" width="20.5" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="13.0" y="238.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (540 samples, 1.73%)</title>
            <rect x="10.0" y="211.0" width="20.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
            <text x="13.0" y="222.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (16 samples, 0.05%)</title>
            <rect x="30.5" y="243.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="33.5" y="254.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (16 samples, 0.05%)
            </title>
            <rect x="30.5" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="33.5" y="238.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (16 samples, 0.05%)
            </title>
            <rect x="30.5" y="211.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="33.5" y="222.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (16 samples, 0.05%)</title>
            <rect x="30.5" y="195.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="33.5" y="206.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (16 samples, 0.05%)</title>
            <rect x="30.5" y="179.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
            <text x="33.5" y="190.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$73/753104640.run (18,339 samples, 58.90%)</title>
            <rect x="31.1" y="275.0" width="695.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="34.1" y="286.0">ru/mail/polis/service/rubtsov/MyService$$Lambda$73/753104640.run</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$3 (18,339 samples, 58.90%)</title>
            <rect x="31.1" y="259.0" width="695.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="34.1" y="270.0">ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$3</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.sendResponse (3,956 samples, 12.71%)</title>
            <rect x="31.1" y="243.0" width="149.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="34.1" y="254.0">one/nio/http/HttpSe..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.writeResponse (3,014 samples, 9.68%)</title>
            <rect x="31.1" y="227.0" width="114.2" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="34.1" y="238.0">one/nio/http/H..</text>
        </g>
        <g>
            <title>one/nio/http/Response.toBytes (1,515 samples, 4.87%)</title>
            <rect x="31.1" y="211.0" width="57.4" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="34.1" y="222.0">one/ni..</text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,515 samples, 4.87%)</title>
            <rect x="31.1" y="195.0" width="57.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="34.1" y="206.0">one/ni..</text>
        </g>
        <g>
            <title>byte[] (1,515 samples, 4.87%)</title>
            <rect x="31.1" y="179.0" width="57.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
            <text x="34.1" y="190.0">byte[]</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (1,499 samples, 4.81%)</title>
            <rect x="88.5" y="211.0" width="56.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="91.5" y="222.0">one/ni..</text>
        </g>
        <g>
            <title>one.nio.net.Session$ArrayQueueItem (704 samples, 2.26%)</title>
            <rect x="88.5" y="195.0" width="26.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
            <text x="91.5" y="206.0">o..</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (795 samples, 2.55%)</title>
            <rect x="115.2" y="195.0" width="30.1" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="118.2" y="206.0">on..</text>
        </g>
        <g>
            <title>one/nio/net/Session$ArrayQueueItem.write (795 samples, 2.55%)</title>
            <rect x="115.2" y="179.0" width="30.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="118.2" y="190.0">on..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.write (795 samples, 2.55%)</title>
            <rect x="115.2" y="163.0" width="30.1" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="118.2" y="174.0">on..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (795 samples, 2.55%)</title>
            <rect x="115.2" y="147.0" width="30.1" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="118.2" y="158.0">ja..</text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (795 samples, 2.55%)</title>
            <rect x="115.2" y="131.0" width="30.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
            <text x="118.2" y="142.0">ja..</text>
        </g>
        <g>
            <title>one/nio/http/Request.getHeader (942 samples, 3.03%)</title>
            <rect x="145.3" y="227.0" width="35.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="148.3" y="238.0">one..</text>
        </g>
        <g>
            <title>java/lang/String.substring (942 samples, 3.03%)</title>
            <rect x="145.3" y="211.0" width="35.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="148.3" y="222.0">jav..</text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (942 samples, 3.03%)</title>
            <rect x="145.3" y="195.0" width="35.7" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="148.3" y="206.0">jav..</text>
        </g>
        <g>
            <title>java.lang.String (417 samples, 1.34%)</title>
            <rect x="145.3" y="179.0" width="15.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
            <text x="148.3" y="190.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (525 samples, 1.69%)</title>
            <rect x="161.1" y="179.0" width="19.9" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="164.1" y="190.0"></text>
        </g>
        <g>
            <title>byte[] (525 samples, 1.69%)</title>
            <rect x="161.1" y="163.0" width="19.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
            <text x="164.1" y="174.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$71/2012764883.act (14,383 samples, 46.19%)</title>
            <rect x="181.0" y="243.0" width="545.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="184.0" y="254.0">ru/mail/polis/service/rubtsov/MyService$$Lambda$71/2012764883.act</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$1 (14,383 samples, 46.19%)</title>
            <rect x="181.0" y="227.0" width="545.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="184.0" y="238.0">ru/mail/polis/service/rubtsov/MyService.lambda$entity$1</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.upsert (14,383 samples, 46.19%)</title>
            <rect x="181.0" y="211.0" width="545.1" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="184.0" y="222.0">ru/mail/polis/service/rubtsov/MyService.upsert</text>
        </g>
        <g>
            <title>java/lang/String.getBytes (584 samples, 1.88%)</title>
            <rect x="181.1" y="195.0" width="22.2" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="184.1" y="206.0">j..</text>
        </g>
        <g>
            <title>java/lang/StringCoding.encode (584 samples, 1.88%)</title>
            <rect x="181.1" y="179.0" width="22.2" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="184.1" y="190.0">j..</text>
        </g>
        <g>
            <title>java/lang/StringCoding.encodeUTF8 (584 samples, 1.88%)</title>
            <rect x="181.1" y="163.0" width="22.2" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="184.1" y="174.0">j..</text>
        </g>
        <g>
            <title>java/util/Arrays.copyOf (584 samples, 1.88%)</title>
            <rect x="181.1" y="147.0" width="22.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="184.1" y="158.0">j..</text>
        </g>
        <g>
            <title>byte[] (584 samples, 1.88%)</title>
            <rect x="181.1" y="131.0" width="22.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
            <text x="184.1" y="142.0">b..</text>
        </g>
        <g>
            <title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.06%)</title>
            <rect x="203.3" y="195.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="206.3" y="206.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/LambdaForm$MH/1990160809.invoke (19 samples, 0.06%)</title>
            <rect x="203.3" y="179.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="206.3" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.06%)</title>
            <rect x="203.3" y="163.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="206.3" y="174.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (14 samples, 0.04%)
            </title>
            <rect x="203.5" y="147.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="206.5" y="158.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.allocateUninitializedArray (14 samples, 0.04%)</title>
            <rect x="203.5" y="131.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="206.5" y="142.0"></text>
        </g>
        <g>
            <title>byte[] (14 samples, 0.04%)</title>
            <rect x="203.5" y="115.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
            <text x="206.5" y="126.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (831 samples, 2.67%)</title>
            <rect x="204.0" y="195.0" width="31.5" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="207.0" y="206.0">ja..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (831 samples, 2.67%)</title>
            <rect x="204.0" y="179.0" width="31.5" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="207.0" y="190.0">ja..</text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (831 samples, 2.67%)</title>
            <rect x="204.0" y="163.0" width="31.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
            <text x="207.0" y="174.0">ja..</text>
        </g>
        <g>
            <title>one.nio.http.Response (394 samples, 1.27%)</title>
            <rect x="235.5" y="195.0" width="14.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
            <text x="238.5" y="206.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient.put (8,735 samples, 28.05%)</title>
            <rect x="250.4" y="195.0" width="331.0" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="253.4" y="206.0">one/nio/http/HttpClient.put</text>
        </g>
        <g>
            <title>byte[] (12 samples, 0.04%)</title>
            <rect x="250.4" y="179.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
            <text x="253.4" y="190.0"></text>
        </g>
        <g>
            <title>java.lang.String (7 samples, 0.02%)</title>
            <rect x="250.9" y="179.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
            <text x="253.9" y="190.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient.createRequest (44 samples, 0.14%)</title>
            <rect x="251.1" y="179.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="254.1" y="190.0"></text>
        </g>
        <g>
            <title>one.nio.http.Request (14 samples, 0.04%)</title>
            <rect x="251.1" y="163.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
            <text x="254.1" y="174.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.&lt;init&gt; (30 samples, 0.10%)</title>
            <rect x="251.7" y="163.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="254.7" y="174.0"></text>
        </g>
        <g>
            <title>java.lang.String[] (30 samples, 0.10%)</title>
            <rect x="251.7" y="147.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
            <text x="254.7" y="158.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient.invoke (8,672 samples, 27.85%)</title>
            <rect x="252.8" y="179.0" width="328.6" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="255.8" y="190.0">one/nio/http/HttpClient.invoke</text>
        </g>
        <g>
            <title>one/nio/http/HttpClient.invoke (8,672 samples, 27.85%)</title>
            <rect x="252.8" y="163.0" width="328.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="255.8" y="174.0">one/nio/http/HttpClient.invoke</text>
        </g>
        <g>
            <title>one.nio.http.HttpClient$ResponseReader (34 samples, 0.11%)</title>
            <rect x="252.8" y="147.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
            <text x="255.8" y="158.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (8,266 samples, 26.55%)</title>
            <rect x="254.1" y="147.0" width="313.3" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="257.1" y="158.0">one/nio/http/HttpClient$ResponseReader.&lt;in..</text>
        </g>
        <g>
            <title>byte[] (4,246 samples, 13.64%)</title>
            <rect x="254.1" y="131.0" width="160.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
            <text x="257.1" y="142.0">byte[]</text>
        </g>
        <g>
            <title>byte[] (3,830 samples, 12.30%)</title>
            <rect x="415.0" y="131.0" width="145.2" height="15" fill="#f18d00" rx="2" ry="2"/>
            <text x="418.0" y="142.0">byte[]</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.read (190 samples, 0.61%)</title>
            <rect x="560.2" y="131.0" width="7.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="563.2" y="142.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (190 samples, 0.61%)</title>
            <rect x="560.2" y="115.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="563.2" y="126.0"></text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (190 samples, 0.61%)</title>
            <rect x="560.2" y="99.0" width="7.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
            <text x="563.2" y="110.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.readResponse (245 samples, 0.79%)</title>
            <rect x="567.4" y="147.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="570.4" y="158.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (13 samples, 0.04%)</title>
            <rect x="567.4" y="131.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="570.4" y="142.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (13 samples, 0.04%)</title>
            <rect x="567.4" y="115.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="570.4" y="126.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (11 samples, 0.04%)</title>
            <rect x="567.5" y="99.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="570.5" y="110.0"></text>
        </g>
        <g>
            <title>byte[] (11 samples, 0.04%)</title>
            <rect x="567.5" y="83.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
            <text x="570.5" y="94.0"></text>
        </g>
        <g>
            <title>one.nio.http.Response (9 samples, 0.03%)</title>
            <rect x="567.9" y="131.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
            <text x="570.9" y="142.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.readLine (182 samples, 0.58%)</title>
            <rect x="568.3" y="131.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="571.3" y="142.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (182 samples, 0.58%)</title>
            <rect x="568.3" y="115.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="571.3" y="126.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (182 samples, 0.58%)</title>
            <rect x="568.3" y="99.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="571.3" y="110.0"></text>
        </g>
        <g>
            <title>char[] (111 samples, 0.36%)</title>
            <rect x="568.3" y="83.0" width="4.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
            <text x="571.3" y="94.0"></text>
        </g>
        <g>
            <title>java.lang.String (30 samples, 0.10%)</title>
            <rect x="572.5" y="83.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
            <text x="575.5" y="94.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (41 samples, 0.13%)</title>
            <rect x="573.6" y="83.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="576.6" y="94.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (41 samples, 0.13%)</title>
            <rect x="573.6" y="67.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="576.6" y="78.0"></text>
        </g>
        <g>
            <title>java/lang/StringUTF16.compress (41 samples, 0.13%)</title>
            <rect x="573.6" y="51.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="576.6" y="62.0"></text>
        </g>
        <g>
            <title>byte[] (41 samples, 0.13%)</title>
            <rect x="573.6" y="35.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
            <text x="576.6" y="46.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.&lt;init&gt; (16 samples, 0.05%)</title>
            <rect x="575.2" y="131.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="578.2" y="142.0"></text>
        </g>
        <g>
            <title>java.lang.String[] (16 samples, 0.05%)</title>
            <rect x="575.2" y="115.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
            <text x="578.2" y="126.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.getHeader (23 samples, 0.07%)</title>
            <rect x="575.8" y="131.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="578.8" y="142.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (23 samples, 0.07%)</title>
            <rect x="575.8" y="115.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="578.8" y="126.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (23 samples, 0.07%)</title>
            <rect x="575.8" y="99.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="578.8" y="110.0"></text>
        </g>
        <g>
            <title>java.lang.String (10 samples, 0.03%)</title>
            <rect x="575.8" y="83.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
            <text x="578.8" y="94.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (13 samples, 0.04%)</title>
            <rect x="576.1" y="83.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="579.1" y="94.0"></text>
        </g>
        <g>
            <title>byte[] (13 samples, 0.04%)</title>
            <rect x="576.1" y="67.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
            <text x="579.1" y="78.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.toBytes (39 samples, 0.13%)</title>
            <rect x="576.6" y="147.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="579.6" y="158.0"></text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (39 samples, 0.13%)</title>
            <rect x="576.6" y="131.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="579.6" y="142.0"></text>
        </g>
        <g>
            <title>byte[] (39 samples, 0.13%)</title>
            <rect x="576.6" y="115.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
            <text x="579.6" y="126.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.getHeader (21 samples, 0.07%)</title>
            <rect x="578.1" y="147.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="581.1" y="158.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (21 samples, 0.07%)</title>
            <rect x="578.1" y="131.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="581.1" y="142.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (21 samples, 0.07%)</title>
            <rect x="578.1" y="115.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="581.1" y="126.0"></text>
        </g>
        <g>
            <title>java.lang.String (11 samples, 0.04%)</title>
            <rect x="578.1" y="99.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
            <text x="581.1" y="110.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (10 samples, 0.03%)</title>
            <rect x="578.5" y="99.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="581.5" y="110.0"></text>
        </g>
        <g>
            <title>byte[] (10 samples, 0.03%)</title>
            <rect x="578.5" y="83.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
            <text x="581.5" y="94.0"></text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.writeFully (63 samples, 0.20%)</title>
            <rect x="578.9" y="147.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="581.9" y="158.0"></text>
        </g>
        <g>
            <title>java/nio/channels/Channels$1.write (38 samples, 0.12%)</title>
            <rect x="578.9" y="131.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="581.9" y="142.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (38 samples, 0.12%)</title>
            <rect x="578.9" y="115.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="581.9" y="126.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (38 samples, 0.12%)</title>
            <rect x="578.9" y="99.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="581.9" y="110.0"></text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (38 samples, 0.12%)</title>
            <rect x="578.9" y="83.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
            <text x="581.9" y="94.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SocketAdaptor.getOutputStream (25 samples, 0.08%)</title>
            <rect x="580.4" y="131.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="583.4" y="142.0"></text>
        </g>
        <g>
            <title>java/security/AccessController.doPrivileged (16 samples, 0.05%)</title>
            <rect x="580.4" y="115.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="583.4" y="126.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SocketAdaptor$2.run (16 samples, 0.05%)</title>
            <rect x="580.4" y="99.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="583.4" y="110.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SocketAdaptor$2.run (16 samples, 0.05%)</title>
            <rect x="580.4" y="83.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="583.4" y="94.0"></text>
        </g>
        <g>
            <title>java/nio/channels/Channels.newOutputStream (16 samples, 0.05%)</title>
            <rect x="580.4" y="67.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="583.4" y="78.0"></text>
        </g>
        <g>
            <title>java.nio.channels.Channels$1 (16 samples, 0.05%)</title>
            <rect x="580.4" y="51.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
            <text x="583.4" y="62.0"></text>
        </g>
        <g>
            <title>sun.nio.ch.SocketAdaptor$2 (9 samples, 0.03%)</title>
            <rect x="581.0" y="115.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
            <text x="584.0" y="126.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.&lt;init&gt; (1,644 samples, 5.28%)</title>
            <rect x="581.4" y="195.0" width="62.4" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="584.4" y="206.0">one/ni..</text>
        </g>
        <g>
            <title>byte[] (681 samples, 2.19%)</title>
            <rect x="581.4" y="179.0" width="25.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
            <text x="584.4" y="190.0">b..</text>
        </g>
        <g>
            <title>java.lang.String[] (568 samples, 1.82%)</title>
            <rect x="607.3" y="179.0" width="21.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
            <text x="610.3" y="190.0">j..</text>
        </g>
        <g>
            <title>java.lang.String (395 samples, 1.27%)</title>
            <rect x="628.8" y="179.0" width="15.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
            <text x="631.8" y="190.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MyDAO.upsert (2,164 samples, 6.95%)</title>
            <rect x="643.8" y="195.0" width="82.0" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="646.8" y="206.0">ru/mail/p..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MemTablePool.upsert (2,164 samples, 6.95%)</title>
            <rect x="643.8" y="179.0" width="82.0" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="646.8" y="190.0">ru/mail/p..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (54 samples, 0.17%)</title>
            <rect x="643.8" y="163.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="646.8" y="174.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (54 samples, 0.17%)</title>
            <rect x="643.8" y="147.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="646.8" y="158.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (54 samples, 0.17%)</title>
            <rect x="643.8" y="131.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="646.8" y="142.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.get (42 samples, 0.13%)</title>
            <rect x="643.8" y="115.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="646.8" y="126.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.setInitialValue (42 samples, 0.13%)</title>
            <rect x="643.8" y="99.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="646.8" y="110.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal$ThreadLocalMap.set (22 samples, 0.07%)</title>
            <rect x="643.8" y="83.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="646.8" y="94.0"></text>
        </g>
        <g>
            <title>java.lang.ThreadLocal$ThreadLocalMap$Entry (22 samples, 0.07%)</title>
            <rect x="643.8" y="67.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
            <text x="646.8" y="78.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (20
                samples, 0.06%)
            </title>
            <rect x="644.6" y="83.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="647.6" y="94.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (20
                samples, 0.06%)
            </title>
            <rect x="644.6" y="67.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="647.6" y="78.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (20 samples, 0.06%)</title>
            <rect x="644.6" y="51.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
            <text x="647.6" y="62.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.set (11 samples, 0.04%)</title>
            <rect x="645.3" y="115.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="648.3" y="126.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal$ThreadLocalMap.set (11 samples, 0.04%)</title>
            <rect x="645.3" y="99.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="648.3" y="110.0"></text>
        </g>
        <g>
            <title>java.lang.ThreadLocal$ThreadLocalMap$Entry (11 samples, 0.04%)</title>
            <rect x="645.3" y="83.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
            <text x="648.3" y="94.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MemTable.upsert (2,110 samples, 6.78%)</title>
            <rect x="645.8" y="163.0" width="80.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="648.8" y="174.0">ru/mail/p..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/Item.of (2,110 samples, 6.78%)</title>
            <rect x="645.8" y="147.0" width="80.0" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="648.8" y="158.0">ru/mail/p..</text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.duplicate (1,604 samples, 5.15%)</title>
            <rect x="645.8" y="131.0" width="60.8" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="648.8" y="142.0">java/n..</text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (1,604 samples, 5.15%)</title>
            <rect x="645.8" y="115.0" width="60.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
            <text x="648.8" y="126.0">java.n..</text>
        </g>
        <g>
            <title>ru.mail.polis.dao.rubtsov.Item (506 samples, 1.63%)</title>
            <rect x="706.6" y="131.0" width="19.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
            <text x="709.6" y="142.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/BasicTopology.replicas (8 samples, 0.03%)</title>
            <rect x="725.8" y="195.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="728.8" y="206.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/BasicTopology.replicas (8 samples, 0.03%)</title>
            <rect x="725.8" y="179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="728.8" y="190.0"></text>
        </g>
        <g>
            <title>java.lang.String[] (8 samples, 0.03%)</title>
            <rect x="725.8" y="163.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
            <text x="728.8" y="174.0"></text>
        </g>
        <g>
            <title>one/nio/server/AcceptorThread.run (8 samples, 0.03%)</title>
            <rect x="726.1" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="729.1" y="334.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.createSession (7 samples, 0.02%)</title>
            <rect x="726.1" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="729.1" y="318.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.createSession (7 samples, 0.02%)</title>
            <rect x="726.1" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="729.1" y="302.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/StreamSession.&lt;init&gt; (7 samples, 0.02%)</title>
            <rect x="726.1" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="729.1" y="286.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.&lt;init&gt; (7 samples, 0.02%)</title>
            <rect x="726.1" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="729.1" y="270.0"></text>
        </g>
        <g>
            <title>byte[] (7 samples, 0.02%)</title>
            <rect x="726.1" y="243.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
            <text x="729.1" y="254.0"></text>
        </g>
        <g>
            <title>one/nio/server/SelectorThread.run (12,234 samples, 39.29%)</title>
            <rect x="726.4" y="323.0" width="463.6" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="729.4" y="334.0">one/nio/server/SelectorThread.run</text>
        </g>
        <g>
            <title>one/nio/net/JavaSelector.select (1,200 samples, 3.85%)</title>
            <rect x="726.4" y="307.0" width="45.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="729.4" y="318.0">one/..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSelector.iteratorFor (535 samples, 1.72%)</title>
            <rect x="726.4" y="291.0" width="20.2" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="729.4" y="302.0"></text>
        </g>
        <g>
            <title>one.nio.net.JavaSelector$1 (247 samples, 0.79%)</title>
            <rect x="726.4" y="275.0" width="9.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
            <text x="729.4" y="286.0"></text>
        </g>
        <g>
            <title>one.nio.net.Session[] (288 samples, 0.92%)</title>
            <rect x="735.7" y="275.0" width="10.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
            <text x="738.7" y="286.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.select (663 samples, 2.13%)</title>
            <rect x="746.7" y="291.0" width="25.1" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="749.7" y="302.0">s..</text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.lockAndDoSelect (663 samples, 2.13%)</title>
            <rect x="746.7" y="275.0" width="25.1" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="749.7" y="286.0">s..</text>
        </g>
        <g>
            <title>sun/nio/ch/KQueueSelectorImpl.doSelect (663 samples, 2.13%)</title>
            <rect x="746.7" y="259.0" width="25.1" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="749.7" y="270.0">s..</text>
        </g>
        <g>
            <title>sun/nio/ch/KQueueSelectorImpl.processEvents (663 samples, 2.13%)</title>
            <rect x="746.7" y="243.0" width="25.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="749.7" y="254.0">s..</text>
        </g>
        <g>
            <title>java/lang/Integer.valueOf (161 samples, 0.52%)</title>
            <rect x="746.7" y="227.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="749.7" y="238.0"></text>
        </g>
        <g>
            <title>java.lang.Integer (161 samples, 0.52%)</title>
            <rect x="746.7" y="211.0" width="6.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
            <text x="749.7" y="222.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.processReadyEvents (502 samples, 1.61%)</title>
            <rect x="752.8" y="227.0" width="19.0" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="755.8" y="238.0"></text>
        </g>
        <g>
            <title>java/util/HashSet.add (502 samples, 1.61%)</title>
            <rect x="752.8" y="211.0" width="19.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="755.8" y="222.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.put (502 samples, 1.61%)</title>
            <rect x="752.8" y="195.0" width="19.0" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="755.8" y="206.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.putVal (502 samples, 1.61%)</title>
            <rect x="752.8" y="179.0" width="19.0" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="755.8" y="190.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.newNode (502 samples, 1.61%)</title>
            <rect x="752.8" y="163.0" width="19.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="755.8" y="174.0"></text>
        </g>
        <g>
            <title>java.util.HashMap$Node (502 samples, 1.61%)</title>
            <rect x="752.8" y="147.0" width="19.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
            <text x="755.8" y="158.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.process (11,034 samples, 35.44%)</title>
            <rect x="771.8" y="307.0" width="418.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="774.8" y="318.0">one/nio/net/Session.process</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processRead (11,034 samples, 35.44%)</title>
            <rect x="771.8" y="291.0" width="418.2" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="774.8" y="302.0">one/nio/http/HttpSession.processRead</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processHttpBuffer (10,421 samples, 33.47%)</title>
            <rect x="771.9" y="275.0" width="394.9" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="774.9" y="286.0">one/nio/http/HttpSession.processHttpBuffer</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.handleParsedRequest (2,480 samples, 7.96%)</title>
            <rect x="771.9" y="259.0" width="94.0" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="774.9" y="270.0">one/nio/htt..</text>
        </g>
        <g>
            <title>one/nio/http/HttpServer.handleRequest (2,480 samples, 7.96%)</title>
            <rect x="771.9" y="243.0" width="94.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="774.9" y="254.0">one/nio/htt..</text>
        </g>
        <g>
            <title>RequestHandler2_entity.handleRequest (1,784 samples, 5.73%)</title>
            <rect x="771.9" y="227.0" width="67.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="774.9" y="238.0">Request..</text>
        </g>
        <g>
            <title>one/nio/http/Request.getParameter (589 samples, 1.89%)</title>
            <rect x="771.9" y="211.0" width="22.3" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="774.9" y="222.0">o..</text>
        </g>
        <g>
            <title>java/lang/String.substring (589 samples, 1.89%)</title>
            <rect x="771.9" y="195.0" width="22.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="774.9" y="206.0">j..</text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (589 samples, 1.89%)</title>
            <rect x="771.9" y="179.0" width="22.3" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="774.9" y="190.0">j..</text>
        </g>
        <g>
            <title>java.lang.String (319 samples, 1.02%)</title>
            <rect x="771.9" y="163.0" width="12.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
            <text x="774.9" y="174.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (270 samples, 0.87%)</title>
            <rect x="784.0" y="163.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="787.0" y="174.0"></text>
        </g>
        <g>
            <title>byte[] (270 samples, 0.87%)</title>
            <rect x="784.0" y="147.0" width="10.2" height="15" fill="#60cece" rx="2" ry="2"/>
            <text x="787.0" y="158.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.entity (1,195 samples, 3.84%)</title>
            <rect x="794.2" y="211.0" width="45.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="797.2" y="222.0">ru/m..</text>
        </g>
        <g>
            <title>java/lang/invoke/LambdaForm$MH/309552273.linkToTargetMethod (386 samples, 1.24%)</title>
            <rect x="794.2" y="195.0" width="14.6" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="797.2" y="206.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/LambdaForm$DMH/2060335578.invokeStatic (386 samples, 1.24%)</title>
            <rect x="794.2" y="179.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="797.2" y="190.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$71/2012764883.get$Lambda (386 samples, 1.24%)</title>
            <rect x="794.2" y="163.0" width="14.6" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="797.2" y="174.0"></text>
        </g>
        <g>
            <title>ru.mail.polis.service.rubtsov.MyService$$Lambda$71 (386 samples, 1.24%)</title>
            <rect x="794.2" y="147.0" width="14.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
            <text x="797.2" y="158.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getHeader (246 samples, 0.79%)</title>
            <rect x="808.8" y="195.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="811.8" y="206.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (246 samples, 0.79%)</title>
            <rect x="808.8" y="179.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="811.8" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (246 samples, 0.79%)</title>
            <rect x="808.8" y="163.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="811.8" y="174.0"></text>
        </g>
        <g>
            <title>java.lang.String (139 samples, 0.45%)</title>
            <rect x="808.8" y="147.0" width="5.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
            <text x="811.8" y="158.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (107 samples, 0.34%)</title>
            <rect x="814.1" y="147.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="817.1" y="158.0"></text>
        </g>
        <g>
            <title>byte[] (107 samples, 0.34%)</title>
            <rect x="814.1" y="131.0" width="4.1" height="15" fill="#50bebe" rx="2" ry="2"/>
            <text x="817.1" y="142.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.executeAsync (563 samples, 1.81%)</title>
            <rect x="818.2" y="195.0" width="21.3" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="821.2" y="206.0">r..</text>
        </g>
        <g>
            <title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (299 samples, 0.96%)</title>
            <rect x="818.2" y="179.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="821.2" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (299 samples, 0.96%)</title>
            <rect x="818.2" y="163.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="821.2" y="174.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$73/753104640.get$Lambda (299 samples, 0.96%)</title>
            <rect x="818.2" y="147.0" width="11.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="821.2" y="158.0"></text>
        </g>
        <g>
            <title>ru.mail.polis.service.rubtsov.MyService$$Lambda$73 (299 samples, 0.96%)</title>
            <rect x="818.2" y="131.0" width="11.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
            <text x="821.2" y="142.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.execute (264 samples, 0.85%)</title>
            <rect x="829.5" y="179.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="832.5" y="190.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.offer (264 samples, 0.85%)</title>
            <rect x="829.5" y="163.0" width="10.0" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="832.5" y="174.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.LinkedBlockingQueue$Node (255 samples, 0.82%)</title>
            <rect x="829.5" y="147.0" width="9.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
            <text x="832.5" y="158.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.03%)</title>
            <rect x="839.1" y="147.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="842.1" y="158.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.03%)</title>
            <rect x="839.1" y="131.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="842.1" y="142.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (9 samples, 0.03%)</title>
            <rect x="839.1" y="115.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="842.1" y="126.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (9 samples, 0.03%)</title>
            <rect x="839.1" y="99.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
            <text x="842.1" y="110.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getPath (696 samples, 2.24%)</title>
            <rect x="839.5" y="227.0" width="26.4" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="842.5" y="238.0">o..</text>
        </g>
        <g>
            <title>java/lang/String.substring (696 samples, 2.24%)</title>
            <rect x="839.5" y="211.0" width="26.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="842.5" y="222.0">j..</text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (696 samples, 2.24%)</title>
            <rect x="839.5" y="195.0" width="26.4" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="842.5" y="206.0">j..</text>
        </g>
        <g>
            <title>java.lang.String (311 samples, 1.00%)</title>
            <rect x="839.5" y="179.0" width="11.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
            <text x="842.5" y="190.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (385 samples, 1.24%)</title>
            <rect x="851.3" y="179.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="854.3" y="190.0"></text>
        </g>
        <g>
            <title>byte[] (385 samples, 1.24%)</title>
            <rect x="851.3" y="163.0" width="14.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
            <text x="854.3" y="174.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.parseRequest (2,896 samples, 9.30%)</title>
            <rect x="865.9" y="259.0" width="109.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="868.9" y="270.0">one/nio/http/..</text>
        </g>
        <g>
            <title>one.nio.http.Request (463 samples, 1.49%)</title>
            <rect x="865.9" y="243.0" width="17.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
            <text x="868.9" y="254.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.&lt;init&gt; (961 samples, 3.09%)</title>
            <rect x="883.4" y="243.0" width="36.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="886.4" y="254.0">one..</text>
        </g>
        <g>
            <title>java.lang.String[] (961 samples, 3.09%)</title>
            <rect x="883.4" y="227.0" width="36.4" height="15" fill="#50bebe" rx="2" ry="2"/>
            <text x="886.4" y="238.0">jav..</text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (1,472 samples, 4.73%)</title>
            <rect x="919.8" y="243.0" width="55.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="922.8" y="254.0">one/n..</text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (1,472 samples, 4.73%)</title>
            <rect x="919.8" y="227.0" width="55.8" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="922.8" y="238.0">one/n..</text>
        </g>
        <g>
            <title>char[] (697 samples, 2.24%)</title>
            <rect x="919.8" y="211.0" width="26.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
            <text x="922.8" y="222.0">c..</text>
        </g>
        <g>
            <title>java.lang.String (294 samples, 0.94%)</title>
            <rect x="946.2" y="211.0" width="11.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
            <text x="949.2" y="222.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (481 samples, 1.54%)</title>
            <rect x="957.4" y="211.0" width="18.2" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="960.4" y="222.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (481 samples, 1.54%)</title>
            <rect x="957.4" y="195.0" width="18.2" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="960.4" y="206.0"></text>
        </g>
        <g>
            <title>java/lang/StringUTF16.compress (481 samples, 1.54%)</title>
            <rect x="957.4" y="179.0" width="18.2" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="960.4" y="190.0"></text>
        </g>
        <g>
            <title>byte[] (481 samples, 1.54%)</title>
            <rect x="957.4" y="163.0" width="18.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
            <text x="960.4" y="174.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.startParsingRequestBody (301 samples, 0.97%)</title>
            <rect x="975.6" y="259.0" width="11.4" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="978.6" y="270.0"></text>
        </g>
        <g>
            <title>byte[] (301 samples, 0.97%)</title>
            <rect x="975.6" y="243.0" width="11.4" height="15" fill="#60cece" rx="2" ry="2"/>
            <text x="978.6" y="254.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getHeader (549 samples, 1.76%)</title>
            <rect x="987.0" y="259.0" width="20.8" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="990.0" y="270.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (549 samples, 1.76%)</title>
            <rect x="987.0" y="243.0" width="20.8" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="990.0" y="254.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (549 samples, 1.76%)</title>
            <rect x="987.0" y="227.0" width="20.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="990.0" y="238.0"></text>
        </g>
        <g>
            <title>java.lang.String (266 samples, 0.85%)</title>
            <rect x="987.0" y="211.0" width="10.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
            <text x="990.0" y="222.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (283 samples, 0.91%)</title>
            <rect x="997.1" y="211.0" width="10.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="1000.1" y="222.0"></text>
        </g>
        <g>
            <title>byte[] (283 samples, 0.91%)</title>
            <rect x="997.1" y="195.0" width="10.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
            <text x="1000.1" y="206.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (4,195 samples, 13.47%)</title>
            <rect x="1007.8" y="259.0" width="159.0" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="1010.8" y="270.0">one/nio/util/Utf8.read</text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (4,195 samples, 13.47%)</title>
            <rect x="1007.8" y="243.0" width="159.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="1010.8" y="254.0">one/nio/util/Utf8.read</text>
        </g>
        <g>
            <title>char[] (2,012 samples, 6.46%)</title>
            <rect x="1007.8" y="227.0" width="76.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
            <text x="1010.8" y="238.0">char[]</text>
        </g>
        <g>
            <title>java.lang.String (831 samples, 2.67%)</title>
            <rect x="1084.1" y="227.0" width="31.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
            <text x="1087.1" y="238.0">ja..</text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (1,352 samples, 4.34%)</title>
            <rect x="1115.6" y="227.0" width="51.2" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="1118.6" y="238.0">java/..</text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (1,352 samples, 4.34%)</title>
            <rect x="1115.6" y="211.0" width="51.2" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="1118.6" y="222.0">java/..</text>
        </g>
        <g>
            <title>java/lang/StringUTF16.compress (1,352 samples, 4.34%)</title>
            <rect x="1115.6" y="195.0" width="51.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="1118.6" y="206.0">java/..</text>
        </g>
        <g>
            <title>byte[] (1,352 samples, 4.34%)</title>
            <rect x="1115.6" y="179.0" width="51.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
            <text x="1118.6" y="190.0">byte[]</text>
        </g>
        <g>
            <title>one/nio/net/Session.read (612 samples, 1.97%)</title>
            <rect x="1166.8" y="275.0" width="23.2" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="1169.8" y="286.0">o..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.read (612 samples, 1.97%)</title>
            <rect x="1166.8" y="259.0" width="23.2" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="1169.8" y="270.0">o..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (591 samples, 1.90%)</title>
            <rect x="1166.8" y="243.0" width="22.4" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="1169.8" y="254.0">j..</text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (591 samples, 1.90%)</title>
            <rect x="1166.8" y="227.0" width="22.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
            <text x="1169.8" y="238.0">j..</text>
        </g>
        <g>
            <title>one/nio/net/SocketClosedException.&lt;init&gt; (20 samples, 0.06%)</title>
            <rect x="1189.2" y="243.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="1192.2" y="254.0"></text>
        </g>
        <g>
            <title>java/net/SocketException.&lt;init&gt; (20 samples, 0.06%)</title>
            <rect x="1189.2" y="227.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="1192.2" y="238.0"></text>
        </g>
        <g>
            <title>java/io/IOException.&lt;init&gt; (20 samples, 0.06%)</title>
            <rect x="1189.2" y="211.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="1192.2" y="222.0"></text>
        </g>
        <g>
            <title>java/lang/Exception.&lt;init&gt; (20 samples, 0.06%)</title>
            <rect x="1189.2" y="195.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="1192.2" y="206.0"></text>
        </g>
        <g>
            <title>java/lang/Throwable.&lt;init&gt; (20 samples, 0.06%)</title>
            <rect x="1189.2" y="179.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="1192.2" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/Throwable.fillInStackTrace (20 samples, 0.06%)</title>
            <rect x="1189.2" y="163.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="1192.2" y="174.0"></text>
        </g>
        <g>
            <title>java/lang/Throwable.fillInStackTrace (20 samples, 0.06%)</title>
            <rect x="1189.2" y="147.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="1192.2" y="158.0"></text>
        </g>
        <g>
            <title>java.lang.Object[] (7 samples, 0.02%)</title>
            <rect x="1189.3" y="131.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
            <text x="1192.3" y="142.0"></text>
        </g>
    </g>
</svg>
