<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502"
     xmlns="http://www.w3.org/2000/svg">
    <style type="text/css">
        text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
        #search { opacity:0.1; cursor:pointer; }
        #search:hover, #search.show { opacity:1; }
        #subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
        #title { text-anchor:middle; font-size:17px}
        #unzoom { cursor:pointer; }
        #frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
        .hide { display:none; }
        .parent { opacity:0.5; }
    </style>
    <script type="text/ecmascript">
        <![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
    </script>
    <rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
    <text id="title" x="600" y="24">Flame Graph</text>
    <text id="details" x="10" y="485"></text>
    <text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
    <text id="search" x="1090" y="24">Search</text>
    <text id="matched" x="1090" y="485"></text>
    <g id="frames">
        <g>
            <title>all (997 samples, 100.00%)</title>
            <rect x="10.0" y="451.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="13.0" y="462.0">all</text>
        </g>
        <g>
            <title>[NIO Selector #2 tid=24835] (405 samples, 40.62%)</title>
            <rect x="10.0" y="435.0" width="479.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
            <text x="13.0" y="446.0">[NIO Selector #2 tid=24835]</text>
        </g>
        <g>
            <title>[unknown_Java] (3 samples, 0.30%)</title>
            <rect x="10.0" y="419.0" width="3.6" height="15" fill="#f77878" rx="2" ry="2"/>
            <text x="13.0" y="430.0"></text>
        </g>
        <g>
            <title>one/nio/server/SelectorThread.run (402 samples, 40.32%)</title>
            <rect x="13.6" y="419.0" width="475.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="16.6" y="430.0">one/nio/server/SelectorThread.run</text>
        </g>
        <g>
            <title>one/nio/net/JavaSelector.select (164 samples, 16.45%)</title>
            <rect x="14.7" y="403.0" width="194.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="17.7" y="414.0">one/nio/net/JavaSelector...</text>
        </g>
        <g>
            <title>one/nio/net/JavaSelector.iteratorFor (3 samples, 0.30%)</title>
            <rect x="15.9" y="387.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="18.9" y="398.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util$2.iterator (1 samples, 0.10%)</title>
            <rect x="18.3" y="371.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="21.3" y="382.0"></text>
        </g>
        <g>
            <title>java/util/HashSet.iterator (1 samples, 0.10%)</title>
            <rect x="18.3" y="355.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="21.3" y="366.0"></text>
        </g>
        <g>
            <title>java/util/HashMap$KeySet.iterator (1 samples, 0.10%)</title>
            <rect x="18.3" y="339.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="21.3" y="350.0"></text>
        </g>
        <g>
            <title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.10%)</title>
            <rect x="18.3" y="323.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="21.3" y="334.0"></text>
        </g>
        <g>
            <title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.10%)</title>
            <rect x="18.3" y="307.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="21.3" y="318.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.select (160 samples, 16.05%)</title>
            <rect x="19.5" y="387.0" width="189.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="22.5" y="398.0">sun/nio/ch/SelectorImpl.s..</text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.lockAndDoSelect (160 samples, 16.05%)</title>
            <rect x="19.5" y="371.0" width="189.3" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="22.5" y="382.0">sun/nio/ch/SelectorImpl.l..</text>
        </g>
        <g>
            <title>sun/nio/ch/KQueueSelectorImpl.doSelect (159 samples, 15.95%)</title>
            <rect x="20.7" y="355.0" width="188.1" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="23.7" y="366.0">sun/nio/ch/KQueueSelecto..</text>
        </g>
        <g>
            <title>java/lang/Math.min (1 samples, 0.10%)</title>
            <rect x="23.0" y="339.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="26.0" y="350.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/KQueue.poll (129 samples, 12.94%)</title>
            <rect x="24.2" y="339.0" width="152.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="27.2" y="350.0">sun/nio/ch/KQueue.p..</text>
        </g>
        <g>
            <title>Java_sun_nio_ch_KQueue_poll (2 samples, 0.20%)</title>
            <rect x="32.5" y="323.0" width="2.4" height="15" fill="#f57474" rx="2" ry="2"/>
            <text x="35.5" y="334.0"></text>
        </g>
        <g>
            <title>kevent (120 samples, 12.04%)</title>
            <rect x="34.9" y="323.0" width="142.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="37.9" y="334.0">kevent</text>
        </g>
        <g>
            <title>sun/nio/ch/KQueueSelectorImpl.processEvents (14 samples, 1.40%)</title>
            <rect x="176.9" y="339.0" width="16.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="179.9" y="350.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.get (4 samples, 0.40%)</title>
            <rect x="176.9" y="323.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="179.9" y="334.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.getNode (3 samples, 0.30%)</title>
            <rect x="176.9" y="307.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="179.9" y="318.0"></text>
        </g>
        <g>
            <title>java/lang/Integer.hashCode (1 samples, 0.10%)</title>
            <rect x="179.2" y="291.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="182.2" y="302.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.hash (1 samples, 0.10%)</title>
            <rect x="180.4" y="307.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="183.4" y="318.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.processReadyEvents (10 samples, 1.00%)</title>
            <rect x="181.6" y="323.0" width="11.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="184.6" y="334.0"></text>
        </g>
        <g>
            <title>java/util/HashSet.add (6 samples, 0.60%)</title>
            <rect x="181.6" y="307.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="184.6" y="318.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.put (6 samples, 0.60%)</title>
            <rect x="181.6" y="291.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="184.6" y="302.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.putVal (6 samples, 0.60%)</title>
            <rect x="181.6" y="275.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="184.6" y="286.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.afterNodeInsertion (3 samples, 0.30%)</title>
            <rect x="181.6" y="259.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="184.6" y="270.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.newNode (3 samples, 0.30%)</title>
            <rect x="185.2" y="259.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="188.2" y="270.0"></text>
        </g>
        <g>
            <title>java/util/HashSet.contains (1 samples, 0.10%)</title>
            <rect x="188.7" y="307.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="191.7" y="318.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.containsKey (1 samples, 0.10%)</title>
            <rect x="188.7" y="291.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="191.7" y="302.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.getNode (1 samples, 0.10%)</title>
            <rect x="188.7" y="275.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="191.7" y="286.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SelectionKeyImpl.nioReadyOps (1 samples, 0.10%)</title>
            <rect x="189.9" y="307.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="192.9" y="318.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (2 samples, 0.20%)</title>
            <rect x="191.1" y="307.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="194.1" y="318.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (2 samples, 0.20%)</title>
            <rect x="191.1" y="291.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="194.1" y="302.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SocketChannelImpl.translateReadyOps (2 samples, 0.20%)</title>
            <rect x="191.1" y="275.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="194.1" y="286.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (3 samples, 0.30%)</title>
            <rect x="193.5" y="339.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="196.5" y="350.0"></text>
        </g>
        <g>
            <title>java/util/ArrayDeque.pollFirst (1 samples, 0.10%)</title>
            <rect x="195.8" y="323.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="198.8" y="334.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.begin (5 samples, 0.50%)</title>
            <rect x="197.0" y="339.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="200.0" y="350.0"></text>
        </g>
        <g>
            <title>java/nio/channels/spi/AbstractSelector.begin (4 samples, 0.40%)</title>
            <rect x="197.0" y="323.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="200.0" y="334.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.isInterrupted (3 samples, 0.30%)</title>
            <rect x="197.0" y="307.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="200.0" y="318.0"></text>
        </g>
        <g>
            <title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.10%)</title>
            <rect x="200.6" y="307.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="203.6" y="318.0"></text>
        </g>
        <g>
            <title>java/lang/System$2.blockedOn (1 samples, 0.10%)</title>
            <rect x="200.6" y="291.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="203.6" y="302.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.blockedOn (1 samples, 0.10%)</title>
            <rect x="200.6" y="275.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="203.6" y="286.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.10%)</title>
            <rect x="201.7" y="323.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="204.7" y="334.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.end (4 samples, 0.40%)</title>
            <rect x="202.9" y="339.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="205.9" y="350.0"></text>
        </g>
        <g>
            <title>java/nio/channels/spi/AbstractSelector.end (4 samples, 0.40%)</title>
            <rect x="202.9" y="323.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="205.9" y="334.0"></text>
        </g>
        <g>
            <title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.40%)</title>
            <rect x="202.9" y="307.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="205.9" y="318.0"></text>
        </g>
        <g>
            <title>java/lang/System$2.blockedOn (1 samples, 0.10%)</title>
            <rect x="206.5" y="291.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="209.5" y="302.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.blockedOn (1 samples, 0.10%)</title>
            <rect x="206.5" y="275.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="209.5" y="286.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.10%)</title>
            <rect x="207.7" y="339.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="210.7" y="350.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.process (237 samples, 23.77%)</title>
            <rect x="208.8" y="403.0" width="280.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="211.8" y="414.0">one/nio/net/Session.process</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processRead (234 samples, 23.47%)</title>
            <rect x="212.4" y="387.0" width="276.9" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="215.4" y="398.0">one/nio/http/HttpSession.processRead</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processHttpBuffer (177 samples, 17.75%)</title>
            <rect x="212.4" y="371.0" width="209.5" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="215.4" y="382.0">one/nio/http/HttpSession.pr..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.handleParsedRequest (153 samples, 15.35%)</title>
            <rect x="212.4" y="355.0" width="181.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="215.4" y="366.0">one/nio/http/HttpSessio..</text>
        </g>
        <g>
            <title>java/util/LinkedList.addLast (1 samples, 0.10%)</title>
            <rect x="213.6" y="339.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="216.6" y="350.0"></text>
        </g>
        <g>
            <title>jbyte_disjoint_arraycopy (1 samples, 0.10%)</title>
            <rect x="213.6" y="323.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="216.6" y="334.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpServer.handleRequest (151 samples, 15.15%)</title>
            <rect x="214.8" y="339.0" width="178.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="217.8" y="350.0">one/nio/http/HttpServer..</text>
        </g>
        <g>
            <title>RequestHandler1_entity.handleRequest (146 samples, 14.64%)</title>
            <rect x="214.8" y="323.0" width="172.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="217.8" y="334.0">RequestHandler1_entity..</text>
        </g>
        <g>
            <title>one/nio/http/Request.getParameter (5 samples, 0.50%)</title>
            <rect x="214.8" y="307.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="217.8" y="318.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (1 samples, 0.10%)</title>
            <rect x="218.3" y="291.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="221.3" y="302.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (1 samples, 0.10%)</title>
            <rect x="218.3" y="275.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="221.3" y="286.0"></text>
        </g>
        <g>
            <title>one/nio/util/URLEncoder.decode (1 samples, 0.10%)</title>
            <rect x="218.3" y="259.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="221.3" y="270.0"></text>
        </g>
        <g>
            <title>one/nio/util/URLEncoder.decode (1 samples, 0.10%)</title>
            <rect x="219.5" y="291.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="222.5" y="302.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.entity (141 samples, 14.14%)</title>
            <rect x="220.7" y="307.0" width="166.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="223.7" y="318.0">ru/mail/polis/service..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.executeAsync (141 samples, 14.14%)</title>
            <rect x="220.7" y="291.0" width="166.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="223.7" y="302.0">ru/mail/polis/service..</text>
        </g>
        <g>
            <title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.10%)</title>
            <rect x="220.7" y="275.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="223.7" y="286.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.10%)</title>
            <rect x="220.7" y="259.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="223.7" y="270.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$67/408427736.get$Lambda (1 samples, 0.10%)</title>
            <rect x="220.7" y="243.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="223.7" y="254.0"></text>
        </g>
        <g>
            <title>one/nio/server/Server.asyncExecute (140 samples, 14.04%)</title>
            <rect x="221.9" y="275.0" width="165.7" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="224.9" y="286.0">one/nio/server/Server..</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.execute (140 samples, 14.04%)</title>
            <rect x="221.9" y="259.0" width="165.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="224.9" y="270.0">java/util/concurrent/..</text>
        </g>
        <g>
            <title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (140 samples, 14.04%)</title>
            <rect x="221.9" y="243.0" width="165.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="224.9" y="254.0">one/nio/server/Worker..</text>
        </g>
        <g>
            <title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (140 samples, 14.04%)</title>
            <rect x="221.9" y="227.0" width="165.7" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="224.9" y="238.0">one/nio/server/Worker..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue.offer (140 samples, 14.04%)</title>
            <rect x="221.9" y="211.0" width="165.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="224.9" y="222.0">java/util/concurrent/..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (137 samples, 13.74%)</title>
            <rect x="225.4" y="195.0" width="162.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="228.4" y="206.0">java/util/concurrent/..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (133 samples, 13.34%)</title>
            <rect x="225.4" y="179.0" width="157.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="228.4" y="190.0">java/util/concurrent..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.unpark (133 samples, 13.34%)</title>
            <rect x="225.4" y="163.0" width="157.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="228.4" y="174.0">java/util/concurrent..</text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.unpark (130 samples, 13.04%)</title>
            <rect x="229.0" y="147.0" width="153.8" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="232.0" y="158.0">jdk/internal/misc/U..</text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1
                samples, 0.10%)
            </title>
            <rect x="229.0" y="131.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="232.0" y="142.0"></text>
        </g>
        <g>
            <title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.20%)</title>
            <rect x="230.1" y="131.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="233.1" y="142.0"></text>
        </g>
        <g>
            <title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (127 samples, 12.74%)</title>
            <rect x="232.5" y="131.0" width="150.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
            <text x="235.5" y="142.0">Unsafe_Unpark(JNIEn..</text>
        </g>
        <g>
            <title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;,
                (AccessInternal::BarrierType)2, 1097844ull&gt;::oop_access_barrier(void*) (1 samples, 0.10%)
            </title>
            <rect x="233.7" y="115.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="236.7" y="126.0"></text>
        </g>
        <g>
            <title>HandleMark::pop_and_restore() (1 samples, 0.10%)</title>
            <rect x="234.9" y="115.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="237.9" y="126.0"></text>
        </g>
        <g>
            <title>Chunk::next() const (1 samples, 0.10%)</title>
            <rect x="234.9" y="99.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="237.9" y="110.0"></text>
        </g>
        <g>
            <title>JavaThread::check_is_terminated(JavaThread::TerminatedTypes) const (1 samples, 0.10%)</title>
            <rect x="236.1" y="115.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="239.1" y="126.0"></text>
        </g>
        <g>
            <title>JavaThread::thread_from_jni_environment(JNIEnv_*) (2 samples, 0.20%)</title>
            <rect x="237.2" y="115.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="240.2" y="126.0"></text>
        </g>
        <g>
            <title>JavaThread::is_terminated() const (2 samples, 0.20%)</title>
            <rect x="237.2" y="99.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="240.2" y="110.0"></text>
        </g>
        <g>
            <title>int OrderAccess::load_acquire&lt;int&gt;(int const volatile*) (2 samples, 0.20%)</title>
            <rect x="237.2" y="83.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="240.2" y="94.0"></text>
        </g>
        <g>
            <title>Atomic::LoadImpl&lt;int, OrderAccess::PlatformOrderedLoad&lt;4ul, (ScopedFenceType)0&gt;, void&gt;::operator()(int
                const volatile*) const (2 samples, 0.20%)
            </title>
            <rect x="237.2" y="67.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="240.2" y="78.0"></text>
        </g>
        <g>
            <title>compiler_barrier() (1 samples, 0.10%)</title>
            <rect x="237.2" y="51.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="240.2" y="62.0"></text>
        </g>
        <g>
            <title>int OrderAccess::ordered_load&lt;int, (ScopedFenceType)0&gt;(int const volatile*) (1 samples,
                0.10%)
            </title>
            <rect x="238.4" y="51.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="241.4" y="62.0"></text>
        </g>
        <g>
            <title>int Atomic::load&lt;int&gt;(int const volatile*) (1 samples, 0.10%)</title>
            <rect x="238.4" y="35.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="241.4" y="46.0"></text>
        </g>
        <g>
            <title>SafeThreadsListPtr::acquire_stable_list() (1 samples, 0.10%)</title>
            <rect x="239.6" y="115.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="242.6" y="126.0"></text>
        </g>
        <g>
            <title>Thread::current() (5 samples, 0.50%)</title>
            <rect x="240.8" y="115.0" width="5.9" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="243.8" y="126.0"></text>
        </g>
        <g>
            <title>Thread::current_or_null() (2 samples, 0.20%)</title>
            <rect x="240.8" y="99.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="243.8" y="110.0"></text>
        </g>
        <g>
            <title>_dispatch_queue_attr_concurrent (3 samples, 0.30%)</title>
            <rect x="243.2" y="99.0" width="3.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
            <text x="246.2" y="110.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (7 samples, 0.70%)
            </title>
            <rect x="246.7" y="115.0" width="8.3" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="249.7" y="126.0"></text>
        </g>
        <g>
            <title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (2 samples, 0.20%)</title>
            <rect x="246.7" y="99.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="249.7" y="110.0"></text>
        </g>
        <g>
            <title>os::is_MP() (2 samples, 0.20%)</title>
            <rect x="246.7" y="83.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="249.7" y="94.0"></text>
        </g>
        <g>
            <title>SafepointMechanism::poll(Thread*) (4 samples, 0.40%)</title>
            <rect x="249.1" y="99.0" width="4.7" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="252.1" y="110.0"></text>
        </g>
        <g>
            <title>JavaThread::is_Java_thread() const (3 samples, 0.30%)</title>
            <rect x="249.1" y="83.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="252.1" y="94.0"></text>
        </g>
        <g>
            <title>SafepointMechanism::uses_thread_local_poll() (1 samples, 0.10%)</title>
            <rect x="252.6" y="83.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="255.6" y="94.0"></text>
        </g>
        <g>
            <title>os::is_MP() (1 samples, 0.10%)</title>
            <rect x="253.8" y="99.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="256.8" y="110.0"></text>
        </g>
        <g>
            <title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.30%)</title>
            <rect x="255.0" y="115.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="258.0" y="126.0"></text>
        </g>
        <g>
            <title>SafeThreadsListPtr::acquire_stable_list_fast_path() (3 samples, 0.30%)</title>
            <rect x="255.0" y="99.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="258.0" y="110.0"></text>
        </g>
        <g>
            <title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples,
                0.20%)
            </title>
            <rect x="258.5" y="115.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="261.5" y="126.0"></text>
        </g>
        <g>
            <title>G1BarrierSet::enqueue_if_weak(unsigned long long, oopDesc*) (1 samples, 0.10%)</title>
            <rect x="259.7" y="99.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="262.7" y="110.0"></text>
        </g>
        <g>
            <title>__psynch_cvsignal (97 samples, 9.73%)</title>
            <rect x="260.9" y="115.0" width="114.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
            <text x="263.9" y="126.0">__psynch_cvsig..</text>
        </g>
        <g>
            <title>pthread_cond_signal (5 samples, 0.50%)</title>
            <rect x="375.7" y="115.0" width="5.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
            <text x="378.7" y="126.0"></text>
        </g>
        <g>
            <title>_pthread_cond_updateval (1 samples, 0.10%)</title>
            <rect x="380.5" y="99.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="383.5" y="110.0"></text>
        </g>
        <g>
            <title>pthread_mutex_lock (1 samples, 0.10%)</title>
            <rect x="381.6" y="115.0" width="1.2" height="15" fill="#fd8080" rx="2" ry="2"/>
            <text x="384.6" y="126.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (4 samples, 0.40%)</title>
            <rect x="382.8" y="179.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="385.8" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.isInterrupted (1 samples, 0.10%)</title>
            <rect x="386.4" y="163.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="389.4" y="174.0"></text>
        </g>
        <g>
            <title>one/nio/http/PathMapper.find (3 samples, 0.30%)</title>
            <rect x="387.6" y="323.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="390.6" y="334.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.get (3 samples, 0.30%)</title>
            <rect x="387.6" y="307.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="390.6" y="318.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.getNode (2 samples, 0.20%)</title>
            <rect x="387.6" y="291.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="390.6" y="302.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.hash (1 samples, 0.10%)</title>
            <rect x="389.9" y="291.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="392.9" y="302.0"></text>
        </g>
        <g>
            <title>java/lang/String.hashCode (1 samples, 0.10%)</title>
            <rect x="389.9" y="275.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="392.9" y="286.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.hashCode (1 samples, 0.10%)</title>
            <rect x="389.9" y="259.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="392.9" y="270.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getPath (2 samples, 0.20%)</title>
            <rect x="391.1" y="323.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="394.1" y="334.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (2 samples, 0.20%)</title>
            <rect x="391.1" y="307.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="394.1" y="318.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (2 samples, 0.20%)</title>
            <rect x="391.1" y="291.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="394.1" y="302.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.entity (1 samples, 0.10%)</title>
            <rect x="392.3" y="275.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="395.3" y="286.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.parseRequest (12 samples, 1.20%)</title>
            <rect x="393.5" y="355.0" width="14.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="396.5" y="366.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.30%)</title>
            <rect x="398.2" y="339.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="401.2" y="350.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (2 samples, 0.20%)</title>
            <rect x="399.4" y="323.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="402.4" y="334.0"></text>
        </g>
        <g>
            <title>java/lang/String.indexOf (2 samples, 0.20%)</title>
            <rect x="399.4" y="307.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="402.4" y="318.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.indexOf (2 samples, 0.20%)</title>
            <rect x="399.4" y="291.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="402.4" y="302.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (1 samples, 0.10%)</title>
            <rect x="401.8" y="339.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="404.8" y="350.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (1 samples, 0.10%)</title>
            <rect x="401.8" y="323.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="404.8" y="334.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.startsWith (4 samples, 0.40%)</title>
            <rect x="402.9" y="339.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="405.9" y="350.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 0.60%)</title>
            <rect x="407.7" y="355.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="410.7" y="366.0"></text>
        </g>
        <g>
            <title>java/lang/Integer.parseInt (6 samples, 0.60%)</title>
            <rect x="407.7" y="339.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="410.7" y="350.0"></text>
        </g>
        <g>
            <title>java/lang/Integer.parseInt (2 samples, 0.20%)</title>
            <rect x="408.9" y="323.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="411.9" y="334.0"></text>
        </g>
        <g>
            <title>java/lang/String.charAt (2 samples, 0.20%)</title>
            <rect x="408.9" y="307.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="411.9" y="318.0"></text>
        </g>
        <g>
            <title>jlong_disjoint_arraycopy (3 samples, 0.30%)</title>
            <rect x="411.2" y="323.0" width="3.6" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="414.2" y="334.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getHeader (5 samples, 0.50%)</title>
            <rect x="414.8" y="355.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="417.8" y="366.0"></text>
        </g>
        <g>
            <title>java/lang/String.regionMatches (1 samples, 0.10%)</title>
            <rect x="414.8" y="339.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="417.8" y="350.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.10%)</title>
            <rect x="414.8" y="323.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="417.8" y="334.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (4 samples, 0.40%)</title>
            <rect x="416.0" y="339.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="419.0" y="350.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (4 samples, 0.40%)</title>
            <rect x="416.0" y="323.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="419.0" y="334.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpServer.handleRequest (4 samples, 0.40%)</title>
            <rect x="416.0" y="307.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="419.0" y="318.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (1 samples, 0.10%)</title>
            <rect x="420.7" y="355.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="423.7" y="366.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (1 samples, 0.10%)</title>
            <rect x="420.7" y="339.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="423.7" y="350.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.read (57 samples, 5.72%)</title>
            <rect x="421.9" y="371.0" width="67.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="424.9" y="382.0">one/nio..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.read (57 samples, 5.72%)</title>
            <rect x="421.9" y="355.0" width="67.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="424.9" y="366.0">one/nio..</text>
        </g>
        <g>
            <title>sun/nio/ch/SocketChannelImpl.read (57 samples, 5.72%)</title>
            <rect x="421.9" y="339.0" width="67.4" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="424.9" y="350.0">sun/nio..</text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.read (57 samples, 5.72%)</title>
            <rect x="421.9" y="323.0" width="67.4" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="424.9" y="334.0">sun/nio..</text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.read (57 samples, 5.72%)</title>
            <rect x="421.9" y="307.0" width="67.4" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="424.9" y="318.0">sun/nio..</text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.put (8 samples, 0.80%)</title>
            <rect x="423.1" y="291.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="426.1" y="302.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBuffer.get (8 samples, 0.80%)</title>
            <rect x="423.1" y="275.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="426.1" y="286.0"></text>
        </g>
        <g>
            <title>java/nio/MappedByteBuffer.position (3 samples, 0.30%)</title>
            <rect x="423.1" y="259.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="426.1" y="270.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.position (3 samples, 0.30%)</title>
            <rect x="423.1" y="243.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="426.1" y="254.0"></text>
        </g>
        <g>
            <title>jbyte_disjoint_arraycopy (2 samples, 0.20%)</title>
            <rect x="423.1" y="227.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
            <text x="426.1" y="238.0"></text>
        </g>
        <g>
            <title>unsafe_arraycopy (1 samples, 0.10%)</title>
            <rect x="425.4" y="227.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="428.4" y="238.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.copyMemory (5 samples, 0.50%)</title>
            <rect x="426.6" y="259.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="429.6" y="270.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.copyMemoryChecks (5 samples, 0.50%)</title>
            <rect x="426.6" y="243.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="429.6" y="254.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.position (1 samples, 0.10%)</title>
            <rect x="426.6" y="227.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="429.6" y="238.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.20%)</title>
            <rect x="427.8" y="227.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="430.8" y="238.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.20%)</title>
            <rect x="427.8" y="211.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="430.8" y="222.0"></text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.checkSize (2 samples, 0.20%)</title>
            <rect x="430.2" y="227.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="433.2" y="238.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.readIntoNativeBuffer (37 samples, 3.71%)</title>
            <rect x="432.5" y="291.0" width="43.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="435.5" y="302.0">sun/..</text>
        </g>
        <g>
            <title>sun/nio/ch/SocketDispatcher.read (37 samples, 3.71%)</title>
            <rect x="432.5" y="275.0" width="43.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="435.5" y="286.0">sun/..</text>
        </g>
        <g>
            <title>sun/nio/ch/FileDispatcherImpl.read0 (36 samples, 3.61%)</title>
            <rect x="433.7" y="259.0" width="42.6" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="436.7" y="270.0">sun/..</text>
        </g>
        <g>
            <title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.10%)</title>
            <rect x="434.9" y="243.0" width="1.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
            <text x="437.9" y="254.0"></text>
        </g>
        <g>
            <title>fdval (1 samples, 0.10%)</title>
            <rect x="434.9" y="227.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
            <text x="437.9" y="238.0"></text>
        </g>
        <g>
            <title>read (34 samples, 3.41%)</title>
            <rect x="436.1" y="243.0" width="40.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
            <text x="439.1" y="254.0">read</text>
        </g>
        <g>
            <title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.30%)</title>
            <rect x="476.3" y="291.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="479.3" y="302.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.get (3 samples, 0.30%)</title>
            <rect x="476.3" y="275.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="479.3" y="286.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.30%)</title>
            <rect x="476.3" y="259.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="479.3" y="270.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util$1.initialValue (3 samples, 0.30%)</title>
            <rect x="476.3" y="243.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="479.3" y="254.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (8 samples, 0.80%)</title>
            <rect x="479.9" y="291.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="482.9" y="302.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.get (8 samples, 0.80%)</title>
            <rect x="479.9" y="275.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="482.9" y="286.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.setInitialValue (8 samples, 0.80%)</title>
            <rect x="479.9" y="259.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="482.9" y="270.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util$1.initialValue (8 samples, 0.80%)</title>
            <rect x="479.9" y="243.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="482.9" y="254.0"></text>
        </g>
        <g>
            <title>__cxx_global_var_init4 (1 samples, 0.10%)</title>
            <rect x="479.9" y="227.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="482.9" y="238.0"></text>
        </g>
        <g>
            <title>gettimeofday (3 samples, 0.30%)</title>
            <rect x="481.1" y="227.0" width="3.5" height="15" fill="#e86464" rx="2" ry="2"/>
            <text x="484.1" y="238.0"></text>
        </g>
        <g>
            <title>os::javaTimeMillis() (4 samples, 0.40%)</title>
            <rect x="484.6" y="227.0" width="4.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="487.6" y="238.0"></text>
        </g>
        <g>
            <title>gettimeofday (1 samples, 0.10%)</title>
            <rect x="484.6" y="211.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="487.6" y="222.0"></text>
        </g>
        <g>
            <title>rcmd_af.canonnamebuf (1 samples, 0.10%)</title>
            <rect x="484.6" y="195.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="487.6" y="206.0"></text>
        </g>
        <g>
            <title>rcmd_af.canonnamebuf (3 samples, 0.30%)</title>
            <rect x="485.8" y="211.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
            <text x="488.8" y="222.0"></text>
        </g>
        <g>
            <title>[NIO Worker #1 tid=39171] (150 samples, 15.05%)</title>
            <rect x="489.3" y="435.0" width="177.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
            <text x="492.3" y="446.0">[NIO Worker #1 tid=39171]</text>
        </g>
        <g>
            <title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.50%)
            </title>
            <rect x="489.3" y="419.0" width="6.0" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="492.3" y="430.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::enter(Thread*) (5 samples, 0.50%)</title>
            <rect x="489.3" y="403.0" width="6.0" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="492.3" y="414.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::TrySpin(Thread*) (5 samples, 0.50%)</title>
            <rect x="489.3" y="387.0" width="6.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="492.3" y="398.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.10%)</title>
            <rect x="494.1" y="371.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="497.1" y="382.0"></text>
        </g>
        <g>
            <title>[not_walkable] (2 samples, 0.20%)</title>
            <rect x="495.3" y="419.0" width="2.3" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="498.3" y="430.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.run (143 samples, 14.34%)</title>
            <rect x="497.6" y="419.0" width="169.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="500.6" y="430.0">java/lang/Thread.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.run (143 samples, 14.34%)</title>
            <rect x="497.6" y="403.0" width="169.3" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="500.6" y="414.0">java/util/concurrent/T..</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.runWorker (143 samples, 14.34%)</title>
            <rect x="497.6" y="387.0" width="169.3" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="500.6" y="398.0">java/util/concurrent/T..</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (2 samples, 0.20%)</title>
            <rect x="497.6" y="371.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="500.6" y="382.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.20%)</title>
            <rect x="497.6" y="355.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="500.6" y="366.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.getTask (81 samples, 8.12%)</title>
            <rect x="500.0" y="371.0" width="95.9" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="503.0" y="382.0">java/util/c..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue.take (81 samples, 8.12%)</title>
            <rect x="500.0" y="355.0" width="95.9" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="503.0" y="366.0">java/util/c..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (81 samples, 8.12%)</title>
            <rect x="500.0" y="339.0" width="95.9" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="503.0" y="350.0">java/util/c..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (80 samples, 8.02%)</title>
            <rect x="501.2" y="323.0" width="94.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="504.2" y="334.0">java/util/c..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.park (80 samples, 8.02%)</title>
            <rect x="501.2" y="307.0" width="94.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="504.2" y="318.0">java/util/c..</text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.park (37 samples, 3.71%)</title>
            <rect x="552.1" y="291.0" width="43.8" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="555.1" y="302.0">jdk/..</text>
        </g>
        <g>
            <title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (36 samples, 3.61%)</title>
            <rect x="553.2" y="275.0" width="42.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
            <text x="556.2" y="286.0">Unsa..</text>
        </g>
        <g>
            <title>JavaThread::handle_special_suspend_equivalent_condition() (1 samples, 0.10%)</title>
            <rect x="555.6" y="259.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="558.6" y="270.0"></text>
        </g>
        <g>
            <title>JavaThread::parker() (1 samples, 0.10%)</title>
            <rect x="556.8" y="259.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="559.8" y="270.0"></text>
        </g>
        <g>
            <title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.10%)</title>
            <rect x="558.0" y="259.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="561.0" y="270.0"></text>
        </g>
        <g>
            <title>JavaThread::is_terminated() const (1 samples, 0.10%)</title>
            <rect x="558.0" y="243.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="561.0" y="254.0"></text>
        </g>
        <g>
            <title>int OrderAccess::load_acquire&lt;int&gt;(int const volatile*) (1 samples, 0.10%)</title>
            <rect x="558.0" y="227.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="561.0" y="238.0"></text>
        </g>
        <g>
            <title>Atomic::LoadImpl&lt;int, OrderAccess::PlatformOrderedLoad&lt;4ul, (ScopedFenceType)0&gt;, void&gt;::operator()(int
                const volatile*) const (1 samples, 0.10%)
            </title>
            <rect x="558.0" y="211.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="561.0" y="222.0"></text>
        </g>
        <g>
            <title>compiler_barrier() (1 samples, 0.10%)</title>
            <rect x="558.0" y="195.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
            <text x="561.0" y="206.0"></text>
        </g>
        <g>
            <title>JavaThreadStatusChanger::JavaThreadStatusChanger(JavaThread*, java_lang_Thread::ThreadStatus) (1
                samples, 0.10%)
            </title>
            <rect x="559.2" y="259.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="562.2" y="270.0"></text>
        </g>
        <g>
            <title>Parker::park(bool, long) (30 samples, 3.01%)</title>
            <rect x="560.4" y="259.0" width="35.5" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="563.4" y="270.0">Par..</text>
        </g>
        <g>
            <title>JavaThread::handle_special_suspend_equivalent_condition() (1 samples, 0.10%)</title>
            <rect x="560.4" y="243.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="563.4" y="254.0"></text>
        </g>
        <g>
            <title>__psynch_cvwait (26 samples, 2.61%)</title>
            <rect x="561.5" y="243.0" width="30.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="564.5" y="254.0">__..</text>
        </g>
        <g>
            <title>_pthread_cond_wait (2 samples, 0.20%)</title>
            <rect x="592.3" y="243.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="595.3" y="254.0"></text>
        </g>
        <g>
            <title>_pthread_mutex_droplock (2 samples, 0.20%)</title>
            <rect x="592.3" y="227.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="595.3" y="238.0"></text>
        </g>
        <g>
            <title>pthread_mutex_lock (1 samples, 0.10%)</title>
            <rect x="594.7" y="243.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
            <text x="597.7" y="254.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.10%)</title>
            <rect x="595.9" y="371.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="598.9" y="382.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$67/408427736.run (59 samples, 5.92%)</title>
            <rect x="597.0" y="371.0" width="69.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="600.0" y="382.0">ru/mail..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$3 (59 samples, 5.92%)</title>
            <rect x="597.0" y="355.0" width="69.9" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="600.0" y="366.0">ru/mail..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.sendResponse (41 samples, 4.11%)</title>
            <rect x="597.0" y="339.0" width="48.6" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="600.0" y="350.0">one/..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.writeResponse (40 samples, 4.01%)</title>
            <rect x="597.0" y="323.0" width="47.4" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="600.0" y="334.0">one/..</text>
        </g>
        <g>
            <title>one/nio/http/Response.toBytes (1 samples, 0.10%)</title>
            <rect x="597.0" y="307.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="600.0" y="318.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.write (39 samples, 3.91%)</title>
            <rect x="598.2" y="307.0" width="46.2" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="601.2" y="318.0">one/..</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (39 samples, 3.91%)</title>
            <rect x="598.2" y="291.0" width="46.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="601.2" y="302.0">one/..</text>
        </g>
        <g>
            <title>one/nio/net/Session$ArrayQueueItem.write (39 samples, 3.91%)</title>
            <rect x="598.2" y="275.0" width="46.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="601.2" y="286.0">one/..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.write (39 samples, 3.91%)</title>
            <rect x="598.2" y="259.0" width="46.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="601.2" y="270.0">one/..</text>
        </g>
        <g>
            <title>sun/nio/ch/SocketChannelImpl.write (39 samples, 3.91%)</title>
            <rect x="598.2" y="243.0" width="46.2" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="601.2" y="254.0">sun/..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.10%)</title>
            <rect x="598.2" y="227.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="601.2" y="238.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.10%)</title>
            <rect x="598.2" y="211.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="601.2" y="222.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.write (38 samples, 3.81%)</title>
            <rect x="599.4" y="227.0" width="45.0" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="602.4" y="238.0">sun/..</text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.write (38 samples, 3.81%)</title>
            <rect x="599.4" y="211.0" width="45.0" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="602.4" y="222.0">sun/..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.position (1 samples, 0.10%)</title>
            <rect x="599.4" y="195.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="602.4" y="206.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBuffer.put (1 samples, 0.10%)</title>
            <rect x="600.6" y="195.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="603.6" y="206.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.writeFromNativeBuffer (35 samples, 3.51%)</title>
            <rect x="601.8" y="195.0" width="41.4" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="604.8" y="206.0">sun..</text>
        </g>
        <g>
            <title>sun/nio/ch/SocketDispatcher.write (35 samples, 3.51%)</title>
            <rect x="601.8" y="179.0" width="41.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="604.8" y="190.0">sun..</text>
        </g>
        <g>
            <title>sun/nio/ch/FileDispatcherImpl.write0 (35 samples, 3.51%)</title>
            <rect x="601.8" y="163.0" width="41.4" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="604.8" y="174.0">sun..</text>
        </g>
        <g>
            <title>write (35 samples, 3.51%)</title>
            <rect x="601.8" y="147.0" width="41.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
            <text x="604.8" y="158.0">write</text>
        </g>
        <g>
            <title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.10%)</title>
            <rect x="643.2" y="195.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="646.2" y="206.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.get (1 samples, 0.10%)</title>
            <rect x="643.2" y="179.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="646.2" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.10%)</title>
            <rect x="643.2" y="163.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="646.2" y="174.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util$1.initialValue (1 samples, 0.10%)</title>
            <rect x="643.2" y="147.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="646.2" y="158.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getHeader (1 samples, 0.10%)</title>
            <rect x="644.4" y="323.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="647.4" y="334.0"></text>
        </g>
        <g>
            <title>java/lang/String.regionMatches (1 samples, 0.10%)</title>
            <rect x="644.4" y="307.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="647.4" y="318.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.10%)</title>
            <rect x="644.4" y="291.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="647.4" y="302.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$64/1318560066.act (18 samples, 1.81%)</title>
            <rect x="645.6" y="339.0" width="21.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="648.6" y="350.0">r..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$1 (18 samples, 1.81%)</title>
            <rect x="645.6" y="323.0" width="21.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="648.6" y="334.0">r..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.upsert (18 samples, 1.81%)</title>
            <rect x="645.6" y="307.0" width="21.3" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="648.6" y="318.0">r..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (1 samples, 0.10%)</title>
            <rect x="645.6" y="291.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="648.6" y="302.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (1 samples, 0.10%)</title>
            <rect x="645.6" y="275.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="648.6" y="286.0"></text>
        </g>
        <g>
            <title>jbyte_disjoint_arraycopy (1 samples, 0.10%)</title>
            <rect x="645.6" y="259.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="648.6" y="270.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MyDAO.upsert (17 samples, 1.71%)</title>
            <rect x="646.8" y="291.0" width="20.1" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="649.8" y="302.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MemTablePool.upsert (17 samples, 1.71%)</title>
            <rect x="646.8" y="275.0" width="20.1" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="649.8" y="286.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.10%)</title>
            <rect x="646.8" y="259.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="649.8" y="270.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.10%)</title>
            <rect x="646.8" y="243.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="649.8" y="254.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.10%)</title>
            <rect x="646.8" y="227.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="649.8" y="238.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.remove (1 samples, 0.10%)</title>
            <rect x="646.8" y="211.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="649.8" y="222.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MemTable.upsert (16 samples, 1.60%)</title>
            <rect x="647.9" y="259.0" width="19.0" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="650.9" y="270.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.put (16 samples, 1.60%)</title>
            <rect x="647.9" y="243.0" width="19.0" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="650.9" y="254.0"></text>
        </g>
        <g>
            <title>gettimeofday (1 samples, 0.10%)</title>
            <rect x="652.7" y="227.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
            <text x="655.7" y="238.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.doPut (10 samples, 1.00%)</title>
            <rect x="653.9" y="227.0" width="11.8" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="656.9" y="238.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.80%)</title>
            <rect x="656.2" y="211.0" width="9.5" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="659.2" y="222.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (2 samples, 0.20%)</title>
            <rect x="663.3" y="195.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="666.3" y="206.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (2 samples, 0.20%)</title>
            <rect x="663.3" y="179.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="666.3" y="190.0"></text>
        </g>
        <g>
            <title>java/nio/BufferMismatch.mismatch (2 samples, 0.20%)</title>
            <rect x="663.3" y="163.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="666.3" y="174.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.get (1 samples, 0.10%)</title>
            <rect x="664.5" y="147.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="667.5" y="158.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.checkIndex (1 samples, 0.10%)</title>
            <rect x="664.5" y="131.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="667.5" y="142.0"></text>
        </g>
        <g>
            <title>os::javaTimeMillis() (1 samples, 0.10%)</title>
            <rect x="665.7" y="227.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="668.7" y="238.0"></text>
        </g>
        <g>
            <title>[NIO Worker #2 tid=38659] (157 samples, 15.75%)</title>
            <rect x="666.9" y="435.0" width="185.8" height="15" fill="#f77878" rx="2" ry="2"/>
            <text x="669.9" y="446.0">[NIO Worker #2 tid=38659]</text>
        </g>
        <g>
            <title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.80%)
            </title>
            <rect x="666.9" y="419.0" width="9.4" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="669.9" y="430.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::enter(Thread*) (8 samples, 0.80%)</title>
            <rect x="666.9" y="403.0" width="9.4" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="669.9" y="414.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.10%)</title>
            <rect x="666.9" y="387.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="669.9" y="398.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::TrySpin(Thread*) (6 samples, 0.60%)</title>
            <rect x="668.1" y="387.0" width="7.1" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="671.1" y="398.0"></text>
        </g>
        <g>
            <title>SpinPause (1 samples, 0.10%)</title>
            <rect x="675.2" y="387.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
            <text x="678.2" y="398.0"></text>
        </g>
        <g>
            <title>[not_walkable] (4 samples, 0.40%)</title>
            <rect x="676.3" y="419.0" width="4.8" height="15" fill="#fd8080" rx="2" ry="2"/>
            <text x="679.3" y="430.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.run (145 samples, 14.54%)</title>
            <rect x="681.1" y="419.0" width="171.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="684.1" y="430.0">java/lang/Thread.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.run (145 samples, 14.54%)</title>
            <rect x="681.1" y="403.0" width="171.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="684.1" y="414.0">java/util/concurrent/T..</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.runWorker (145 samples, 14.54%)</title>
            <rect x="681.1" y="387.0" width="171.6" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="684.1" y="398.0">java/util/concurrent/T..</text>
        </g>
        <g>
            <title>java/lang/Thread.interrupted (3 samples, 0.30%)</title>
            <rect x="681.1" y="371.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="684.1" y="382.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.isInterrupted (3 samples, 0.30%)</title>
            <rect x="681.1" y="355.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="684.1" y="366.0"></text>
        </g>
        <g>
            <title>JVM_IsInterrupted (2 samples, 0.20%)</title>
            <rect x="681.1" y="339.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
            <text x="684.1" y="350.0"></text>
        </g>
        <g>
            <title>SafeThreadsListPtr::release_stable_list() (1 samples, 0.10%)</title>
            <rect x="681.1" y="323.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="684.1" y="334.0"></text>
        </g>
        <g>
            <title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.10%)</title>
            <rect x="682.3" y="323.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="685.3" y="334.0"></text>
        </g>
        <g>
            <title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.10%)</title>
            <rect x="683.4" y="339.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="686.4" y="350.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.10%)</title>
            <rect x="684.6" y="371.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="687.6" y="382.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.10%)</title>
            <rect x="684.6" y="355.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="687.6" y="366.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.10%)</title>
            <rect x="685.8" y="371.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="688.8" y="382.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.10%)</title>
            <rect x="685.8" y="355.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="688.8" y="366.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (1 samples, 0.10%)</title>
            <rect x="685.8" y="339.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="688.8" y="350.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.getTask (78 samples, 7.82%)</title>
            <rect x="687.0" y="371.0" width="92.3" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="690.0" y="382.0">java/util/c..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue.take (78 samples, 7.82%)</title>
            <rect x="687.0" y="355.0" width="92.3" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="690.0" y="366.0">java/util/c..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (78 samples, 7.82%)</title>
            <rect x="687.0" y="339.0" width="92.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="690.0" y="350.0">java/util/c..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (78 samples, 7.82%)</title>
            <rect x="687.0" y="323.0" width="92.3" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="690.0" y="334.0">java/util/c..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.park (78 samples, 7.82%)</title>
            <rect x="687.0" y="307.0" width="92.3" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="690.0" y="318.0">java/util/c..</text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.park (34 samples, 3.41%)</title>
            <rect x="739.1" y="291.0" width="40.2" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="742.1" y="302.0">jdk..</text>
        </g>
        <g>
            <title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (31 samples, 3.11%)</title>
            <rect x="742.6" y="275.0" width="36.7" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="745.6" y="286.0">Uns..</text>
        </g>
        <g>
            <title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.10%)</title>
            <rect x="742.6" y="259.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="745.6" y="270.0"></text>
        </g>
        <g>
            <title>JavaThread::is_terminated() const (1 samples, 0.10%)</title>
            <rect x="742.6" y="243.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="745.6" y="254.0"></text>
        </g>
        <g>
            <title>int OrderAccess::load_acquire&lt;int&gt;(int const volatile*) (1 samples, 0.10%)</title>
            <rect x="742.6" y="227.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="745.6" y="238.0"></text>
        </g>
        <g>
            <title>Atomic::LoadImpl&lt;int, OrderAccess::PlatformOrderedLoad&lt;4ul, (ScopedFenceType)0&gt;, void&gt;::operator()(int
                const volatile*) const (1 samples, 0.10%)
            </title>
            <rect x="742.6" y="211.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="745.6" y="222.0"></text>
        </g>
        <g>
            <title>compiler_barrier() (1 samples, 0.10%)</title>
            <rect x="742.6" y="195.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="745.6" y="206.0"></text>
        </g>
        <g>
            <title>Parker::park(bool, long) (29 samples, 2.91%)</title>
            <rect x="743.8" y="259.0" width="34.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="746.8" y="270.0">Pa..</text>
        </g>
        <g>
            <title>__psynch_cvwait (28 samples, 2.81%)</title>
            <rect x="745.0" y="243.0" width="33.1" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="748.0" y="254.0">__..</text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1
                samples, 0.10%)
            </title>
            <rect x="778.1" y="259.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
            <text x="781.1" y="270.0"></text>
        </g>
        <g>
            <title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (1 samples, 0.10%)</title>
            <rect x="778.1" y="243.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="781.1" y="254.0"></text>
        </g>
        <g>
            <title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1
                samples, 0.10%)
            </title>
            <rect x="778.1" y="227.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="781.1" y="238.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$67/408427736.run (62 samples, 6.22%)</title>
            <rect x="779.3" y="371.0" width="73.4" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="782.3" y="382.0">ru/mail/..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$3 (62 samples, 6.22%)</title>
            <rect x="779.3" y="355.0" width="73.4" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="782.3" y="366.0">ru/mail/..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.sendResponse (49 samples, 4.91%)</title>
            <rect x="779.3" y="339.0" width="58.0" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="782.3" y="350.0">one/ni..</text>
        </g>
        <g>
            <title>java/lang/String.equalsIgnoreCase (2 samples, 0.20%)</title>
            <rect x="780.5" y="323.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="783.5" y="334.0"></text>
        </g>
        <g>
            <title>java/lang/String.regionMatches (2 samples, 0.20%)</title>
            <rect x="780.5" y="307.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="783.5" y="318.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.20%)</title>
            <rect x="780.5" y="291.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="783.5" y="302.0"></text>
        </g>
        <g>
            <title>java/nio/ByteOrder.nativeOrder (1 samples, 0.10%)</title>
            <rect x="781.7" y="275.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="784.7" y="286.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.writeResponse (46 samples, 4.61%)</title>
            <rect x="782.9" y="323.0" width="54.4" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="785.9" y="334.0">one/n..</text>
        </g>
        <g>
            <title>one/nio/http/Response.toBytes (1 samples, 0.10%)</title>
            <rect x="782.9" y="307.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="785.9" y="318.0"></text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.10%)</title>
            <rect x="782.9" y="291.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="785.9" y="302.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.length (1 samples, 0.10%)</title>
            <rect x="782.9" y="275.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="785.9" y="286.0"></text>
        </g>
        <g>
            <title>java/lang/String.charAt (1 samples, 0.10%)</title>
            <rect x="782.9" y="259.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="785.9" y="270.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.write (45 samples, 4.51%)</title>
            <rect x="784.0" y="307.0" width="53.3" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="787.0" y="318.0">one/n..</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (45 samples, 4.51%)</title>
            <rect x="784.0" y="291.0" width="53.3" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="787.0" y="302.0">one/n..</text>
        </g>
        <g>
            <title>one/nio/net/Session$ArrayQueueItem.write (45 samples, 4.51%)</title>
            <rect x="784.0" y="275.0" width="53.3" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="787.0" y="286.0">one/n..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.write (45 samples, 4.51%)</title>
            <rect x="784.0" y="259.0" width="53.3" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="787.0" y="270.0">one/n..</text>
        </g>
        <g>
            <title>sun/nio/ch/SocketChannelImpl.write (45 samples, 4.51%)</title>
            <rect x="784.0" y="243.0" width="53.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="787.0" y="254.0">sun/n..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.10%)</title>
            <rect x="784.0" y="227.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="787.0" y="238.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.10%)</title>
            <rect x="784.0" y="211.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="787.0" y="222.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.10%)</title>
            <rect x="785.2" y="227.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="788.2" y="238.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.10%)</title>
            <rect x="785.2" y="211.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="788.2" y="222.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.write (43 samples, 4.31%)</title>
            <rect x="786.4" y="227.0" width="50.9" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="789.4" y="238.0">sun/n..</text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.write (43 samples, 4.31%)</title>
            <rect x="786.4" y="211.0" width="50.9" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="789.4" y="222.0">sun/n..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.position (1 samples, 0.10%)</title>
            <rect x="786.4" y="195.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="789.4" y="206.0"></text>
        </g>
        <g>
            <title>java/nio/DirectByteBuffer.put (1 samples, 0.10%)</title>
            <rect x="787.6" y="195.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="790.6" y="206.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.writeFromNativeBuffer (40 samples, 4.01%)</title>
            <rect x="788.8" y="195.0" width="47.3" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="791.8" y="206.0">sun/..</text>
        </g>
        <g>
            <title>sun/nio/ch/SocketDispatcher.write (40 samples, 4.01%)</title>
            <rect x="788.8" y="179.0" width="47.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="791.8" y="190.0">sun/..</text>
        </g>
        <g>
            <title>sun/nio/ch/FileDispatcherImpl.write0 (40 samples, 4.01%)</title>
            <rect x="788.8" y="163.0" width="47.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="791.8" y="174.0">sun/..</text>
        </g>
        <g>
            <title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.10%)</title>
            <rect x="788.8" y="147.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
            <text x="791.8" y="158.0"></text>
        </g>
        <g>
            <title>write (39 samples, 3.91%)</title>
            <rect x="790.0" y="147.0" width="46.1" height="15" fill="#ec6868" rx="2" ry="2"/>
            <text x="793.0" y="158.0">write</text>
        </g>
        <g>
            <title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.10%)</title>
            <rect x="836.1" y="195.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="839.1" y="206.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.get (1 samples, 0.10%)</title>
            <rect x="836.1" y="179.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="839.1" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.10%)</title>
            <rect x="836.1" y="163.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="839.1" y="174.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util$1.initialValue (1 samples, 0.10%)</title>
            <rect x="836.1" y="147.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="839.1" y="158.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$64/1318560066.act (13 samples, 1.30%)</title>
            <rect x="837.3" y="339.0" width="15.4" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="840.3" y="350.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$1 (13 samples, 1.30%)</title>
            <rect x="837.3" y="323.0" width="15.4" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="840.3" y="334.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.upsert (13 samples, 1.30%)</title>
            <rect x="837.3" y="307.0" width="15.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="840.3" y="318.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MyDAO.upsert (13 samples, 1.30%)</title>
            <rect x="837.3" y="291.0" width="15.4" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="840.3" y="302.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MemTablePool.upsert (13 samples, 1.30%)</title>
            <rect x="837.3" y="275.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="840.3" y="286.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MemTable.upsert (13 samples, 1.30%)</title>
            <rect x="837.3" y="259.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="840.3" y="270.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.put (13 samples, 1.30%)</title>
            <rect x="837.3" y="243.0" width="15.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="840.3" y="254.0"></text>
        </g>
        <g>
            <title>gettimeofday (1 samples, 0.10%)</title>
            <rect x="838.5" y="227.0" width="1.2" height="15" fill="#f67777" rx="2" ry="2"/>
            <text x="841.5" y="238.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.doPut (11 samples, 1.10%)</title>
            <rect x="839.7" y="227.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="842.7" y="238.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.cpr (11 samples, 1.10%)</title>
            <rect x="839.7" y="211.0" width="13.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="842.7" y="222.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (6 samples, 0.60%)</title>
            <rect x="845.6" y="195.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="848.6" y="206.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (6 samples, 0.60%)</title>
            <rect x="845.6" y="179.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="848.6" y="190.0"></text>
        </g>
        <g>
            <title>java/nio/BufferMismatch.mismatch (6 samples, 0.60%)</title>
            <rect x="845.6" y="163.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="848.6" y="174.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.get (3 samples, 0.30%)</title>
            <rect x="849.1" y="147.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="852.1" y="158.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.checkIndex (3 samples, 0.30%)</title>
            <rect x="849.1" y="131.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="852.1" y="142.0"></text>
        </g>
        <g>
            <title>[NIO Worker #3 tid=26115] (152 samples, 15.25%)</title>
            <rect x="852.7" y="435.0" width="179.9" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="855.7" y="446.0">[NIO Worker #3 tid=26115]</text>
        </g>
        <g>
            <title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (21 samples, 2.11%)
            </title>
            <rect x="852.7" y="419.0" width="24.8" height="15" fill="#d4d440" rx="2" ry="2"/>
            <text x="855.7" y="430.0">S..</text>
        </g>
        <g>
            <title>ObjectMonitor::enter(Thread*) (21 samples, 2.11%)</title>
            <rect x="852.7" y="403.0" width="24.8" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="855.7" y="414.0">O..</text>
        </g>
        <g>
            <title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.10%)</title>
            <rect x="852.7" y="387.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="855.7" y="398.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.10%)</title>
            <rect x="852.7" y="371.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="855.7" y="382.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.20%)</title>
            <rect x="853.9" y="387.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="856.9" y="398.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::TrySpin(Thread*) (17 samples, 1.71%)</title>
            <rect x="856.2" y="387.0" width="20.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="859.2" y="398.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::NotRunnable(Thread*, Thread*) (8 samples, 0.80%)</title>
            <rect x="866.9" y="371.0" width="9.5" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="869.9" y="382.0"></text>
        </g>
        <g>
            <title>SpinPause (1 samples, 0.10%)</title>
            <rect x="876.4" y="387.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="879.4" y="398.0"></text>
        </g>
        <g>
            <title>[not_walkable] (2 samples, 0.20%)</title>
            <rect x="877.5" y="419.0" width="2.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
            <text x="880.5" y="430.0"></text>
        </g>
        <g>
            <title>[unknown_Java] (1 samples, 0.10%)</title>
            <rect x="879.9" y="419.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="882.9" y="430.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.run (128 samples, 12.84%)</title>
            <rect x="881.1" y="419.0" width="151.5" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="884.1" y="430.0">java/lang/Thread.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.run (128 samples, 12.84%)</title>
            <rect x="881.1" y="403.0" width="151.5" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="884.1" y="414.0">java/util/concurren..</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.runWorker (128 samples, 12.84%)</title>
            <rect x="881.1" y="387.0" width="151.5" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="884.1" y="398.0">java/util/concurren..</text>
        </g>
        <g>
            <title>java/lang/Thread.interrupted (3 samples, 0.30%)</title>
            <rect x="882.3" y="371.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="885.3" y="382.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.isInterrupted (2 samples, 0.20%)</title>
            <rect x="883.5" y="355.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="886.5" y="366.0"></text>
        </g>
        <g>
            <title>JVM_IsInterrupted (2 samples, 0.20%)</title>
            <rect x="883.5" y="339.0" width="2.3" height="15" fill="#fe8080" rx="2" ry="2"/>
            <text x="886.5" y="350.0"></text>
        </g>
        <g>
            <title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples,
                0.10%)
            </title>
            <rect x="883.5" y="323.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="886.5" y="334.0"></text>
        </g>
        <g>
            <title>oopDesc::address_field(int) const (1 samples, 0.10%)</title>
            <rect x="884.6" y="323.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="887.6" y="334.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.getTask (90 samples, 9.03%)</title>
            <rect x="885.8" y="371.0" width="106.5" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="888.8" y="382.0">java/util/con..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue.take (90 samples, 9.03%)</title>
            <rect x="885.8" y="355.0" width="106.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="888.8" y="366.0">java/util/con..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (90 samples, 9.03%)</title>
            <rect x="885.8" y="339.0" width="106.5" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="888.8" y="350.0">java/util/con..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (90 samples, 9.03%)</title>
            <rect x="885.8" y="323.0" width="106.5" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="888.8" y="334.0">java/util/con..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.park (89 samples, 8.93%)</title>
            <rect x="887.0" y="307.0" width="105.3" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="890.0" y="318.0">java/util/con..</text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.park (37 samples, 3.71%)</title>
            <rect x="948.6" y="291.0" width="43.7" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="951.6" y="302.0">jdk/..</text>
        </g>
        <g>
            <title>JavaThreadStatusChanger::~JavaThreadStatusChanger() (1 samples, 0.10%)</title>
            <rect x="949.7" y="275.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="952.7" y="286.0"></text>
        </g>
        <g>
            <title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (35 samples, 3.51%)</title>
            <rect x="950.9" y="275.0" width="41.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
            <text x="953.9" y="286.0">Uns..</text>
        </g>
        <g>
            <title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.10%)</title>
            <rect x="950.9" y="259.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="953.9" y="270.0"></text>
        </g>
        <g>
            <title>JavaThread::threadObj() const (1 samples, 0.10%)</title>
            <rect x="950.9" y="243.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="953.9" y="254.0"></text>
        </g>
        <g>
            <title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (1 samples, 0.10%)</title>
            <rect x="952.1" y="259.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="955.1" y="270.0"></text>
        </g>
        <g>
            <title>JfrEventSetting::is_enabled(JfrEventId) (1 samples, 0.10%)</title>
            <rect x="952.1" y="243.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="955.1" y="254.0"></text>
        </g>
        <g>
            <title>JfrEventSetting::setting(JfrEventId) (1 samples, 0.10%)</title>
            <rect x="952.1" y="227.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="955.1" y="238.0"></text>
        </g>
        <g>
            <title>Parker::park(bool, long) (31 samples, 3.11%)</title>
            <rect x="953.3" y="259.0" width="36.7" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="956.3" y="270.0">Par..</text>
        </g>
        <g>
            <title>__psynch_cvwait (31 samples, 3.11%)</title>
            <rect x="953.3" y="243.0" width="36.7" height="15" fill="#e66060" rx="2" ry="2"/>
            <text x="956.3" y="254.0">__p..</text>
        </g>
        <g>
            <title>_dispatch_queue_attr_concurrent (1 samples, 0.10%)</title>
            <rect x="990.0" y="259.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="993.0" y="270.0"></text>
        </g>
        <g>
            <title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.10%)
            </title>
            <rect x="991.2" y="259.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="994.2" y="270.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$67/408427736.run (34 samples, 3.41%)</title>
            <rect x="992.3" y="371.0" width="40.3" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="995.3" y="382.0">ru/..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$3 (34 samples, 3.41%)</title>
            <rect x="992.3" y="355.0" width="40.3" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="995.3" y="366.0">ru/..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.sendResponse (28 samples, 2.81%)</title>
            <rect x="992.3" y="339.0" width="33.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="995.3" y="350.0">on..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.writeResponse (26 samples, 2.61%)</title>
            <rect x="993.5" y="323.0" width="30.8" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="996.5" y="334.0">on..</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (26 samples, 2.61%)</title>
            <rect x="993.5" y="307.0" width="30.8" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="996.5" y="318.0">on..</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (26 samples, 2.61%)</title>
            <rect x="993.5" y="291.0" width="30.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="996.5" y="302.0">on..</text>
        </g>
        <g>
            <title>one/nio/net/Session$ArrayQueueItem.write (26 samples, 2.61%)</title>
            <rect x="993.5" y="275.0" width="30.8" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="996.5" y="286.0">on..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.write (26 samples, 2.61%)</title>
            <rect x="993.5" y="259.0" width="30.8" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="996.5" y="270.0">on..</text>
        </g>
        <g>
            <title>sun/nio/ch/SocketChannelImpl.write (26 samples, 2.61%)</title>
            <rect x="993.5" y="243.0" width="30.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="996.5" y="254.0">su..</text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.write (26 samples, 2.61%)</title>
            <rect x="993.5" y="227.0" width="30.8" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="996.5" y="238.0">su..</text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.write (26 samples, 2.61%)</title>
            <rect x="993.5" y="211.0" width="30.8" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="996.5" y="222.0">su..</text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.writeFromNativeBuffer (24 samples, 2.41%)</title>
            <rect x="994.7" y="195.0" width="28.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="997.7" y="206.0">su..</text>
        </g>
        <g>
            <title>sun/nio/ch/SocketDispatcher.write (24 samples, 2.41%)</title>
            <rect x="994.7" y="179.0" width="28.4" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="997.7" y="190.0">su..</text>
        </g>
        <g>
            <title>sun/nio/ch/FileDispatcherImpl.write0 (24 samples, 2.41%)</title>
            <rect x="994.7" y="163.0" width="28.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="997.7" y="174.0">su..</text>
        </g>
        <g>
            <title>Java_sun_nio_ch_FileDispatcherImpl_write0 (2 samples, 0.20%)</title>
            <rect x="995.9" y="147.0" width="2.4" height="15" fill="#f37373" rx="2" ry="2"/>
            <text x="998.9" y="158.0"></text>
        </g>
        <g>
            <title>fdval (1 samples, 0.10%)</title>
            <rect x="997.1" y="131.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="1000.1" y="142.0"></text>
        </g>
        <g>
            <title>write (21 samples, 2.11%)</title>
            <rect x="998.3" y="147.0" width="24.8" height="15" fill="#f67676" rx="2" ry="2"/>
            <text x="1001.3" y="158.0">w..</text>
        </g>
        <g>
            <title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.10%)</title>
            <rect x="1023.1" y="195.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="1026.1" y="206.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.get (1 samples, 0.10%)</title>
            <rect x="1023.1" y="179.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="1026.1" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.10%)</title>
            <rect x="1023.1" y="163.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="1026.1" y="174.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util$1.initialValue (1 samples, 0.10%)</title>
            <rect x="1023.1" y="147.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="1026.1" y="158.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$64/1318560066.act (1 samples, 0.10%)</title>
            <rect x="1024.3" y="323.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="1027.3" y="334.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$64/1318560066.act (6 samples, 0.60%)</title>
            <rect x="1025.5" y="339.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="1028.5" y="350.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$1 (6 samples, 0.60%)</title>
            <rect x="1025.5" y="323.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="1028.5" y="334.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.upsert (6 samples, 0.60%)</title>
            <rect x="1025.5" y="307.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="1028.5" y="318.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (1 samples, 0.10%)</title>
            <rect x="1025.5" y="291.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="1028.5" y="302.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (1 samples, 0.10%)</title>
            <rect x="1025.5" y="275.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="1028.5" y="286.0"></text>
        </g>
        <g>
            <title>jbyte_disjoint_arraycopy (1 samples, 0.10%)</title>
            <rect x="1025.5" y="259.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="1028.5" y="270.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MyDAO.upsert (5 samples, 0.50%)</title>
            <rect x="1026.7" y="291.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="1029.7" y="302.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MemTablePool.upsert (5 samples, 0.50%)</title>
            <rect x="1026.7" y="275.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="1029.7" y="286.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MemTable.upsert (5 samples, 0.50%)</title>
            <rect x="1026.7" y="259.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="1029.7" y="270.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.put (5 samples, 0.50%)</title>
            <rect x="1026.7" y="243.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="1029.7" y="254.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.doPut (4 samples, 0.40%)</title>
            <rect x="1027.9" y="227.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="1030.9" y="238.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.30%)</title>
            <rect x="1029.0" y="211.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="1032.0" y="222.0"></text>
        </g>
        <g>
            <title>[NIO Worker #4 tid=37379] (125 samples, 12.54%)</title>
            <rect x="1032.6" y="435.0" width="147.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="1035.6" y="446.0">[NIO Worker #4 tid=..</text>
        </g>
        <g>
            <title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (15 samples, 1.50%)
            </title>
            <rect x="1032.6" y="419.0" width="17.7" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1035.6" y="430.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::enter(Thread*) (14 samples, 1.40%)</title>
            <rect x="1033.8" y="403.0" width="16.5" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1036.8" y="414.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.20%)</title>
            <rect x="1033.8" y="387.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1036.8" y="398.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.20%)</title>
            <rect x="1033.8" y="371.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1036.8" y="382.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.20%)</title>
            <rect x="1033.8" y="355.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1036.8" y="366.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::TrySpin(Thread*) (12 samples, 1.20%)</title>
            <rect x="1036.1" y="387.0" width="14.2" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1039.1" y="398.0"></text>
        </g>
        <g>
            <title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.20%)</title>
            <rect x="1048.0" y="371.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1051.0" y="382.0"></text>
        </g>
        <g>
            <title>[not_walkable] (3 samples, 0.30%)</title>
            <rect x="1050.3" y="419.0" width="3.6" height="15" fill="#f27171" rx="2" ry="2"/>
            <text x="1053.3" y="430.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.run (107 samples, 10.73%)</title>
            <rect x="1053.9" y="419.0" width="126.6" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="1056.9" y="430.0">java/lang/Thread..</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.run (107 samples, 10.73%)</title>
            <rect x="1053.9" y="403.0" width="126.6" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="1056.9" y="414.0">java/util/concur..</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.runWorker (107 samples, 10.73%)</title>
            <rect x="1053.9" y="387.0" width="126.6" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="1056.9" y="398.0">java/util/concur..</text>
        </g>
        <g>
            <title>java/lang/Thread.isInterrupted (1 samples, 0.10%)</title>
            <rect x="1053.9" y="371.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="1056.9" y="382.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.isInterrupted (1 samples, 0.10%)</title>
            <rect x="1053.9" y="355.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="1056.9" y="366.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.getTask (80 samples, 8.02%)</title>
            <rect x="1055.1" y="371.0" width="94.7" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="1058.1" y="382.0">java/util/c..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue.take (80 samples, 8.02%)</title>
            <rect x="1055.1" y="355.0" width="94.7" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="1058.1" y="366.0">java/util/c..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (80 samples, 8.02%)</title>
            <rect x="1055.1" y="339.0" width="94.7" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="1058.1" y="350.0">java/util/c..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (80 samples, 8.02%)</title>
            <rect x="1055.1" y="323.0" width="94.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="1058.1" y="334.0">java/util/c..</text>
        </g>
        <g>
            <title>java/lang/Thread.isInterrupted (1 samples, 0.10%)</title>
            <rect x="1056.3" y="307.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="1059.3" y="318.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.park (78 samples, 7.82%)</title>
            <rect x="1057.4" y="307.0" width="92.4" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="1060.4" y="318.0">java/util/c..</text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.park (24 samples, 2.41%)</title>
            <rect x="1121.4" y="291.0" width="28.4" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="1124.4" y="302.0">jd..</text>
        </g>
        <g>
            <title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (23 samples, 2.31%)</title>
            <rect x="1122.5" y="275.0" width="27.3" height="15" fill="#f57575" rx="2" ry="2"/>
            <text x="1125.5" y="286.0">U..</text>
        </g>
        <g>
            <title>Parker::park(bool, long) (22 samples, 2.21%)</title>
            <rect x="1122.5" y="259.0" width="26.1" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1125.5" y="270.0">P..</text>
        </g>
        <g>
            <title>__psynch_cvwait (21 samples, 2.11%)</title>
            <rect x="1122.5" y="243.0" width="24.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
            <text x="1125.5" y="254.0">_..</text>
        </g>
        <g>
            <title>_pthread_cond_wait (1 samples, 0.10%)</title>
            <rect x="1147.4" y="243.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="1150.4" y="254.0"></text>
        </g>
        <g>
            <title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.10%)
            </title>
            <rect x="1148.6" y="259.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1151.6" y="270.0"></text>
        </g>
        <g>
            <title>JavaThread::is_suspend_after_native() const (1 samples, 0.10%)</title>
            <rect x="1148.6" y="243.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
            <text x="1151.6" y="254.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$67/408427736.run (26 samples, 2.61%)</title>
            <rect x="1149.8" y="371.0" width="30.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="1152.8" y="382.0">ru..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$3 (26 samples, 2.61%)</title>
            <rect x="1149.8" y="355.0" width="30.7" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="1152.8" y="366.0">ru..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.sendResponse (24 samples, 2.41%)</title>
            <rect x="1149.8" y="339.0" width="28.4" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="1152.8" y="350.0">on..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.writeResponse (23 samples, 2.31%)</title>
            <rect x="1150.9" y="323.0" width="27.3" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="1153.9" y="334.0">o..</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (23 samples, 2.31%)</title>
            <rect x="1150.9" y="307.0" width="27.3" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="1153.9" y="318.0">o..</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (23 samples, 2.31%)</title>
            <rect x="1150.9" y="291.0" width="27.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="1153.9" y="302.0">o..</text>
        </g>
        <g>
            <title>one/nio/net/Session$ArrayQueueItem.write (22 samples, 2.21%)</title>
            <rect x="1152.1" y="275.0" width="26.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="1155.1" y="286.0">o..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.write (22 samples, 2.21%)</title>
            <rect x="1152.1" y="259.0" width="26.1" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="1155.1" y="270.0">o..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (1 samples, 0.10%)</title>
            <rect x="1152.1" y="243.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="1155.1" y="254.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.10%)</title>
            <rect x="1152.1" y="227.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="1155.1" y="238.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.10%)</title>
            <rect x="1152.1" y="211.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="1155.1" y="222.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SocketChannelImpl.write (21 samples, 2.11%)</title>
            <rect x="1153.3" y="243.0" width="24.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="1156.3" y="254.0">s..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.10%)</title>
            <rect x="1153.3" y="227.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="1156.3" y="238.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.10%)</title>
            <rect x="1153.3" y="211.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="1156.3" y="222.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.20%)</title>
            <rect x="1154.5" y="227.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="1157.5" y="238.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.20%)</title>
            <rect x="1154.5" y="211.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="1157.5" y="222.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.20%)</title>
            <rect x="1154.5" y="195.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="1157.5" y="206.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.write (18 samples, 1.81%)</title>
            <rect x="1156.9" y="227.0" width="21.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="1159.9" y="238.0">s..</text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.write (18 samples, 1.81%)</title>
            <rect x="1156.9" y="211.0" width="21.3" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="1159.9" y="222.0">s..</text>
        </g>
        <g>
            <title>java/nio/DirectByteBuffer.put (1 samples, 0.10%)</title>
            <rect x="1158.0" y="195.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="1161.0" y="206.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.writeFromNativeBuffer (16 samples, 1.60%)</title>
            <rect x="1159.2" y="195.0" width="19.0" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="1162.2" y="206.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SocketDispatcher.write (16 samples, 1.60%)</title>
            <rect x="1159.2" y="179.0" width="19.0" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="1162.2" y="190.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/FileDispatcherImpl.write0 (16 samples, 1.60%)</title>
            <rect x="1159.2" y="163.0" width="19.0" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="1162.2" y="174.0"></text>
        </g>
        <g>
            <title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.10%)</title>
            <rect x="1161.6" y="147.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
            <text x="1164.6" y="158.0"></text>
        </g>
        <g>
            <title>write (13 samples, 1.30%)</title>
            <rect x="1162.8" y="147.0" width="15.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="1165.8" y="158.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$64/1318560066.act (2 samples, 0.20%)</title>
            <rect x="1178.2" y="339.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="1181.2" y="350.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$1 (2 samples, 0.20%)</title>
            <rect x="1178.2" y="323.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="1181.2" y="334.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.upsert (2 samples, 0.20%)</title>
            <rect x="1178.2" y="307.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="1181.2" y="318.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (1 samples, 0.10%)</title>
            <rect x="1178.2" y="291.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="1181.2" y="302.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (1 samples, 0.10%)</title>
            <rect x="1178.2" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="1181.2" y="286.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MyDAO.upsert (1 samples, 0.10%)</title>
            <rect x="1179.3" y="291.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="1182.3" y="302.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MemTablePool.upsert (1 samples, 0.10%)</title>
            <rect x="1179.3" y="275.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="1182.3" y="286.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MemTable.upsert (1 samples, 0.10%)</title>
            <rect x="1179.3" y="259.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="1182.3" y="270.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.put (1 samples, 0.10%)</title>
            <rect x="1179.3" y="243.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="1182.3" y="254.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.10%)</title>
            <rect x="1179.3" y="227.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="1182.3" y="238.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.10%)</title>
            <rect x="1179.3" y="211.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="1182.3" y="222.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (1 samples, 0.10%)</title>
            <rect x="1179.3" y="195.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="1182.3" y="206.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.compareTo (1 samples, 0.10%)</title>
            <rect x="1179.3" y="179.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="1182.3" y="190.0"></text>
        </g>
        <g>
            <title>java/nio/BufferMismatch.mismatch (1 samples, 0.10%)</title>
            <rect x="1179.3" y="163.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="1182.3" y="174.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.get (1 samples, 0.10%)</title>
            <rect x="1179.3" y="147.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="1182.3" y="158.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.checkIndex (1 samples, 0.10%)</title>
            <rect x="1179.3" y="131.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="1182.3" y="142.0"></text>
        </g>
        <g>
            <title>[tid=13827] (5 samples, 0.50%)</title>
            <rect x="1180.5" y="435.0" width="5.9" height="15" fill="#f87878" rx="2" ry="2"/>
            <text x="1183.5" y="446.0"></text>
        </g>
        <g>
            <title>thread_start (5 samples, 0.50%)</title>
            <rect x="1180.5" y="419.0" width="5.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
            <text x="1183.5" y="430.0"></text>
        </g>
        <g>
            <title>_pthread_start (5 samples, 0.50%)</title>
            <rect x="1180.5" y="403.0" width="5.9" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="1183.5" y="414.0"></text>
        </g>
        <g>
            <title>thread_native_entry(Thread*) (5 samples, 0.50%)</title>
            <rect x="1180.5" y="387.0" width="5.9" height="15" fill="#f57474" rx="2" ry="2"/>
            <text x="1183.5" y="398.0"></text>
        </g>
        <g>
            <title>Thread::call_run() (5 samples, 0.50%)</title>
            <rect x="1180.5" y="371.0" width="5.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="1183.5" y="382.0"></text>
        </g>
        <g>
            <title>JavaThread::thread_main_inner() (5 samples, 0.50%)</title>
            <rect x="1180.5" y="355.0" width="5.9" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1183.5" y="366.0"></text>
        </g>
        <g>
            <title>CompileBroker::compiler_thread_loop() (5 samples, 0.50%)</title>
            <rect x="1180.5" y="339.0" width="5.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1183.5" y="350.0"></text>
        </g>
        <g>
            <title>CompileBroker::invoke_compiler_on_method(CompileTask*) (5 samples, 0.50%)</title>
            <rect x="1180.5" y="323.0" width="5.9" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1183.5" y="334.0"></text>
        </g>
        <g>
            <title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (5 samples, 0.50%)</title>
            <rect x="1180.5" y="307.0" width="5.9" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1183.5" y="318.0"></text>
        </g>
        <g>
            <title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (5 samples,
                0.50%)
            </title>
            <rect x="1180.5" y="291.0" width="5.9" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1183.5" y="302.0"></text>
        </g>
        <g>
            <title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (5 samples,
                0.50%)
            </title>
            <rect x="1180.5" y="275.0" width="5.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1183.5" y="286.0"></text>
        </g>
        <g>
            <title>Compile::Code_Gen() (3 samples, 0.30%)</title>
            <rect x="1180.5" y="259.0" width="3.6" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="1183.5" y="270.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::Register_Allocate() (3 samples, 0.30%)</title>
            <rect x="1180.5" y="243.0" width="3.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
            <text x="1183.5" y="254.0"></text>
        </g>
        <g>
            <title>Node::cisc_operand() const (1 samples, 0.10%)</title>
            <rect x="1180.5" y="227.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1183.5" y="238.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.10%)</title>
            <rect x="1181.7" y="227.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1184.7" y="238.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::compute_initial_block_pressure(Block*, IndexSet*, PhaseChaitin::Pressure&amp;,
                PhaseChaitin::Pressure&amp;, double) (1 samples, 0.10%)
            </title>
            <rect x="1181.7" y="211.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1184.7" y="222.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::raise_pressure(Block*, LRG&amp;, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;)
                (1 samples, 0.10%)
            </title>
            <rect x="1181.7" y="195.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1184.7" y="206.0"></text>
        </g>
        <g>
            <title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.10%)</title>
            <rect x="1182.9" y="227.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1185.9" y="238.0"></text>
        </g>
        <g>
            <title>Node::replace_by(Node*) (1 samples, 0.10%)</title>
            <rect x="1182.9" y="211.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1185.9" y="222.0"></text>
        </g>
        <g>
            <title>Node::set_req(unsigned int, Node*) (1 samples, 0.10%)</title>
            <rect x="1182.9" y="195.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1185.9" y="206.0"></text>
        </g>
        <g>
            <title>Compile::current() (1 samples, 0.10%)</title>
            <rect x="1182.9" y="179.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
            <text x="1185.9" y="190.0"></text>
        </g>
        <g>
            <title>ciEnv::compiler_data() (1 samples, 0.10%)</title>
            <rect x="1182.9" y="163.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1185.9" y="174.0"></text>
        </g>
        <g>
            <title>Compile::Optimize() (2 samples, 0.20%)</title>
            <rect x="1184.1" y="259.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1187.1" y="270.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (1 samples, 0.10%)</title>
            <rect x="1184.1" y="243.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1187.1" y="254.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.10%)
            </title>
            <rect x="1184.1" y="227.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="1187.1" y="238.0"></text>
        </g>
        <g>
            <title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.10%)</title>
            <rect x="1184.1" y="211.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="1187.1" y="222.0"></text>
        </g>
        <g>
            <title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.10%)</title>
            <rect x="1185.3" y="243.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="1188.3" y="254.0"></text>
        </g>
        <g>
            <title>PhaseMacroExpand::expand_lock_node(LockNode*) (1 samples, 0.10%)</title>
            <rect x="1185.3" y="227.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1188.3" y="238.0"></text>
        </g>
        <g>
            <title>Type::hashcons() (1 samples, 0.10%)</title>
            <rect x="1185.3" y="211.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1188.3" y="222.0"></text>
        </g>
        <g>
            <title>Dict::Insert(void*, void*, bool) (1 samples, 0.10%)</title>
            <rect x="1185.3" y="195.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1188.3" y="206.0"></text>
        </g>
        <g>
            <title>Type::cmp(Type const*, Type const*) (1 samples, 0.10%)</title>
            <rect x="1185.3" y="179.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
            <text x="1188.3" y="190.0"></text>
        </g>
        <g>
            <title>[tid=19459] (1 samples, 0.10%)</title>
            <rect x="1186.4" y="435.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
            <text x="1189.4" y="446.0"></text>
        </g>
        <g>
            <title>thread_start (1 samples, 0.10%)</title>
            <rect x="1186.4" y="419.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="1189.4" y="430.0"></text>
        </g>
        <g>
            <title>_pthread_start (1 samples, 0.10%)</title>
            <rect x="1186.4" y="403.0" width="1.2" height="15" fill="#f87878" rx="2" ry="2"/>
            <text x="1189.4" y="414.0"></text>
        </g>
        <g>
            <title>thread_native_entry(Thread*) (1 samples, 0.10%)</title>
            <rect x="1186.4" y="387.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
            <text x="1189.4" y="398.0"></text>
        </g>
        <g>
            <title>Thread::call_run() (1 samples, 0.10%)</title>
            <rect x="1186.4" y="371.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1189.4" y="382.0"></text>
        </g>
        <g>
            <title>ConcurrentGCThread::run() (1 samples, 0.10%)</title>
            <rect x="1186.4" y="355.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1189.4" y="366.0"></text>
        </g>
        <g>
            <title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.10%)</title>
            <rect x="1186.4" y="339.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
            <text x="1189.4" y="350.0"></text>
        </g>
        <g>
            <title>G1YoungRemSetSamplingThread::sample_young_list_rs_lengths() (1 samples, 0.10%)</title>
            <rect x="1186.4" y="323.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1189.4" y="334.0"></text>
        </g>
        <g>
            <title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples,
                0.10%)
            </title>
            <rect x="1186.4" y="307.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="1189.4" y="318.0"></text>
        </g>
        <g>
            <title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.10%)</title>
            <rect x="1186.4" y="291.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1189.4" y="302.0"></text>
        </g>
        <g>
            <title>Monitor::IUnlock(bool) (1 samples, 0.10%)</title>
            <rect x="1186.4" y="275.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1189.4" y="286.0"></text>
        </g>
        <g>
            <title>[tid=22787] (2 samples, 0.20%)</title>
            <rect x="1187.6" y="435.0" width="2.4" height="15" fill="#e66060" rx="2" ry="2"/>
            <text x="1190.6" y="446.0"></text>
        </g>
        <g>
            <title>thread_start (2 samples, 0.20%)</title>
            <rect x="1187.6" y="419.0" width="2.4" height="15" fill="#ec6868" rx="2" ry="2"/>
            <text x="1190.6" y="430.0"></text>
        </g>
        <g>
            <title>_pthread_start (2 samples, 0.20%)</title>
            <rect x="1187.6" y="403.0" width="2.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
            <text x="1190.6" y="414.0"></text>
        </g>
        <g>
            <title>thread_native_entry(Thread*) (2 samples, 0.20%)</title>
            <rect x="1187.6" y="387.0" width="2.4" height="15" fill="#fd8080" rx="2" ry="2"/>
            <text x="1190.6" y="398.0"></text>
        </g>
        <g>
            <title>Thread::call_run() (2 samples, 0.20%)</title>
            <rect x="1187.6" y="371.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1190.6" y="382.0"></text>
        </g>
        <g>
            <title>WatcherThread::run() (2 samples, 0.20%)</title>
            <rect x="1187.6" y="355.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1190.6" y="366.0"></text>
        </g>
        <g>
            <title>WatcherThread::sleep() const (2 samples, 0.20%)</title>
            <rect x="1187.6" y="339.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1190.6" y="350.0"></text>
        </g>
        <g>
            <title>Monitor::wait(bool, long, bool) (2 samples, 0.20%)</title>
            <rect x="1187.6" y="323.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1190.6" y="334.0"></text>
        </g>
        <g>
            <title>Monitor::IWait(Thread*, long) (2 samples, 0.20%)</title>
            <rect x="1187.6" y="307.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
            <text x="1190.6" y="318.0"></text>
        </g>
        <g>
            <title>os::PlatformEvent::park(long) (2 samples, 0.20%)</title>
            <rect x="1187.6" y="291.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1190.6" y="302.0"></text>
        </g>
        <g>
            <title>__psynch_cvwait (2 samples, 0.20%)</title>
            <rect x="1187.6" y="275.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
            <text x="1190.6" y="286.0"></text>
        </g>
    </g>
</svg>
