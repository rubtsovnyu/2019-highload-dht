<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (103,983 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (69,949 samples, 67.27%)</title><rect x="10.0" y="803.0" width="793.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (69,949 samples, 67.27%)</title><rect x="10.0" y="787.0" width="793.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (69,949 samples, 67.27%)</title><rect x="10.0" y="771.0" width="793.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (14,151 samples, 13.61%)</title><rect x="10.0" y="755.0" width="160.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13,969 samples, 13.43%)</title><rect x="10.0" y="739.0" width="158.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (13,969 samples, 13.43%)</title><rect x="10.0" y="723.0" width="158.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/concurrent..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (52 samples, 0.05%)</title><rect x="10.0" y="707.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$171/210725587.apply (13,917 samples, 13.38%)</title><rect x="10.6" y="707.0" width="157.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.6" y="718.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (13,917 samples, 13.38%)</title><rect x="10.6" y="691.0" width="157.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.6" y="702.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (13,917 samples, 13.38%)</title><rect x="10.6" y="675.0" width="157.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.6" y="686.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (83 samples, 0.08%)</title><rect x="10.6" y="659.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (83 samples, 0.08%)</title><rect x="10.6" y="643.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$307/724253840.get$Lambda (54 samples, 0.05%)</title><rect x="10.6" y="627.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.6" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$307 (54 samples, 0.05%)</title><rect x="10.6" y="611.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="13.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$310/278934779.get$Lambda (29 samples, 0.03%)</title><rect x="11.2" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.2" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$310 (29 samples, 0.03%)</title><rect x="11.2" y="611.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="14.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (149 samples, 0.14%)</title><rect x="11.5" y="659.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (149 samples, 0.14%)</title><rect x="11.5" y="643.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.5" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (86 samples, 0.08%)</title><rect x="11.5" y="627.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="14.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (63 samples, 0.06%)</title><rect x="12.5" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (63 samples, 0.06%)</title><rect x="12.5" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (63 samples, 0.06%)</title><rect x="12.5" y="595.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="15.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (275 samples, 0.26%)</title><rect x="13.2" y="659.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (275 samples, 0.26%)</title><rect x="13.2" y="643.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.2" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (149 samples, 0.14%)</title><rect x="13.2" y="627.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="16.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (126 samples, 0.12%)</title><rect x="14.9" y="627.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (126 samples, 0.12%)</title><rect x="14.9" y="611.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (126 samples, 0.12%)</title><rect x="14.9" y="595.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="17.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (13,110 samples, 12.61%)</title><rect x="16.4" y="659.0" width="148.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.4" y="670.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (13,110 samples, 12.61%)</title><rect x="16.4" y="643.0" width="148.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.4" y="654.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (13,110 samples, 12.61%)</title><rect x="16.4" y="627.0" width="148.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.4" y="638.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (106 samples, 0.10%)</title><rect x="16.4" y="611.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (106 samples, 0.10%)</title><rect x="16.4" y="595.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/1124124731.get$Lambda (27 samples, 0.03%)</title><rect x="16.4" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$200 (27 samples, 0.03%)</title><rect x="16.4" y="563.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="19.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$203/670130308.get$Lambda (40 samples, 0.04%)</title><rect x="16.7" y="579.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$203 (40 samples, 0.04%)</title><rect x="16.7" y="563.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="19.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$274/1438378433.get$Lambda (39 samples, 0.04%)</title><rect x="17.1" y="579.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$274 (39 samples, 0.04%)</title><rect x="17.1" y="563.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="20.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (8,335 samples, 8.02%)</title><rect x="17.6" y="611.0" width="94.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.6" y="622.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (8,335 samples, 8.02%)</title><rect x="17.6" y="595.0" width="94.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.6" y="606.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (8,274 samples, 7.96%)</title><rect x="17.6" y="579.0" width="93.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.6" y="590.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$274/1438378433.apply (8,274 samples, 7.96%)</title><rect x="17.6" y="563.0" width="93.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.6" y="574.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (8,274 samples, 7.96%)</title><rect x="17.6" y="547.0" width="93.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.6" y="558.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (8,274 samples, 7.96%)</title><rect x="17.6" y="531.0" width="93.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.6" y="542.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$203/670130308.apply (8,274 samples, 7.96%)</title><rect x="17.6" y="515.0" width="93.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.6" y="526.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (8,274 samples, 7.96%)</title><rect x="17.6" y="499.0" width="93.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.6" y="510.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (56 samples, 0.05%)</title><rect x="17.6" y="483.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (56 samples, 0.05%)</title><rect x="17.6" y="467.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/2063345593.get$Lambda (56 samples, 0.05%)</title><rect x="17.6" y="451.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$304 (56 samples, 0.05%)</title><rect x="17.6" y="435.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="20.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (209 samples, 0.20%)</title><rect x="18.2" y="483.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (209 samples, 0.20%)</title><rect x="18.2" y="467.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="21.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (90 samples, 0.09%)</title><rect x="18.2" y="451.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="21.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (42 samples, 0.04%)</title><rect x="19.2" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/2063345593.apply (42 samples, 0.04%)</title><rect x="19.2" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (42 samples, 0.04%)</title><rect x="19.2" y="419.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (42 samples, 0.04%)</title><rect x="19.2" y="403.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/1124124731.apply (42 samples, 0.04%)</title><rect x="19.2" y="387.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (42 samples, 0.04%)</title><rect x="19.2" y="371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (35 samples, 0.03%)</title><rect x="19.3" y="355.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (77 samples, 0.07%)</title><rect x="19.7" y="451.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (77 samples, 0.07%)</title><rect x="19.7" y="435.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (77 samples, 0.07%)</title><rect x="19.7" y="419.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="22.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (142 samples, 0.14%)</title><rect x="20.6" y="483.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (142 samples, 0.14%)</title><rect x="20.6" y="467.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (88 samples, 0.08%)</title><rect x="20.6" y="451.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="23.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.05%)</title><rect x="21.6" y="451.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.05%)</title><rect x="21.6" y="435.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.05%)</title><rect x="21.6" y="419.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="24.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (7,867 samples, 7.57%)</title><rect x="22.2" y="483.0" width="89.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.2" y="494.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (68 samples, 0.07%)</title><rect x="22.2" y="467.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (68 samples, 0.07%)</title><rect x="22.2" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="25.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$298/1779330839.get$Lambda (33 samples, 0.03%)</title><rect x="22.2" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$298 (33 samples, 0.03%)</title><rect x="22.2" y="419.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="25.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$302/526109933.get$Lambda (35 samples, 0.03%)</title><rect x="22.6" y="435.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$302 (35 samples, 0.03%)</title><rect x="22.6" y="419.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="25.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6,740 samples, 6.48%)</title><rect x="22.9" y="467.0" width="76.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.9" y="478.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6,740 samples, 6.48%)</title><rect x="22.9" y="451.0" width="76.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="25.9" y="462.0">java/uti..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (86 samples, 0.08%)</title><rect x="22.9" y="435.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="25.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$298/1779330839.apply (6,514 samples, 6.26%)</title><rect x="23.9" y="435.0" width="73.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.9" y="446.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (6,514 samples, 6.26%)</title><rect x="23.9" y="419.0" width="73.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.9" y="430.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.03%)</title><rect x="23.9" y="403.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.03%)</title><rect x="23.9" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$323/1389601670.get$Lambda (34 samples, 0.03%)</title><rect x="23.9" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$323 (34 samples, 0.03%)</title><rect x="23.9" y="355.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="26.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (147 samples, 0.14%)</title><rect x="24.3" y="403.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (147 samples, 0.14%)</title><rect x="24.3" y="387.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (71 samples, 0.07%)</title><rect x="24.3" y="371.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="27.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (76 samples, 0.07%)</title><rect x="25.1" y="371.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (76 samples, 0.07%)</title><rect x="25.1" y="355.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (76 samples, 0.07%)</title><rect x="25.1" y="339.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="28.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.06%)</title><rect x="26.0" y="403.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="29.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (100 samples, 0.10%)</title><rect x="26.6" y="403.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (45 samples, 0.04%)</title><rect x="26.6" y="387.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="29.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (55 samples, 0.05%)</title><rect x="27.2" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (46 samples, 0.04%)</title><rect x="27.2" y="371.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (46 samples, 0.04%)</title><rect x="27.2" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (46 samples, 0.04%)</title><rect x="27.2" y="339.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (46 samples, 0.04%)</title><rect x="27.2" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (46 samples, 0.04%)</title><rect x="27.2" y="307.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="30.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (146 samples, 0.14%)</title><rect x="27.8" y="403.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (146 samples, 0.14%)</title><rect x="27.8" y="387.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (54 samples, 0.05%)</title><rect x="27.8" y="371.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (54 samples, 0.05%)</title><rect x="27.8" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (54 samples, 0.05%)</title><rect x="27.8" y="339.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (54 samples, 0.05%)</title><rect x="27.8" y="323.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="30.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (92 samples, 0.09%)</title><rect x="28.4" y="371.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (92 samples, 0.09%)</title><rect x="28.4" y="355.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="31.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (71 samples, 0.07%)</title><rect x="28.4" y="339.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="31.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (6,028 samples, 5.80%)</title><rect x="29.4" y="403.0" width="68.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.4" y="414.0">jdk/int..</text>
</g>
<g>
<title>java.lang.StringBuilder (52 samples, 0.05%)</title><rect x="29.4" y="387.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="32.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (93 samples, 0.09%)</title><rect x="30.0" y="387.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.0" y="398.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.05%)</title><rect x="30.0" y="371.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="33.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.04%)</title><rect x="30.7" y="371.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="33.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (599 samples, 0.58%)</title><rect x="31.1" y="387.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (599 samples, 0.58%)</title><rect x="31.1" y="371.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (599 samples, 0.58%)</title><rect x="31.1" y="355.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.1" y="366.0"></text>
</g>
<g>
<title>byte[] (570 samples, 0.55%)</title><rect x="31.1" y="339.0" width="6.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="34.1" y="350.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.03%)</title><rect x="37.6" y="339.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="40.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (172 samples, 0.17%)</title><rect x="37.9" y="387.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.9" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (172 samples, 0.17%)</title><rect x="37.9" y="371.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.9" y="382.0"></text>
</g>
<g>
<title>byte[] (171 samples, 0.16%)</title><rect x="37.9" y="355.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="40.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (557 samples, 0.54%)</title><rect x="39.8" y="387.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (557 samples, 0.54%)</title><rect x="39.8" y="371.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (557 samples, 0.54%)</title><rect x="39.8" y="355.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.8" y="366.0"></text>
</g>
<g>
<title>byte[] (540 samples, 0.52%)</title><rect x="39.8" y="339.0" width="6.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="42.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (112 samples, 0.11%)</title><rect x="46.2" y="387.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (112 samples, 0.11%)</title><rect x="46.2" y="371.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.2" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (112 samples, 0.11%)</title><rect x="46.2" y="355.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="49.2" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (54 samples, 0.05%)</title><rect x="47.4" y="387.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.4" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (54 samples, 0.05%)</title><rect x="47.4" y="371.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="50.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (3,760 samples, 3.62%)</title><rect x="48.0" y="387.0" width="42.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.0" y="398.0">jdk/..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (60 samples, 0.06%)</title><rect x="48.0" y="371.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (60 samples, 0.06%)</title><rect x="48.0" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.06%)</title><rect x="48.0" y="339.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.0" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$325/1191925351.get$Lambda (60 samples, 0.06%)</title><rect x="48.0" y="323.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.0" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$325 (60 samples, 0.06%)</title><rect x="48.0" y="307.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="51.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,799 samples, 1.73%)</title><rect x="48.7" y="371.0" width="20.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="51.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (899 samples, 0.86%)</title><rect x="48.7" y="355.0" width="10.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.7" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (899 samples, 0.86%)</title><rect x="48.7" y="339.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.7" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (899 samples, 0.86%)</title><rect x="48.7" y="323.0" width="10.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="51.7" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (899 samples, 0.86%)</title><rect x="48.7" y="307.0" width="10.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="51.7" y="318.0"></text>
</g>
<g>
<title>byte[] (878 samples, 0.84%)</title><rect x="48.7" y="291.0" width="10.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="51.7" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (124 samples, 0.12%)</title><rect x="58.9" y="355.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.9" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (124 samples, 0.12%)</title><rect x="58.9" y="339.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (124 samples, 0.12%)</title><rect x="58.9" y="323.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.9" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (124 samples, 0.12%)</title><rect x="58.9" y="307.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="61.9" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (148 samples, 0.14%)</title><rect x="60.3" y="355.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.3" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (82 samples, 0.08%)</title><rect x="60.3" y="339.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="63.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (66 samples, 0.06%)</title><rect x="61.3" y="339.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.3" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (66 samples, 0.06%)</title><rect x="61.3" y="323.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="64.3" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$325/1191925351.test (628 samples, 0.60%)</title><rect x="62.0" y="355.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.0" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (628 samples, 0.60%)</title><rect x="62.0" y="339.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1610702581.test (628 samples, 0.60%)</title><rect x="62.0" y="323.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (628 samples, 0.60%)</title><rect x="62.0" y="307.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.0" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$75/1212772528.test (628 samples, 0.60%)</title><rect x="62.0" y="291.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.0" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (628 samples, 0.60%)</title><rect x="62.0" y="275.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$74/896644936.test (628 samples, 0.60%)</title><rect x="62.0" y="259.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (628 samples, 0.60%)</title><rect x="62.0" y="243.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.0" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (628 samples, 0.60%)</title><rect x="62.0" y="227.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (628 samples, 0.60%)</title><rect x="62.0" y="211.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.0" y="222.0"></text>
</g>
<g>
<title>java.lang.String (299 samples, 0.29%)</title><rect x="62.0" y="195.0" width="3.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="65.0" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (329 samples, 0.32%)</title><rect x="65.4" y="195.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.4" y="206.0"></text>
</g>
<g>
<title>byte[] (329 samples, 0.32%)</title><rect x="65.4" y="179.0" width="3.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="68.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (1,901 samples, 1.83%)</title><rect x="69.1" y="371.0" width="21.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="72.1" y="382.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,901 samples, 1.83%)</title><rect x="69.1" y="355.0" width="21.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.1" y="366.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,901 samples, 1.83%)</title><rect x="69.1" y="339.0" width="21.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.1" y="350.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (31 samples, 0.03%)</title><rect x="69.1" y="323.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="72.1" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (43 samples, 0.04%)</title><rect x="69.5" y="323.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="72.5" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (93 samples, 0.09%)</title><rect x="70.0" y="323.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="73.0" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (30 samples, 0.03%)</title><rect x="71.0" y="323.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="74.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (70 samples, 0.07%)</title><rect x="71.4" y="323.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (70 samples, 0.07%)</title><rect x="71.4" y="307.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.4" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.get$Lambda (70 samples, 0.07%)</title><rect x="71.4" y="291.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.4" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$149 (70 samples, 0.07%)</title><rect x="71.4" y="275.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="74.4" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (64 samples, 0.06%)</title><rect x="72.2" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.2" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (64 samples, 0.06%)</title><rect x="72.2" y="307.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="75.2" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,475 samples, 1.42%)</title><rect x="72.9" y="323.0" width="16.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.9" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.accept (1,475 samples, 1.42%)</title><rect x="72.9" y="307.0" width="16.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.9" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,475 samples, 1.42%)</title><rect x="72.9" y="291.0" width="16.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (274 samples, 0.26%)</title><rect x="72.9" y="275.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (274 samples, 0.26%)</title><rect x="72.9" y="259.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.get$Lambda (274 samples, 0.26%)</title><rect x="72.9" y="243.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.9" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$157 (274 samples, 0.26%)</title><rect x="72.9" y="227.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="75.9" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (108 samples, 0.10%)</title><rect x="76.0" y="275.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.accept (108 samples, 0.10%)</title><rect x="76.0" y="259.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (108 samples, 0.10%)</title><rect x="76.0" y="243.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.0" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (108 samples, 0.10%)</title><rect x="76.0" y="227.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.0" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (108 samples, 0.10%)</title><rect x="76.0" y="211.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.0" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (108 samples, 0.10%)</title><rect x="76.0" y="195.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.0" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (108 samples, 0.10%)</title><rect x="76.0" y="179.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (108 samples, 0.10%)</title><rect x="76.0" y="163.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (108 samples, 0.10%)</title><rect x="76.0" y="147.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="79.0" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (612 samples, 0.59%)</title><rect x="77.2" y="275.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.2" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (612 samples, 0.59%)</title><rect x="77.2" y="259.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.2" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (283 samples, 0.27%)</title><rect x="77.2" y="243.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (283 samples, 0.27%)</title><rect x="77.2" y="227.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.2" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (283 samples, 0.27%)</title><rect x="77.2" y="211.0" width="3.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="80.2" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (329 samples, 0.32%)</title><rect x="80.4" y="243.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.4" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (329 samples, 0.32%)</title><rect x="80.4" y="227.0" width="3.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="83.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (481 samples, 0.46%)</title><rect x="84.2" y="275.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.2" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (481 samples, 0.46%)</title><rect x="84.2" y="259.0" width="5.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="87.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (95 samples, 0.09%)</title><rect x="89.6" y="323.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="92.6" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (95 samples, 0.09%)</title><rect x="89.6" y="307.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="92.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (145 samples, 0.14%)</title><rect x="90.7" y="387.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="93.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (41 samples, 0.04%)</title><rect x="90.7" y="371.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.7" y="382.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.04%)</title><rect x="90.7" y="355.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="93.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (104 samples, 0.10%)</title><rect x="91.2" y="371.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (104 samples, 0.10%)</title><rect x="91.2" y="355.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1089418272.invoke (104 samples, 0.10%)</title><rect x="91.2" y="339.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (104 samples, 0.10%)</title><rect x="91.2" y="323.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (42 samples, 0.04%)</title><rect x="91.2" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.04%)</title><rect x="91.2" y="291.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="94.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (62 samples, 0.06%)</title><rect x="91.6" y="307.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (62 samples, 0.06%)</title><rect x="91.6" y="291.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.6" y="302.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.06%)</title><rect x="91.6" y="275.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="94.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (123 samples, 0.12%)</title><rect x="92.4" y="387.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (123 samples, 0.12%)</title><rect x="92.4" y="371.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="95.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (123 samples, 0.12%)</title><rect x="92.4" y="355.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (123 samples, 0.12%)</title><rect x="92.4" y="339.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1089418272.invoke (123 samples, 0.12%)</title><rect x="92.4" y="323.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (123 samples, 0.12%)</title><rect x="92.4" y="307.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="95.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (49 samples, 0.05%)</title><rect x="92.4" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.4" y="302.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.05%)</title><rect x="92.4" y="275.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="95.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (74 samples, 0.07%)</title><rect x="92.9" y="291.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (74 samples, 0.07%)</title><rect x="92.9" y="275.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="95.9" y="286.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.07%)</title><rect x="92.9" y="259.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="95.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (361 samples, 0.35%)</title><rect x="93.7" y="387.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.7" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (96 samples, 0.09%)</title><rect x="93.7" y="371.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="96.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (97 samples, 0.09%)</title><rect x="94.8" y="371.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (97 samples, 0.09%)</title><rect x="94.8" y="355.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="97.8" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (168 samples, 0.16%)</title><rect x="95.9" y="371.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="98.9" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (168 samples, 0.16%)</title><rect x="95.9" y="355.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="98.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (140 samples, 0.13%)</title><rect x="97.8" y="435.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (140 samples, 0.13%)</title><rect x="97.8" y="419.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (140 samples, 0.13%)</title><rect x="97.8" y="403.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="100.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (210 samples, 0.20%)</title><rect x="99.4" y="467.0" width="2.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="102.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.05%)</title><rect x="101.8" y="467.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="104.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (794 samples, 0.76%)</title><rect x="102.4" y="467.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.05%)</title><rect x="102.4" y="451.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.05%)</title><rect x="102.4" y="435.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="105.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$280/1821321863.get$Lambda (24 samples, 0.02%)</title><rect x="102.4" y="419.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="105.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$280 (24 samples, 0.02%)</title><rect x="102.4" y="403.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="105.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$282/1146859669.get$Lambda (28 samples, 0.03%)</title><rect x="102.7" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$282 (28 samples, 0.03%)</title><rect x="102.7" y="403.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="105.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (79 samples, 0.08%)</title><rect x="103.0" y="451.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="106.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (69 samples, 0.07%)</title><rect x="103.9" y="451.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="106.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (69 samples, 0.07%)</title><rect x="104.7" y="451.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="107.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (227 samples, 0.22%)</title><rect x="105.5" y="451.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (227 samples, 0.22%)</title><rect x="105.5" y="435.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (227 samples, 0.22%)</title><rect x="105.5" y="419.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (227 samples, 0.22%)</title><rect x="105.5" y="403.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (227 samples, 0.22%)</title><rect x="105.5" y="387.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (227 samples, 0.22%)</title><rect x="105.5" y="371.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$259/1643973216.run (227 samples, 0.22%)</title><rect x="105.5" y="355.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (227 samples, 0.22%)</title><rect x="105.5" y="339.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (227 samples, 0.22%)</title><rect x="105.5" y="323.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (81 samples, 0.08%)</title><rect x="105.5" y="307.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (81 samples, 0.08%)</title><rect x="105.5" y="291.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/659675147.get$Lambda (36 samples, 0.03%)</title><rect x="105.5" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$284 (36 samples, 0.03%)</title><rect x="105.5" y="259.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="108.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$286/690219596.get$Lambda (45 samples, 0.04%)</title><rect x="105.9" y="275.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$286 (45 samples, 0.04%)</title><rect x="105.9" y="259.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="108.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (63 samples, 0.06%)</title><rect x="106.4" y="307.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="109.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (83 samples, 0.08%)</title><rect x="107.1" y="307.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (83 samples, 0.08%)</title><rect x="107.1" y="291.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (28 samples, 0.03%)</title><rect x="107.1" y="275.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="110.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (55 samples, 0.05%)</title><rect x="107.4" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (55 samples, 0.05%)</title><rect x="107.4" y="259.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="110.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (234 samples, 0.23%)</title><rect x="108.1" y="451.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.1" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (45 samples, 0.04%)</title><rect x="108.1" y="435.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="111.1" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (113 samples, 0.11%)</title><rect x="108.6" y="435.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="111.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (76 samples, 0.07%)</title><rect x="109.9" y="435.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.9" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (76 samples, 0.07%)</title><rect x="109.9" y="419.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.9" y="430.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.07%)</title><rect x="109.9" y="403.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="112.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (64 samples, 0.06%)</title><rect x="110.7" y="451.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.06%)</title><rect x="110.7" y="435.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="113.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (61 samples, 0.06%)</title><rect x="111.5" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="114.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (61 samples, 0.06%)</title><rect x="111.5" y="563.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="114.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (61 samples, 0.06%)</title><rect x="111.5" y="547.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="114.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (124 samples, 0.12%)</title><rect x="112.1" y="611.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (124 samples, 0.12%)</title><rect x="112.1" y="595.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (58 samples, 0.06%)</title><rect x="112.1" y="579.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="115.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (66 samples, 0.06%)</title><rect x="112.8" y="579.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (66 samples, 0.06%)</title><rect x="112.8" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (66 samples, 0.06%)</title><rect x="112.8" y="547.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="115.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (4,545 samples, 4.37%)</title><rect x="113.6" y="611.0" width="51.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.6" y="622.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (74 samples, 0.07%)</title><rect x="113.6" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="116.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (74 samples, 0.07%)</title><rect x="113.6" y="579.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$271/74074948.get$Lambda (43 samples, 0.04%)</title><rect x="113.6" y="563.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$271 (43 samples, 0.04%)</title><rect x="113.6" y="547.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="116.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$273/1434040749.get$Lambda (31 samples, 0.03%)</title><rect x="114.0" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$273 (31 samples, 0.03%)</title><rect x="114.0" y="547.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="117.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (124 samples, 0.12%)</title><rect x="114.4" y="595.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (124 samples, 0.12%)</title><rect x="114.4" y="579.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$273/1434040749.apply (59 samples, 0.06%)</title><rect x="114.4" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (59 samples, 0.06%)</title><rect x="114.4" y="547.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (59 samples, 0.06%)</title><rect x="114.4" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.06%)</title><rect x="114.4" y="515.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="117.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.06%)</title><rect x="115.1" y="563.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.06%)</title><rect x="115.1" y="547.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (65 samples, 0.06%)</title><rect x="115.1" y="531.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="118.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (59 samples, 0.06%)</title><rect x="115.8" y="595.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (59 samples, 0.06%)</title><rect x="115.8" y="579.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.06%)</title><rect x="115.8" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.06%)</title><rect x="115.8" y="547.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.06%)</title><rect x="115.8" y="531.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="118.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (4,288 samples, 4.12%)</title><rect x="116.5" y="595.0" width="48.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.5" y="606.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.05%)</title><rect x="116.5" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.05%)</title><rect x="116.5" y="563.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$215/923038470.get$Lambda (48 samples, 0.05%)</title><rect x="116.5" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$215 (48 samples, 0.05%)</title><rect x="116.5" y="531.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="119.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3,993 samples, 3.84%)</title><rect x="117.0" y="579.0" width="45.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="120.0" y="590.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3,993 samples, 3.84%)</title><rect x="117.0" y="563.0" width="45.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="120.0" y="574.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,928 samples, 3.78%)</title><rect x="117.0" y="547.0" width="44.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.0" y="558.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$215/923038470.apply (3,928 samples, 3.78%)</title><rect x="117.0" y="531.0" width="44.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.0" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (3,928 samples, 3.78%)</title><rect x="117.0" y="515.0" width="44.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.0" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (3,928 samples, 3.78%)</title><rect x="117.0" y="499.0" width="44.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.0" y="510.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.04%)</title><rect x="117.0" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.04%)</title><rect x="117.0" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$264/1092418694.get$Lambda (37 samples, 0.04%)</title><rect x="117.0" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$264 (37 samples, 0.04%)</title><rect x="117.0" y="435.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="120.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1,548 samples, 1.49%)</title><rect x="117.4" y="483.0" width="17.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,548 samples, 1.49%)</title><rect x="117.4" y="467.0" width="17.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1,548 samples, 1.49%)</title><rect x="117.4" y="451.0" width="17.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="120.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$264/1092418694.apply (1,478 samples, 1.42%)</title><rect x="117.4" y="435.0" width="16.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (1,478 samples, 1.42%)</title><rect x="117.4" y="419.0" width="16.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="120.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (1,478 samples, 1.42%)</title><rect x="117.4" y="403.0" width="16.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (1,478 samples, 1.42%)</title><rect x="117.4" y="387.0" width="16.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (933 samples, 0.90%)</title><rect x="117.4" y="371.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.4" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (270 samples, 0.26%)</title><rect x="117.4" y="355.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.04%)</title><rect x="117.4" y="339.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="120.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (118 samples, 0.11%)</title><rect x="117.9" y="339.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="120.9" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (118 samples, 0.11%)</title><rect x="117.9" y="323.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.9" y="334.0"></text>
</g>
<g>
<title>byte[] (118 samples, 0.11%)</title><rect x="117.9" y="307.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="120.9" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (111 samples, 0.11%)</title><rect x="119.2" y="339.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.2" y="350.0"></text>
</g>
<g>
<title>byte[] (111 samples, 0.11%)</title><rect x="119.2" y="323.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="122.2" y="334.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (43 samples, 0.04%)</title><rect x="120.5" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.5" y="366.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (43 samples, 0.04%)</title><rect x="120.5" y="339.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="123.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (432 samples, 0.42%)</title><rect x="121.0" y="355.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (354 samples, 0.34%)</title><rect x="121.0" y="339.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (354 samples, 0.34%)</title><rect x="121.0" y="323.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1995250556.linkToTargetMethod (256 samples, 0.25%)</title><rect x="121.0" y="307.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (256 samples, 0.25%)</title><rect x="121.0" y="291.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/961160488.get$Lambda (256 samples, 0.25%)</title><rect x="121.0" y="275.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$70 (256 samples, 0.25%)</title><rect x="121.0" y="259.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="124.0" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (98 samples, 0.09%)</title><rect x="123.9" y="307.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="126.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/961160488.run (98 samples, 0.09%)</title><rect x="123.9" y="291.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (98 samples, 0.09%)</title><rect x="123.9" y="275.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.9" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (98 samples, 0.09%)</title><rect x="123.9" y="259.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.9" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (98 samples, 0.09%)</title><rect x="123.9" y="243.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.9" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (98 samples, 0.09%)</title><rect x="123.9" y="227.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="126.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (78 samples, 0.08%)</title><rect x="125.0" y="339.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (78 samples, 0.08%)</title><rect x="125.0" y="323.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="128.0" y="334.0"></text>
</g>
<g>
<title>int[] (78 samples, 0.08%)</title><rect x="125.0" y="307.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="128.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (188 samples, 0.18%)</title><rect x="125.9" y="355.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.9" y="366.0"></text>
</g>
<g>
<title>byte[] (105 samples, 0.10%)</title><rect x="125.9" y="339.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="128.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (83 samples, 0.08%)</title><rect x="127.1" y="339.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (83 samples, 0.08%)</title><rect x="127.1" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.1" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (83 samples, 0.08%)</title><rect x="127.1" y="307.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="130.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (545 samples, 0.52%)</title><rect x="128.0" y="371.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.0" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (158 samples, 0.15%)</title><rect x="128.0" y="355.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="131.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (128 samples, 0.12%)</title><rect x="129.8" y="355.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (128 samples, 0.12%)</title><rect x="129.8" y="339.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="132.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (259 samples, 0.25%)</title><rect x="131.3" y="355.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.3" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (259 samples, 0.25%)</title><rect x="131.3" y="339.0" width="2.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="134.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (70 samples, 0.07%)</title><rect x="134.2" y="435.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (70 samples, 0.07%)</title><rect x="134.2" y="419.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (70 samples, 0.07%)</title><rect x="134.2" y="403.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="137.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (2,343 samples, 2.25%)</title><rect x="135.0" y="483.0" width="26.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.0" y="494.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (172 samples, 0.17%)</title><rect x="135.0" y="467.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="138.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (2,110 samples, 2.03%)</title><rect x="137.0" y="467.0" width="23.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.0" y="478.0">j..</text>
</g>
<g>
<title>java.lang.Object (35 samples, 0.03%)</title><rect x="137.0" y="451.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="140.0" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (60 samples, 0.06%)</title><rect x="137.4" y="451.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="140.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (37 samples, 0.04%)</title><rect x="138.1" y="451.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="141.1" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (124 samples, 0.12%)</title><rect x="138.5" y="451.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="141.5" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (124 samples, 0.12%)</title><rect x="138.5" y="435.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.5" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (124 samples, 0.12%)</title><rect x="138.5" y="419.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="141.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (46 samples, 0.04%)</title><rect x="139.9" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="142.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (46 samples, 0.04%)</title><rect x="139.9" y="435.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="142.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (154 samples, 0.15%)</title><rect x="140.4" y="451.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="143.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (110 samples, 0.11%)</title><rect x="142.1" y="451.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="145.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (117 samples, 0.11%)</title><rect x="143.4" y="451.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="146.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (134 samples, 0.13%)</title><rect x="144.7" y="451.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="147.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (613 samples, 0.59%)</title><rect x="146.2" y="451.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (49 samples, 0.05%)</title><rect x="146.2" y="435.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="149.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (29 samples, 0.03%)</title><rect x="146.8" y="435.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="149.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (48 samples, 0.05%)</title><rect x="147.1" y="435.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="150.1" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (33 samples, 0.03%)</title><rect x="147.7" y="435.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="150.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.02%)</title><rect x="148.0" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="151.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.02%)</title><rect x="148.0" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$259/1643973216.get$Lambda (25 samples, 0.02%)</title><rect x="148.0" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$259 (25 samples, 0.02%)</title><rect x="148.0" y="387.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="151.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (49 samples, 0.05%)</title><rect x="148.3" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (49 samples, 0.05%)</title><rect x="148.3" y="419.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="151.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (59 samples, 0.06%)</title><rect x="148.9" y="435.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="151.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (62 samples, 0.06%)</title><rect x="149.6" y="435.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="152.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (259 samples, 0.25%)</title><rect x="150.3" y="435.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (55 samples, 0.05%)</title><rect x="150.3" y="419.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="153.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (69 samples, 0.07%)</title><rect x="150.9" y="419.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="153.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (40 samples, 0.04%)</title><rect x="151.7" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.7" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (40 samples, 0.04%)</title><rect x="151.7" y="403.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="154.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (95 samples, 0.09%)</title><rect x="152.1" y="419.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (33 samples, 0.03%)</title><rect x="152.1" y="403.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="155.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (35 samples, 0.03%)</title><rect x="152.5" y="403.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="155.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (27 samples, 0.03%)</title><rect x="152.9" y="403.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="155.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (395 samples, 0.38%)</title><rect x="153.2" y="451.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (37 samples, 0.04%)</title><rect x="153.2" y="435.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="156.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (32 samples, 0.03%)</title><rect x="153.6" y="435.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="156.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (40 samples, 0.04%)</title><rect x="154.0" y="435.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="157.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (46 samples, 0.04%)</title><rect x="154.4" y="435.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (46 samples, 0.04%)</title><rect x="154.4" y="419.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="157.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (240 samples, 0.23%)</title><rect x="155.0" y="435.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="158.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (60 samples, 0.06%)</title><rect x="155.0" y="419.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="158.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (64 samples, 0.06%)</title><rect x="155.6" y="419.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="158.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (30 samples, 0.03%)</title><rect x="156.4" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.4" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (30 samples, 0.03%)</title><rect x="156.4" y="403.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="159.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (86 samples, 0.08%)</title><rect x="156.7" y="419.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (26 samples, 0.03%)</title><rect x="156.7" y="403.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="159.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (30 samples, 0.03%)</title><rect x="157.0" y="403.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="160.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (30 samples, 0.03%)</title><rect x="157.3" y="403.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="160.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (109 samples, 0.10%)</title><rect x="157.7" y="451.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (109 samples, 0.10%)</title><rect x="157.7" y="435.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (56 samples, 0.05%)</title><rect x="157.7" y="419.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="160.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (53 samples, 0.05%)</title><rect x="158.3" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (53 samples, 0.05%)</title><rect x="158.3" y="403.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="161.3" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (53 samples, 0.05%)</title><rect x="158.3" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="161.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (53 samples, 0.05%)</title><rect x="158.3" y="371.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.3" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (53 samples, 0.05%)</title><rect x="158.3" y="355.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="161.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (176 samples, 0.17%)</title><rect x="158.9" y="451.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1995250556.linkToTargetMethod (49 samples, 0.05%)</title><rect x="158.9" y="435.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.05%)</title><rect x="158.9" y="419.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$220/1680543885.get$Lambda (49 samples, 0.05%)</title><rect x="158.9" y="403.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="161.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$220 (49 samples, 0.05%)</title><rect x="158.9" y="387.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="161.9" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (127 samples, 0.12%)</title><rect x="159.5" y="435.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$220/1680543885.run (127 samples, 0.12%)</title><rect x="159.5" y="419.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (127 samples, 0.12%)</title><rect x="159.5" y="403.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.5" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (35 samples, 0.03%)</title><rect x="159.5" y="387.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="162.5" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (92 samples, 0.09%)</title><rect x="159.9" y="387.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.9" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (45 samples, 0.04%)</title><rect x="159.9" y="371.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="162.9" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (47 samples, 0.05%)</title><rect x="160.4" y="371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.4" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (47 samples, 0.05%)</title><rect x="160.4" y="355.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.4" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (47 samples, 0.05%)</title><rect x="160.4" y="339.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="163.4" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (47 samples, 0.05%)</title><rect x="160.4" y="323.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.4" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (47 samples, 0.05%)</title><rect x="160.4" y="307.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="163.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (59 samples, 0.06%)</title><rect x="160.9" y="467.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.06%)</title><rect x="160.9" y="451.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="163.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.06%)</title><rect x="161.6" y="547.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.06%)</title><rect x="161.6" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="164.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (65 samples, 0.06%)</title><rect x="161.6" y="515.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="164.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (65 samples, 0.06%)</title><rect x="162.3" y="579.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (65 samples, 0.06%)</title><rect x="162.3" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="165.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.06%)</title><rect x="162.3" y="547.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.06%)</title><rect x="162.3" y="531.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (65 samples, 0.06%)</title><rect x="162.3" y="515.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="165.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (182 samples, 0.18%)</title><rect x="163.1" y="579.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (111 samples, 0.11%)</title><rect x="163.1" y="563.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (111 samples, 0.11%)</title><rect x="163.1" y="547.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1024252201.linkToTargetMethod (111 samples, 0.11%)</title><rect x="163.1" y="531.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/231089404.invoke (111 samples, 0.11%)</title><rect x="163.1" y="515.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1167267625.invoke (111 samples, 0.11%)</title><rect x="163.1" y="499.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (111 samples, 0.11%)</title><rect x="163.1" y="483.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="166.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (43 samples, 0.04%)</title><rect x="163.1" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (43 samples, 0.04%)</title><rect x="163.1" y="451.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="166.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (68 samples, 0.07%)</title><rect x="163.5" y="467.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (68 samples, 0.07%)</title><rect x="163.5" y="451.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.5" y="462.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.07%)</title><rect x="163.5" y="435.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="166.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (71 samples, 0.07%)</title><rect x="164.3" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (71 samples, 0.07%)</title><rect x="164.3" y="547.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="167.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (76 samples, 0.07%)</title><rect x="165.1" y="659.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (76 samples, 0.07%)</title><rect x="165.1" y="643.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (76 samples, 0.07%)</title><rect x="165.1" y="627.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.1" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (76 samples, 0.07%)</title><rect x="165.1" y="611.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="168.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (224 samples, 0.22%)</title><rect x="166.0" y="659.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.0" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (139 samples, 0.13%)</title><rect x="166.0" y="643.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="169.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (85 samples, 0.08%)</title><rect x="167.6" y="643.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (85 samples, 0.08%)</title><rect x="167.6" y="627.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.6" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.now (39 samples, 0.04%)</title><rect x="167.6" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.6" y="622.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (39 samples, 0.04%)</title><rect x="167.6" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.6" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (39 samples, 0.04%)</title><rect x="167.6" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.6" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.create (39 samples, 0.04%)</title><rect x="167.6" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="170.6" y="574.0"></text>
</g>
<g>
<title>java.time.Instant (39 samples, 0.04%)</title><rect x="167.6" y="547.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="170.6" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (46 samples, 0.04%)</title><rect x="168.0" y="611.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.0" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (46 samples, 0.04%)</title><rect x="168.0" y="595.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="171.0" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (46 samples, 0.04%)</title><rect x="168.0" y="579.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.0" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (46 samples, 0.04%)</title><rect x="168.0" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="171.0" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (46 samples, 0.04%)</title><rect x="168.0" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="171.0" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (46 samples, 0.04%)</title><rect x="168.0" y="531.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.0" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (46 samples, 0.04%)</title><rect x="168.0" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.0" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (46 samples, 0.04%)</title><rect x="168.0" y="499.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.0" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (46 samples, 0.04%)</title><rect x="168.0" y="483.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="171.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$186/1096981679.get (182 samples, 0.18%)</title><rect x="168.5" y="739.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="171.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$upsert$9 (182 samples, 0.18%)</title><rect x="168.5" y="723.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="171.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.upsert (182 samples, 0.18%)</title><rect x="168.5" y="707.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.upsert (182 samples, 0.18%)</title><rect x="168.5" y="691.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTable.upsert (174 samples, 0.17%)</title><rect x="168.6" y="675.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="171.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/Item.of (174 samples, 0.17%)</title><rect x="168.6" y="659.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.6" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (111 samples, 0.11%)</title><rect x="168.6" y="643.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="171.6" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (111 samples, 0.11%)</title><rect x="168.6" y="627.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="171.6" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.rubtsov.Item (63 samples, 0.06%)</title><rect x="169.9" y="643.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="172.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4,314 samples, 4.15%)</title><rect x="170.6" y="755.0" width="49.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="173.6" y="766.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4,314 samples, 4.15%)</title><rect x="170.6" y="739.0" width="49.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="173.6" y="750.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4,222 samples, 4.06%)</title><rect x="170.6" y="723.0" width="47.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.6" y="734.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4,222 samples, 4.06%)</title><rect x="170.6" y="707.0" width="47.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.6" y="718.0">java..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4,222 samples, 4.06%)</title><rect x="170.6" y="691.0" width="47.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="173.6" y="702.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (92 samples, 0.09%)</title><rect x="218.5" y="723.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (92 samples, 0.09%)</title><rect x="218.5" y="707.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (92 samples, 0.09%)</title><rect x="218.5" y="691.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (92 samples, 0.09%)</title><rect x="218.5" y="675.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="221.5" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (92 samples, 0.09%)</title><rect x="218.5" y="659.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="221.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$324/1583117545.run (2,494 samples, 2.40%)</title><rect x="219.6" y="755.0" width="28.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="222.6" y="766.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2,494 samples, 2.40%)</title><rect x="219.6" y="739.0" width="28.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="222.6" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2,494 samples, 2.40%)</title><rect x="219.6" y="723.0" width="28.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.6" y="734.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (2,494 samples, 2.40%)</title><rect x="219.6" y="707.0" width="28.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="222.6" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,494 samples, 2.40%)</title><rect x="219.6" y="691.0" width="28.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.6" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,494 samples, 2.40%)</title><rect x="219.6" y="675.0" width="28.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.6" y="686.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,494 samples, 2.40%)</title><rect x="219.6" y="659.0" width="28.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="222.6" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,494 samples, 2.40%)</title><rect x="219.6" y="643.0" width="28.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="222.6" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,494 samples, 2.40%)</title><rect x="219.6" y="627.0" width="28.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.6" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,494 samples, 2.40%)</title><rect x="219.6" y="611.0" width="28.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="222.6" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2,494 samples, 2.40%)</title><rect x="219.6" y="595.0" width="28.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="222.6" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (2,245 samples, 2.16%)</title><rect x="219.6" y="579.0" width="25.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.6" y="590.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (116 samples, 0.11%)</title><rect x="219.6" y="563.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="222.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (116 samples, 0.11%)</title><rect x="219.6" y="547.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$329/64629268.get$Lambda (59 samples, 0.06%)</title><rect x="219.6" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="222.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$329 (59 samples, 0.06%)</title><rect x="219.6" y="515.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="222.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$338/990201068.get$Lambda (34 samples, 0.03%)</title><rect x="220.2" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$338 (34 samples, 0.03%)</title><rect x="220.2" y="515.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="223.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$341/84272617.get$Lambda (23 samples, 0.02%)</title><rect x="220.6" y="531.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="223.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$341 (23 samples, 0.02%)</title><rect x="220.6" y="515.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="223.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (2,129 samples, 2.05%)</title><rect x="220.9" y="563.0" width="24.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.9" y="574.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (76 samples, 0.07%)</title><rect x="220.9" y="547.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="223.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,053 samples, 1.97%)</title><rect x="221.7" y="547.0" width="23.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.7" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2,053 samples, 1.97%)</title><rect x="221.7" y="531.0" width="23.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.7" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,053 samples, 1.97%)</title><rect x="221.7" y="515.0" width="23.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="224.7" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (343 samples, 0.33%)</title><rect x="221.7" y="499.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.7" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (125 samples, 0.12%)</title><rect x="221.7" y="483.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="224.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$334/1364128704.apply (218 samples, 0.21%)</title><rect x="223.1" y="483.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (218 samples, 0.21%)</title><rect x="223.1" y="467.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="226.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (218 samples, 0.21%)</title><rect x="223.1" y="451.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.1" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (51 samples, 0.05%)</title><rect x="223.1" y="435.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="226.1" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (51 samples, 0.05%)</title><rect x="223.1" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.1" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (51 samples, 0.05%)</title><rect x="223.1" y="403.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="226.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (167 samples, 0.16%)</title><rect x="223.7" y="435.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="226.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.03%)</title><rect x="223.7" y="419.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="226.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.03%)</title><rect x="223.7" y="403.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="226.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$342/1623830039.get$Lambda (35 samples, 0.03%)</title><rect x="223.7" y="387.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="226.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$342 (35 samples, 0.03%)</title><rect x="223.7" y="371.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="226.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (132 samples, 0.13%)</title><rect x="224.1" y="419.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (132 samples, 0.13%)</title><rect x="224.1" y="403.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.1" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (67 samples, 0.06%)</title><rect x="224.1" y="387.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="227.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.06%)</title><rect x="224.9" y="387.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.06%)</title><rect x="224.9" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (65 samples, 0.06%)</title><rect x="224.9" y="355.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="227.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,710 samples, 1.64%)</title><rect x="225.6" y="499.0" width="19.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="228.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,710 samples, 1.64%)</title><rect x="225.6" y="483.0" width="19.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/2063345593.apply (1,710 samples, 1.64%)</title><rect x="225.6" y="467.0" width="19.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="228.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1,710 samples, 1.64%)</title><rect x="225.6" y="451.0" width="19.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,710 samples, 1.64%)</title><rect x="225.6" y="435.0" width="19.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="228.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/1124124731.apply (1,710 samples, 1.64%)</title><rect x="225.6" y="419.0" width="19.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1,710 samples, 1.64%)</title><rect x="225.6" y="403.0" width="19.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="228.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (141 samples, 0.14%)</title><rect x="225.9" y="387.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="228.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (141 samples, 0.14%)</title><rect x="225.9" y="371.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="228.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (81 samples, 0.08%)</title><rect x="225.9" y="355.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="228.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.06%)</title><rect x="226.8" y="355.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.06%)</title><rect x="226.8" y="339.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="229.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (60 samples, 0.06%)</title><rect x="226.8" y="323.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="229.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (175 samples, 0.17%)</title><rect x="227.5" y="387.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.03%)</title><rect x="227.5" y="371.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.03%)</title><rect x="227.5" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$335/730000972.get$Lambda (28 samples, 0.03%)</title><rect x="227.5" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$335 (28 samples, 0.03%)</title><rect x="227.5" y="323.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="230.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (147 samples, 0.14%)</title><rect x="227.8" y="371.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (147 samples, 0.14%)</title><rect x="227.8" y="355.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (88 samples, 0.08%)</title><rect x="227.8" y="339.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="230.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.06%)</title><rect x="228.8" y="339.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.06%)</title><rect x="228.8" y="323.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.06%)</title><rect x="228.8" y="307.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="231.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1,372 samples, 1.32%)</title><rect x="229.5" y="387.0" width="15.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="232.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (455 samples, 0.44%)</title><rect x="229.5" y="371.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="232.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (455 samples, 0.44%)</title><rect x="229.5" y="355.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="232.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (455 samples, 0.44%)</title><rect x="229.5" y="339.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$330/222913769.accept (185 samples, 0.18%)</title><rect x="229.5" y="323.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="232.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (185 samples, 0.18%)</title><rect x="229.5" y="307.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="232.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (185 samples, 0.18%)</title><rect x="229.5" y="291.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="232.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.05%)</title><rect x="229.5" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="232.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.05%)</title><rect x="229.5" y="259.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$332/606844693.get$Lambda (51 samples, 0.05%)</title><rect x="229.5" y="243.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="232.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$332 (51 samples, 0.05%)</title><rect x="229.5" y="227.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="232.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (134 samples, 0.13%)</title><rect x="230.0" y="275.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (134 samples, 0.13%)</title><rect x="230.0" y="259.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="233.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (76 samples, 0.07%)</title><rect x="230.0" y="243.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="233.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.06%)</title><rect x="230.9" y="243.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="233.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.06%)</title><rect x="230.9" y="227.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (58 samples, 0.06%)</title><rect x="230.9" y="211.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="233.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$333/2069183722.accept (270 samples, 0.26%)</title><rect x="231.6" y="323.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="234.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (270 samples, 0.26%)</title><rect x="231.6" y="307.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (270 samples, 0.26%)</title><rect x="231.6" y="291.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (270 samples, 0.26%)</title><rect x="231.6" y="275.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="234.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (270 samples, 0.26%)</title><rect x="231.6" y="259.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="234.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (270 samples, 0.26%)</title><rect x="231.6" y="243.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (270 samples, 0.26%)</title><rect x="231.6" y="227.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (270 samples, 0.26%)</title><rect x="231.6" y="211.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="234.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (270 samples, 0.26%)</title><rect x="231.6" y="195.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="234.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (270 samples, 0.26%)</title><rect x="231.6" y="179.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="234.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (104 samples, 0.10%)</title><rect x="231.6" y="163.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (104 samples, 0.10%)</title><rect x="231.6" y="147.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="234.6" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (57 samples, 0.05%)</title><rect x="231.6" y="131.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="234.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (47 samples, 0.05%)</title><rect x="232.2" y="131.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="235.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (47 samples, 0.05%)</title><rect x="232.2" y="115.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="235.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (47 samples, 0.05%)</title><rect x="232.2" y="99.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (47 samples, 0.05%)</title><rect x="232.2" y="83.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (47 samples, 0.05%)</title><rect x="232.2" y="67.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.2" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (47 samples, 0.05%)</title><rect x="232.2" y="51.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="235.2" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (166 samples, 0.16%)</title><rect x="232.7" y="163.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (166 samples, 0.16%)</title><rect x="232.7" y="147.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.7" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (53 samples, 0.05%)</title><rect x="232.7" y="131.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="235.7" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (53 samples, 0.05%)</title><rect x="232.7" y="115.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="235.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (113 samples, 0.11%)</title><rect x="233.3" y="131.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="236.3" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (48 samples, 0.05%)</title><rect x="233.3" y="115.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="236.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (65 samples, 0.06%)</title><rect x="233.9" y="115.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (65 samples, 0.06%)</title><rect x="233.9" y="99.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="236.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (65 samples, 0.06%)</title><rect x="233.9" y="83.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="236.9" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (65 samples, 0.06%)</title><rect x="233.9" y="67.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.9" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (65 samples, 0.06%)</title><rect x="233.9" y="51.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.9" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (65 samples, 0.06%)</title><rect x="233.9" y="35.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="236.9" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (917 samples, 0.88%)</title><rect x="234.6" y="371.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (77 samples, 0.07%)</title><rect x="234.6" y="355.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="237.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (72 samples, 0.07%)</title><rect x="235.5" y="355.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="238.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (72 samples, 0.07%)</title><rect x="235.5" y="339.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="238.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (72 samples, 0.07%)</title><rect x="235.5" y="323.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="238.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (768 samples, 0.74%)</title><rect x="236.3" y="355.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (51 samples, 0.05%)</title><rect x="236.3" y="339.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="239.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (418 samples, 0.40%)</title><rect x="236.9" y="339.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (59 samples, 0.06%)</title><rect x="236.9" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="239.9" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (59 samples, 0.06%)</title><rect x="236.9" y="307.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="239.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (72 samples, 0.07%)</title><rect x="237.6" y="323.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="240.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (287 samples, 0.28%)</title><rect x="238.4" y="323.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (32 samples, 0.03%)</title><rect x="238.4" y="307.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="241.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (32 samples, 0.03%)</title><rect x="238.7" y="307.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="241.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (64 samples, 0.06%)</title><rect x="239.1" y="307.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="242.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (58 samples, 0.06%)</title><rect x="239.8" y="307.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.8" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (58 samples, 0.06%)</title><rect x="239.8" y="291.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="242.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (101 samples, 0.10%)</title><rect x="240.5" y="307.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (36 samples, 0.03%)</title><rect x="240.5" y="291.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="243.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (33 samples, 0.03%)</title><rect x="240.9" y="291.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="243.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (32 samples, 0.03%)</title><rect x="241.3" y="291.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="244.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (299 samples, 0.29%)</title><rect x="241.6" y="339.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="244.6" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (47 samples, 0.05%)</title><rect x="241.6" y="323.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="244.6" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (141 samples, 0.14%)</title><rect x="242.2" y="323.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (104 samples, 0.10%)</title><rect x="242.2" y="307.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="245.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (37 samples, 0.04%)</title><rect x="243.3" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="246.3" y="318.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.04%)</title><rect x="243.3" y="291.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="246.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (111 samples, 0.11%)</title><rect x="243.8" y="323.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="246.8" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (111 samples, 0.11%)</title><rect x="243.8" y="307.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.8" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (111 samples, 0.11%)</title><rect x="243.8" y="291.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.8" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (111 samples, 0.11%)</title><rect x="243.8" y="275.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.8" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (111 samples, 0.11%)</title><rect x="243.8" y="259.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="246.8" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (111 samples, 0.11%)</title><rect x="243.8" y="243.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="246.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (249 samples, 0.24%)</title><rect x="245.0" y="579.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="248.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (249 samples, 0.24%)</title><rect x="245.0" y="563.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="248.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (249 samples, 0.24%)</title><rect x="245.0" y="547.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="248.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (249 samples, 0.24%)</title><rect x="245.0" y="531.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="248.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (249 samples, 0.24%)</title><rect x="245.0" y="515.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.0" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (249 samples, 0.24%)</title><rect x="245.0" y="499.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="248.0" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (112 samples, 0.11%)</title><rect x="245.0" y="483.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="248.0" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (112 samples, 0.11%)</title><rect x="245.0" y="467.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="248.0" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (137 samples, 0.13%)</title><rect x="246.3" y="483.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.3" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (137 samples, 0.13%)</title><rect x="246.3" y="467.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="249.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8,137 samples, 7.83%)</title><rect x="247.9" y="755.0" width="92.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="250.9" y="766.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8,137 samples, 7.83%)</title><rect x="247.9" y="739.0" width="92.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.9" y="750.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7,008 samples, 6.74%)</title><rect x="247.9" y="723.0" width="79.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.9" y="734.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$259/1643973216.run (7,008 samples, 6.74%)</title><rect x="247.9" y="707.0" width="79.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="250.9" y="718.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7,008 samples, 6.74%)</title><rect x="247.9" y="691.0" width="79.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.9" y="702.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (165 samples, 0.16%)</title><rect x="247.9" y="675.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (165 samples, 0.16%)</title><rect x="247.9" y="659.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (165 samples, 0.16%)</title><rect x="247.9" y="643.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (165 samples, 0.16%)</title><rect x="247.9" y="627.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/532087022.linkToTargetMethod (81 samples, 0.08%)</title><rect x="247.9" y="611.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="250.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1403704789.invoke (81 samples, 0.08%)</title><rect x="247.9" y="595.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="250.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (81 samples, 0.08%)</title><rect x="247.9" y="579.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (81 samples, 0.08%)</title><rect x="247.9" y="563.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (81 samples, 0.08%)</title><rect x="247.9" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.9" y="558.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.08%)</title><rect x="247.9" y="531.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="250.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (84 samples, 0.08%)</title><rect x="248.8" y="611.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (84 samples, 0.08%)</title><rect x="248.8" y="595.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="251.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (84 samples, 0.08%)</title><rect x="248.8" y="579.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$328/562141945.get$Lambda (84 samples, 0.08%)</title><rect x="248.8" y="563.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$328 (84 samples, 0.08%)</title><rect x="248.8" y="547.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="251.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (6,843 samples, 6.58%)</title><rect x="249.7" y="675.0" width="77.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.7" y="686.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (6,843 samples, 6.58%)</title><rect x="249.7" y="659.0" width="77.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="252.7" y="670.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (6,843 samples, 6.58%)</title><rect x="249.7" y="643.0" width="77.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="252.7" y="654.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (6,843 samples, 6.58%)</title><rect x="249.7" y="627.0" width="77.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.7" y="638.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3,179 samples, 3.06%)</title><rect x="249.7" y="611.0" width="36.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="252.7" y="622.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,179 samples, 3.06%)</title><rect x="249.7" y="595.0" width="36.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="252.7" y="606.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,179 samples, 3.06%)</title><rect x="249.7" y="579.0" width="36.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.7" y="590.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3,179 samples, 3.06%)</title><rect x="249.7" y="563.0" width="36.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.7" y="574.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,179 samples, 3.06%)</title><rect x="249.7" y="547.0" width="36.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.7" y="558.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3,179 samples, 3.06%)</title><rect x="249.7" y="531.0" width="36.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.7" y="542.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,179 samples, 3.06%)</title><rect x="249.7" y="515.0" width="36.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="252.7" y="526.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3,090 samples, 2.97%)</title><rect x="249.7" y="499.0" width="35.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="252.7" y="510.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,090 samples, 2.97%)</title><rect x="249.7" y="483.0" width="35.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="252.7" y="494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3,044 samples, 2.93%)</title><rect x="249.7" y="467.0" width="34.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.7" y="478.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (70 samples, 0.07%)</title><rect x="249.7" y="451.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="252.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$335/730000972.apply (65 samples, 0.06%)</title><rect x="250.5" y="451.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (65 samples, 0.06%)</title><rect x="250.5" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="253.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (65 samples, 0.06%)</title><rect x="250.5" y="419.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="253.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (65 samples, 0.06%)</title><rect x="250.5" y="403.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (65 samples, 0.06%)</title><rect x="250.5" y="387.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="253.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$175/71332808.apply (2,795 samples, 2.69%)</title><rect x="251.3" y="451.0" width="31.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="254.3" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2,795 samples, 2.69%)</title><rect x="251.3" y="435.0" width="31.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="254.3" y="446.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.04%)</title><rect x="251.3" y="419.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.04%)</title><rect x="251.3" y="403.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$381/1418581618.get$Lambda (44 samples, 0.04%)</title><rect x="251.3" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="254.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$381 (44 samples, 0.04%)</title><rect x="251.3" y="371.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="254.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (138 samples, 0.13%)</title><rect x="251.8" y="419.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (138 samples, 0.13%)</title><rect x="251.8" y="403.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="254.8" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (76 samples, 0.07%)</title><rect x="251.8" y="387.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="254.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (62 samples, 0.06%)</title><rect x="252.6" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (62 samples, 0.06%)</title><rect x="252.6" y="371.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (62 samples, 0.06%)</title><rect x="252.6" y="355.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="255.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2,613 samples, 2.51%)</title><rect x="253.3" y="419.0" width="29.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.3" y="430.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.03%)</title><rect x="253.3" y="403.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="256.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.03%)</title><rect x="253.3" y="387.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="256.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$380/513972360.get$Lambda (31 samples, 0.03%)</title><rect x="253.3" y="371.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="256.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$380 (31 samples, 0.03%)</title><rect x="253.3" y="355.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="256.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (163 samples, 0.16%)</title><rect x="253.7" y="403.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="256.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (163 samples, 0.16%)</title><rect x="253.7" y="387.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (96 samples, 0.09%)</title><rect x="253.7" y="371.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="256.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (67 samples, 0.06%)</title><rect x="254.8" y="371.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="257.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (67 samples, 0.06%)</title><rect x="254.8" y="355.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="257.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (67 samples, 0.06%)</title><rect x="254.8" y="339.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="257.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2,419 samples, 2.33%)</title><rect x="255.5" y="403.0" width="27.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.5" y="414.0">j..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$162/2090647856.apply (167 samples, 0.16%)</title><rect x="255.5" y="387.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="258.5" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (167 samples, 0.16%)</title><rect x="255.5" y="371.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="258.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (167 samples, 0.16%)</title><rect x="255.5" y="355.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (58 samples, 0.06%)</title><rect x="255.5" y="339.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="258.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (109 samples, 0.10%)</title><rect x="256.2" y="339.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="259.2" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (48 samples, 0.05%)</title><rect x="256.2" y="323.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="259.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (61 samples, 0.06%)</title><rect x="256.7" y="323.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="259.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2,252 samples, 2.17%)</title><rect x="257.4" y="387.0" width="25.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.4" y="398.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (45 samples, 0.04%)</title><rect x="257.4" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="260.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 0.04%)</title><rect x="257.4" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="260.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$376/975494671.get$Lambda (24 samples, 0.02%)</title><rect x="257.7" y="339.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="260.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$376 (24 samples, 0.02%)</title><rect x="257.7" y="323.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="260.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/550071966.linkToTargetMethod (67 samples, 0.06%)</title><rect x="257.9" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1132500708.invokeStatic (67 samples, 0.06%)</title><rect x="257.9" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="260.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$361/1529121028.get$Lambda (67 samples, 0.06%)</title><rect x="257.9" y="339.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="260.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$361 (67 samples, 0.06%)</title><rect x="257.9" y="323.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="260.9" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (452 samples, 0.43%)</title><rect x="258.7" y="371.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="261.7" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (190 samples, 0.18%)</title><rect x="258.7" y="355.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.7" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (68 samples, 0.07%)</title><rect x="258.7" y="339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.7" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (68 samples, 0.07%)</title><rect x="258.7" y="323.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="261.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (122 samples, 0.12%)</title><rect x="259.5" y="339.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.5" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (122 samples, 0.12%)</title><rect x="259.5" y="323.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="262.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (145 samples, 0.14%)</title><rect x="260.8" y="355.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (145 samples, 0.14%)</title><rect x="260.8" y="339.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="263.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (145 samples, 0.14%)</title><rect x="260.8" y="323.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="263.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (51 samples, 0.05%)</title><rect x="260.8" y="307.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (51 samples, 0.05%)</title><rect x="260.8" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="263.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (51 samples, 0.05%)</title><rect x="260.8" y="275.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.8" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (51 samples, 0.05%)</title><rect x="260.8" y="259.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="263.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$357/1494509719.get (40 samples, 0.04%)</title><rect x="261.4" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="264.4" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (40 samples, 0.04%)</title><rect x="261.4" y="291.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="264.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (54 samples, 0.05%)</title><rect x="261.9" y="307.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="264.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (54 samples, 0.05%)</title><rect x="261.9" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.9" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (54 samples, 0.05%)</title><rect x="261.9" y="275.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.9" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (54 samples, 0.05%)</title><rect x="261.9" y="259.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="264.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (117 samples, 0.11%)</title><rect x="262.5" y="355.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="265.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (117 samples, 0.11%)</title><rect x="262.5" y="339.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="265.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (303 samples, 0.29%)</title><rect x="263.8" y="371.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="266.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (158 samples, 0.15%)</title><rect x="263.8" y="355.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="266.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (84 samples, 0.08%)</title><rect x="263.8" y="339.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="266.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (74 samples, 0.07%)</title><rect x="264.8" y="339.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (74 samples, 0.07%)</title><rect x="264.8" y="323.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="267.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (74 samples, 0.07%)</title><rect x="264.8" y="307.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="267.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (145 samples, 0.14%)</title><rect x="265.6" y="355.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="268.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (145 samples, 0.14%)</title><rect x="265.6" y="339.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="268.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (89 samples, 0.09%)</title><rect x="265.6" y="323.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="268.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.05%)</title><rect x="266.6" y="323.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.05%)</title><rect x="266.6" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="269.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.05%)</title><rect x="266.6" y="291.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="269.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (47 samples, 0.05%)</title><rect x="267.3" y="371.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="270.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (56 samples, 0.05%)</title><rect x="267.8" y="371.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="270.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (75 samples, 0.07%)</title><rect x="268.4" y="371.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="271.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (30 samples, 0.03%)</title><rect x="269.3" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="272.3" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (30 samples, 0.03%)</title><rect x="269.3" y="355.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="272.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,177 samples, 1.13%)</title><rect x="269.6" y="371.0" width="13.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="272.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$361/1529121028.run (1,177 samples, 1.13%)</title><rect x="269.6" y="355.0" width="13.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1,177 samples, 1.13%)</title><rect x="269.6" y="339.0" width="13.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (140 samples, 0.13%)</title><rect x="269.6" y="323.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (140 samples, 0.13%)</title><rect x="269.6" y="307.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="272.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$362/413808019.get$Lambda (29 samples, 0.03%)</title><rect x="269.6" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$362 (29 samples, 0.03%)</title><rect x="269.6" y="275.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="272.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$363/625315377.get$Lambda (40 samples, 0.04%)</title><rect x="269.9" y="291.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$363 (40 samples, 0.04%)</title><rect x="269.9" y="275.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="272.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$369/1721572810.get$Lambda (71 samples, 0.07%)</title><rect x="270.4" y="291.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="273.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$369 (71 samples, 0.07%)</title><rect x="270.4" y="275.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="273.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (143 samples, 0.14%)</title><rect x="271.2" y="323.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (143 samples, 0.14%)</title><rect x="271.2" y="307.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.2" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (84 samples, 0.08%)</title><rect x="271.2" y="291.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="274.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.06%)</title><rect x="272.2" y="291.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.06%)</title><rect x="272.2" y="275.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.06%)</title><rect x="272.2" y="259.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="275.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (77 samples, 0.07%)</title><rect x="272.8" y="323.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="275.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (55 samples, 0.05%)</title><rect x="273.7" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (55 samples, 0.05%)</title><rect x="273.7" y="307.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="276.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (199 samples, 0.19%)</title><rect x="274.3" y="323.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="277.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (199 samples, 0.19%)</title><rect x="274.3" y="307.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.04%)</title><rect x="274.3" y="291.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.04%)</title><rect x="274.3" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="277.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$370/742003348.get$Lambda (44 samples, 0.04%)</title><rect x="274.3" y="259.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="277.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$370 (44 samples, 0.04%)</title><rect x="274.3" y="243.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="277.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (155 samples, 0.15%)</title><rect x="274.8" y="291.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="277.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (155 samples, 0.15%)</title><rect x="274.8" y="275.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (155 samples, 0.15%)</title><rect x="274.8" y="259.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (84 samples, 0.08%)</title><rect x="274.8" y="243.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="277.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (71 samples, 0.07%)</title><rect x="275.8" y="243.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (71 samples, 0.07%)</title><rect x="275.8" y="227.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (71 samples, 0.07%)</title><rect x="275.8" y="211.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="278.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (183 samples, 0.18%)</title><rect x="276.6" y="323.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (183 samples, 0.18%)</title><rect x="276.6" y="307.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="279.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2141817446.invoke (183 samples, 0.18%)</title><rect x="276.6" y="291.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="279.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (183 samples, 0.18%)</title><rect x="276.6" y="275.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (48 samples, 0.05%)</title><rect x="276.6" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="279.6" y="270.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.05%)</title><rect x="276.6" y="243.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="279.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (135 samples, 0.13%)</title><rect x="277.1" y="259.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (135 samples, 0.13%)</title><rect x="277.1" y="243.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="280.1" y="254.0"></text>
</g>
<g>
<title>byte[] (135 samples, 0.13%)</title><rect x="277.1" y="227.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="280.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (380 samples, 0.37%)</title><rect x="278.7" y="323.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (132 samples, 0.13%)</title><rect x="278.7" y="307.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="281.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (248 samples, 0.24%)</title><rect x="280.2" y="307.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (248 samples, 0.24%)</title><rect x="280.2" y="291.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="283.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2141817446.invoke (248 samples, 0.24%)</title><rect x="280.2" y="275.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (248 samples, 0.24%)</title><rect x="280.2" y="259.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (50 samples, 0.05%)</title><rect x="280.2" y="243.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.2" y="254.0"></text>
</g>
<g>
<title>java.lang.String (50 samples, 0.05%)</title><rect x="280.2" y="227.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="283.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (198 samples, 0.19%)</title><rect x="280.7" y="243.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="283.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (198 samples, 0.19%)</title><rect x="280.7" y="227.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.7" y="238.0"></text>
</g>
<g>
<title>byte[] (196 samples, 0.19%)</title><rect x="280.7" y="211.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="283.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$307/724253840.apply (114 samples, 0.11%)</title><rect x="283.0" y="451.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (114 samples, 0.11%)</title><rect x="283.0" y="435.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="286.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (51 samples, 0.05%)</title><rect x="283.0" y="419.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.0" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (51 samples, 0.05%)</title><rect x="283.0" y="403.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.0" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (51 samples, 0.05%)</title><rect x="283.0" y="387.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.0" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (51 samples, 0.05%)</title><rect x="283.0" y="371.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="286.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (63 samples, 0.06%)</title><rect x="283.6" y="419.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (63 samples, 0.06%)</title><rect x="283.6" y="403.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="286.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (46 samples, 0.04%)</title><rect x="284.3" y="467.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (46 samples, 0.04%)</title><rect x="284.3" y="451.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="287.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$310/278934779.apply (46 samples, 0.04%)</title><rect x="284.3" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (46 samples, 0.04%)</title><rect x="284.3" y="419.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="287.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (46 samples, 0.04%)</title><rect x="284.3" y="403.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.04%)</title><rect x="284.3" y="387.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="287.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$342/1623830039.apply (89 samples, 0.09%)</title><rect x="284.8" y="499.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="287.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (89 samples, 0.09%)</title><rect x="284.8" y="483.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (89 samples, 0.09%)</title><rect x="284.8" y="467.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="287.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (3,664 samples, 3.52%)</title><rect x="285.8" y="611.0" width="41.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.8" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (239 samples, 0.23%)</title><rect x="285.8" y="595.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (239 samples, 0.23%)</title><rect x="285.8" y="579.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="288.8" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (239 samples, 0.23%)</title><rect x="285.8" y="563.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="288.8" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (239 samples, 0.23%)</title><rect x="285.8" y="547.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="288.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (239 samples, 0.23%)</title><rect x="285.8" y="531.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.8" y="542.0"></text>
</g>
<g>
<title>byte[] (238 samples, 0.23%)</title><rect x="285.8" y="515.0" width="2.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="288.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (168 samples, 0.16%)</title><rect x="288.5" y="595.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="291.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (168 samples, 0.16%)</title><rect x="288.5" y="579.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.5" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (168 samples, 0.16%)</title><rect x="288.5" y="563.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.5" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (168 samples, 0.16%)</title><rect x="288.5" y="547.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="291.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (168 samples, 0.16%)</title><rect x="288.5" y="531.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.5" y="542.0"></text>
</g>
<g>
<title>byte[] (168 samples, 0.16%)</title><rect x="288.5" y="515.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="291.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (284 samples, 0.27%)</title><rect x="290.4" y="595.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="293.4" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (41 samples, 0.04%)</title><rect x="290.4" y="579.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="293.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (46 samples, 0.04%)</title><rect x="290.9" y="579.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (46 samples, 0.04%)</title><rect x="290.9" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="293.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (46 samples, 0.04%)</title><rect x="290.9" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="293.9" y="558.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.04%)</title><rect x="290.9" y="531.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="293.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (63 samples, 0.06%)</title><rect x="291.4" y="579.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="294.4" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (63 samples, 0.06%)</title><rect x="291.4" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="294.4" y="574.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.06%)</title><rect x="291.4" y="547.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="294.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (134 samples, 0.13%)</title><rect x="292.1" y="579.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (134 samples, 0.13%)</title><rect x="292.1" y="563.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.1" y="574.0"></text>
</g>
<g>
<title>java.lang.String (50 samples, 0.05%)</title><rect x="292.1" y="547.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="295.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (84 samples, 0.08%)</title><rect x="292.7" y="547.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="295.7" y="558.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.08%)</title><rect x="292.7" y="531.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="295.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (990 samples, 0.95%)</title><rect x="293.6" y="595.0" width="11.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="296.6" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (990 samples, 0.95%)</title><rect x="293.6" y="579.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="296.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (990 samples, 0.95%)</title><rect x="293.6" y="563.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.6" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (32 samples, 0.03%)</title><rect x="293.6" y="547.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="296.6" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (36 samples, 0.03%)</title><rect x="294.0" y="547.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="297.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (91 samples, 0.09%)</title><rect x="294.4" y="547.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="297.4" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (44 samples, 0.04%)</title><rect x="295.4" y="547.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="298.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (68 samples, 0.07%)</title><rect x="295.9" y="547.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (68 samples, 0.07%)</title><rect x="295.9" y="531.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.get$Lambda (68 samples, 0.07%)</title><rect x="295.9" y="515.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.9" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$149 (68 samples, 0.07%)</title><rect x="295.9" y="499.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="298.9" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (64 samples, 0.06%)</title><rect x="296.7" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="299.7" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (64 samples, 0.06%)</title><rect x="296.7" y="531.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="299.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (560 samples, 0.54%)</title><rect x="297.4" y="547.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="300.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.accept (560 samples, 0.54%)</title><rect x="297.4" y="531.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (560 samples, 0.54%)</title><rect x="297.4" y="515.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (91 samples, 0.09%)</title><rect x="297.4" y="499.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="300.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (91 samples, 0.09%)</title><rect x="297.4" y="483.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="300.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.get$Lambda (91 samples, 0.09%)</title><rect x="297.4" y="467.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="300.4" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$157 (91 samples, 0.09%)</title><rect x="297.4" y="451.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="300.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (107 samples, 0.10%)</title><rect x="298.5" y="499.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="301.5" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.accept (107 samples, 0.10%)</title><rect x="298.5" y="483.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="301.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (107 samples, 0.10%)</title><rect x="298.5" y="467.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="301.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (107 samples, 0.10%)</title><rect x="298.5" y="451.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (107 samples, 0.10%)</title><rect x="298.5" y="435.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (107 samples, 0.10%)</title><rect x="298.5" y="419.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (107 samples, 0.10%)</title><rect x="298.5" y="403.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (107 samples, 0.10%)</title><rect x="298.5" y="387.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="301.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (107 samples, 0.10%)</title><rect x="298.5" y="371.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="301.5" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (217 samples, 0.21%)</title><rect x="299.7" y="499.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="302.7" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (217 samples, 0.21%)</title><rect x="299.7" y="483.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (102 samples, 0.10%)</title><rect x="299.7" y="467.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="302.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (102 samples, 0.10%)</title><rect x="299.7" y="451.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="302.7" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (102 samples, 0.10%)</title><rect x="299.7" y="435.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="302.7" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (115 samples, 0.11%)</title><rect x="300.8" y="467.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="303.8" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (115 samples, 0.11%)</title><rect x="300.8" y="451.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="303.8" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (145 samples, 0.14%)</title><rect x="302.2" y="499.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="305.2" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (145 samples, 0.14%)</title><rect x="302.2" y="483.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="305.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (95 samples, 0.09%)</title><rect x="303.8" y="547.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (95 samples, 0.09%)</title><rect x="303.8" y="531.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="306.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (1,983 samples, 1.91%)</title><rect x="304.9" y="595.0" width="22.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="307.9" y="606.0">j..</text>
</g>
<g>
<title>java.lang.StringBuilder (82 samples, 0.08%)</title><rect x="304.9" y="579.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="307.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (128 samples, 0.12%)</title><rect x="305.8" y="579.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.8" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (128 samples, 0.12%)</title><rect x="305.8" y="563.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.8" y="574.0"></text>
</g>
<g>
<title>byte[] (128 samples, 0.12%)</title><rect x="305.8" y="547.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="308.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (270 samples, 0.26%)</title><rect x="307.3" y="579.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (270 samples, 0.26%)</title><rect x="307.3" y="563.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="310.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (106 samples, 0.10%)</title><rect x="307.3" y="547.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="310.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (164 samples, 0.16%)</title><rect x="308.5" y="547.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.5" y="558.0"></text>
</g>
<g>
<title>byte[] (164 samples, 0.16%)</title><rect x="308.5" y="531.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="311.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1,503 samples, 1.45%)</title><rect x="310.3" y="579.0" width="17.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (446 samples, 0.43%)</title><rect x="310.3" y="563.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="313.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (446 samples, 0.43%)</title><rect x="310.3" y="547.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.3" y="558.0"></text>
</g>
<g>
<title>java.lang.String (202 samples, 0.19%)</title><rect x="310.3" y="531.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="313.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (244 samples, 0.23%)</title><rect x="312.6" y="531.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="315.6" y="542.0"></text>
</g>
<g>
<title>byte[] (244 samples, 0.23%)</title><rect x="312.6" y="515.0" width="2.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="315.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (232 samples, 0.22%)</title><rect x="315.4" y="563.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="318.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (232 samples, 0.22%)</title><rect x="315.4" y="547.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="318.4" y="558.0"></text>
</g>
<g>
<title>byte[] (126 samples, 0.12%)</title><rect x="315.4" y="531.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="318.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (106 samples, 0.10%)</title><rect x="316.8" y="531.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="319.8" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (196 samples, 0.19%)</title><rect x="318.0" y="563.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (196 samples, 0.19%)</title><rect x="318.0" y="547.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="321.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (196 samples, 0.19%)</title><rect x="318.0" y="531.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="321.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (104 samples, 0.10%)</title><rect x="318.0" y="515.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="321.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (92 samples, 0.09%)</title><rect x="319.2" y="515.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="322.2" y="526.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.09%)</title><rect x="319.2" y="499.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="322.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (234 samples, 0.23%)</title><rect x="320.2" y="563.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="323.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (234 samples, 0.23%)</title><rect x="320.2" y="547.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (234 samples, 0.23%)</title><rect x="320.2" y="531.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.2" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (234 samples, 0.23%)</title><rect x="320.2" y="515.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="323.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (234 samples, 0.23%)</title><rect x="320.2" y="499.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (234 samples, 0.23%)</title><rect x="320.2" y="483.0" width="2.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="323.2" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (395 samples, 0.38%)</title><rect x="322.9" y="563.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.9" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (123 samples, 0.12%)</title><rect x="322.9" y="547.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="325.9" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (123 samples, 0.12%)</title><rect x="322.9" y="531.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="325.9" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (171 samples, 0.16%)</title><rect x="324.3" y="547.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="327.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (171 samples, 0.16%)</title><rect x="324.3" y="531.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="327.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$353/470461262.apply (101 samples, 0.10%)</title><rect x="326.2" y="547.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="329.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (101 samples, 0.10%)</title><rect x="326.2" y="531.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.2" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (101 samples, 0.10%)</title><rect x="326.2" y="515.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="329.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,129 samples, 1.09%)</title><rect x="327.4" y="723.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,129 samples, 1.09%)</title><rect x="327.4" y="707.0" width="12.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,129 samples, 1.09%)</title><rect x="327.4" y="691.0" width="12.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$259/1643973216.run (1,129 samples, 1.09%)</title><rect x="327.4" y="675.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,129 samples, 1.09%)</title><rect x="327.4" y="659.0" width="12.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="330.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,127 samples, 1.08%)</title><rect x="327.4" y="643.0" width="12.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (79 samples, 0.08%)</title><rect x="327.4" y="627.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (79 samples, 0.08%)</title><rect x="327.4" y="611.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="330.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/659675147.get$Lambda (38 samples, 0.04%)</title><rect x="327.4" y="595.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$284 (38 samples, 0.04%)</title><rect x="327.4" y="579.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="330.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$286/690219596.get$Lambda (41 samples, 0.04%)</title><rect x="327.8" y="595.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$286 (41 samples, 0.04%)</title><rect x="327.8" y="579.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="330.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (56 samples, 0.05%)</title><rect x="328.3" y="627.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="331.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (85 samples, 0.08%)</title><rect x="328.9" y="627.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (85 samples, 0.08%)</title><rect x="328.9" y="611.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (26 samples, 0.03%)</title><rect x="328.9" y="595.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="331.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (59 samples, 0.06%)</title><rect x="329.2" y="595.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="332.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (59 samples, 0.06%)</title><rect x="329.2" y="579.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="332.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (907 samples, 0.87%)</title><rect x="329.9" y="627.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (907 samples, 0.87%)</title><rect x="329.9" y="611.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$362/413808019.run (763 samples, 0.73%)</title><rect x="329.9" y="595.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="332.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (763 samples, 0.73%)</title><rect x="329.9" y="579.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (763 samples, 0.73%)</title><rect x="329.9" y="563.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.9" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (233 samples, 0.22%)</title><rect x="329.9" y="547.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.9" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (163 samples, 0.16%)</title><rect x="329.9" y="531.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.9" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (55 samples, 0.05%)</title><rect x="329.9" y="515.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.9" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (55 samples, 0.05%)</title><rect x="329.9" y="499.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="332.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (108 samples, 0.10%)</title><rect x="330.5" y="515.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.5" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (105 samples, 0.10%)</title><rect x="330.5" y="499.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="333.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (70 samples, 0.07%)</title><rect x="331.7" y="531.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (70 samples, 0.07%)</title><rect x="331.7" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (70 samples, 0.07%)</title><rect x="331.7" y="499.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$55/1962826816.get (43 samples, 0.04%)</title><rect x="331.7" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="334.7" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (43 samples, 0.04%)</title><rect x="331.7" y="467.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="334.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (27 samples, 0.03%)</title><rect x="332.2" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="335.2" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (27 samples, 0.03%)</title><rect x="332.2" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="335.2" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (27 samples, 0.03%)</title><rect x="332.2" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="335.2" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (27 samples, 0.03%)</title><rect x="332.2" y="435.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="335.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (530 samples, 0.51%)</title><rect x="332.5" y="547.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.5" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (48 samples, 0.05%)</title><rect x="332.5" y="531.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.5" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (48 samples, 0.05%)</title><rect x="332.5" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="335.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (48 samples, 0.05%)</title><rect x="332.5" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.5" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (48 samples, 0.05%)</title><rect x="332.5" y="483.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="335.5" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (48 samples, 0.05%)</title><rect x="332.5" y="467.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="335.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (482 samples, 0.46%)</title><rect x="333.1" y="531.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="336.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (189 samples, 0.18%)</title><rect x="333.1" y="515.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.1" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (47 samples, 0.05%)</title><rect x="333.1" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="336.1" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (47 samples, 0.05%)</title><rect x="333.1" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="336.1" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (47 samples, 0.05%)</title><rect x="333.1" y="467.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.1" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (47 samples, 0.05%)</title><rect x="333.1" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.1" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (47 samples, 0.05%)</title><rect x="333.1" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.1" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (47 samples, 0.05%)</title><rect x="333.1" y="419.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="336.1" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (51 samples, 0.05%)</title><rect x="333.6" y="499.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="336.6" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (51 samples, 0.05%)</title><rect x="333.6" y="483.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.6" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (51 samples, 0.05%)</title><rect x="333.6" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.6" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (51 samples, 0.05%)</title><rect x="333.6" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.6" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (51 samples, 0.05%)</title><rect x="333.6" y="435.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="336.6" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (51 samples, 0.05%)</title><rect x="333.6" y="419.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="336.6" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (36 samples, 0.03%)</title><rect x="334.2" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="337.2" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (36 samples, 0.03%)</title><rect x="334.2" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.2" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (36 samples, 0.03%)</title><rect x="334.2" y="467.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="337.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (50 samples, 0.05%)</title><rect x="334.6" y="499.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="337.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (90 samples, 0.09%)</title><rect x="335.2" y="515.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="338.2" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (43 samples, 0.04%)</title><rect x="335.2" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.2" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (43 samples, 0.04%)</title><rect x="335.2" y="483.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (43 samples, 0.04%)</title><rect x="335.2" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.2" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (43 samples, 0.04%)</title><rect x="335.2" y="451.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="338.2" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (47 samples, 0.05%)</title><rect x="335.7" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.7" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (47 samples, 0.05%)</title><rect x="335.7" y="483.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.7" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (47 samples, 0.05%)</title><rect x="335.7" y="467.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="338.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (203 samples, 0.20%)</title><rect x="336.2" y="515.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (48 samples, 0.05%)</title><rect x="336.2" y="499.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="339.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (155 samples, 0.15%)</title><rect x="336.8" y="499.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="339.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (47 samples, 0.05%)</title><rect x="336.8" y="483.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="339.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (47 samples, 0.05%)</title><rect x="336.8" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="339.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (47 samples, 0.05%)</title><rect x="336.8" y="451.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="339.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (47 samples, 0.05%)</title><rect x="336.8" y="435.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="339.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (108 samples, 0.10%)</title><rect x="337.3" y="483.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (108 samples, 0.10%)</title><rect x="337.3" y="467.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (81 samples, 0.08%)</title><rect x="337.3" y="451.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="340.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (27 samples, 0.03%)</title><rect x="338.2" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (27 samples, 0.03%)</title><rect x="338.2" y="435.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="341.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (144 samples, 0.14%)</title><rect x="338.5" y="595.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (144 samples, 0.14%)</title><rect x="338.5" y="579.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (144 samples, 0.14%)</title><rect x="338.5" y="563.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="341.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (110 samples, 0.11%)</title><rect x="338.5" y="547.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="341.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (110 samples, 0.11%)</title><rect x="338.5" y="531.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="341.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (110 samples, 0.11%)</title><rect x="338.5" y="515.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (110 samples, 0.11%)</title><rect x="338.5" y="499.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$373/624900171.accept (110 samples, 0.11%)</title><rect x="338.5" y="483.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (110 samples, 0.11%)</title><rect x="338.5" y="467.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (110 samples, 0.11%)</title><rect x="338.5" y="451.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (110 samples, 0.11%)</title><rect x="338.5" y="435.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (110 samples, 0.11%)</title><rect x="338.5" y="419.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="341.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$381/1418581618.apply (110 samples, 0.11%)</title><rect x="338.5" y="403.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (110 samples, 0.11%)</title><rect x="338.5" y="387.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (108 samples, 0.10%)</title><rect x="338.5" y="371.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="341.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (34 samples, 0.03%)</title><rect x="339.8" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="342.8" y="558.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.03%)</title><rect x="339.8" y="531.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="342.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$115/356589445.run (40,853 samples, 39.29%)</title><rect x="340.2" y="755.0" width="463.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.2" y="766.0">ru/mail/polis/service/rubtsov/MyService$$Lambda$115/356589445.run</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$17 (40,853 samples, 39.29%)</title><rect x="340.2" y="739.0" width="463.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="343.2" y="750.0">ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$17</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$112/1705978347.act (40,853 samples, 39.29%)</title><rect x="340.2" y="723.0" width="463.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="343.2" y="734.0">ru/mail/polis/service/rubtsov/MyService$$Lambda$112/1705978347.act</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$1 (40,853 samples, 39.29%)</title><rect x="340.2" y="707.0" width="463.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="343.2" y="718.0">ru/mail/polis/service/rubtsov/MyService.lambda$entity$1</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.upsert (40,853 samples, 39.29%)</title><rect x="340.2" y="691.0" width="463.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="343.2" y="702.0">ru/mail/polis/service/rubtsov/MyService.upsert</text>
</g>
<g>
<title>java/lang/String.getBytes (2,624 samples, 2.52%)</title><rect x="340.2" y="675.0" width="29.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="343.2" y="686.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (2,624 samples, 2.52%)</title><rect x="340.2" y="659.0" width="29.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.2" y="670.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2,624 samples, 2.52%)</title><rect x="340.2" y="643.0" width="29.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.2" y="654.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,624 samples, 2.52%)</title><rect x="340.2" y="627.0" width="29.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="343.2" y="638.0">ja..</text>
</g>
<g>
<title>byte[] (2,624 samples, 2.52%)</title><rect x="340.2" y="611.0" width="29.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="343.2" y="622.0">by..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (80 samples, 0.08%)</title><rect x="370.0" y="675.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.08%)</title><rect x="370.0" y="659.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$117/630041519.get$Lambda (27 samples, 0.03%)</title><rect x="370.0" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="373.0" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rubtsov.MyService$$Lambda$117 (27 samples, 0.03%)</title><rect x="370.0" y="627.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="373.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$190/574769761.get$Lambda (40 samples, 0.04%)</title><rect x="370.3" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="373.3" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rubtsov.MyService$$Lambda$190 (40 samples, 0.04%)</title><rect x="370.3" y="627.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="373.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1995250556.linkToTargetMethod (25 samples, 0.02%)</title><rect x="370.9" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.02%)</title><rect x="370.9" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="373.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$187/1315311552.get$Lambda (25 samples, 0.02%)</title><rect x="370.9" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="373.9" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rubtsov.MyService$$Lambda$187 (25 samples, 0.02%)</title><rect x="370.9" y="627.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="373.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/506328402.linkToTargetMethod (34 samples, 0.03%)</title><rect x="371.2" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.03%)</title><rect x="371.2" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="374.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$186/1096981679.get$Lambda (34 samples, 0.03%)</title><rect x="371.2" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.2" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rubtsov.MyService$$Lambda$186 (34 samples, 0.03%)</title><rect x="371.2" y="627.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="374.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4,899 samples, 4.71%)</title><rect x="371.5" y="675.0" width="55.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.5" y="686.0">java/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4,899 samples, 4.71%)</title><rect x="371.5" y="659.0" width="55.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="374.5" y="670.0">java/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,899 samples, 4.71%)</title><rect x="371.5" y="643.0" width="55.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="374.5" y="654.0">java...</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (57 samples, 0.05%)</title><rect x="427.1" y="675.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (57 samples, 0.05%)</title><rect x="427.1" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.1" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (35 samples, 0.03%)</title><rect x="427.1" y="643.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="430.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (69 samples, 0.07%)</title><rect x="427.8" y="675.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (69 samples, 0.07%)</title><rect x="427.8" y="659.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.8" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (24 samples, 0.02%)</title><rect x="427.8" y="643.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="430.8" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (28 samples, 0.03%)</title><rect x="428.1" y="643.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="431.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenComposeAsync (66 samples, 0.06%)</title><rect x="428.6" y="675.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="431.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (66 samples, 0.06%)</title><rect x="428.6" y="659.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="431.6" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (46 samples, 0.04%)</title><rect x="428.6" y="643.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="431.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (63 samples, 0.06%)</title><rect x="429.3" y="675.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (63 samples, 0.06%)</title><rect x="429.3" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="432.3" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (42 samples, 0.04%)</title><rect x="429.3" y="643.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="432.3" y="654.0"></text>
</g>
<g>
<title>one.nio.http.Response (895 samples, 0.86%)</title><rect x="430.0" y="675.0" width="10.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="433.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10,312 samples, 9.92%)</title><rect x="440.2" y="675.0" width="117.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.2" y="686.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7,335 samples, 7.05%)</title><rect x="440.2" y="659.0" width="83.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.2" y="670.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3,797 samples, 3.65%)</title><rect x="440.2" y="643.0" width="43.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="443.2" y="654.0">one/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3,797 samples, 3.65%)</title><rect x="440.2" y="627.0" width="43.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="443.2" y="638.0">one/..</text>
</g>
<g>
<title>byte[] (1,953 samples, 1.88%)</title><rect x="440.2" y="611.0" width="22.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="443.2" y="622.0">b..</text>
</g>
<g>
<title>byte[] (1,844 samples, 1.77%)</title><rect x="462.4" y="611.0" width="20.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="465.4" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3,538 samples, 3.40%)</title><rect x="483.3" y="643.0" width="40.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="486.3" y="654.0">one..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3,538 samples, 3.40%)</title><rect x="483.3" y="627.0" width="40.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="486.3" y="638.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,977 samples, 2.86%)</title><rect x="523.4" y="659.0" width="33.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="526.4" y="670.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (2,977 samples, 2.86%)</title><rect x="523.4" y="643.0" width="33.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="526.4" y="654.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,977 samples, 2.86%)</title><rect x="523.4" y="627.0" width="33.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.4" y="638.0">ja..</text>
</g>
<g>
<title>java.lang.String (759 samples, 0.73%)</title><rect x="523.4" y="611.0" width="8.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="526.4" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,218 samples, 2.13%)</title><rect x="532.0" y="611.0" width="25.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.0" y="622.0">j..</text>
</g>
<g>
<title>byte[] (2,218 samples, 2.13%)</title><rect x="532.0" y="595.0" width="25.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="535.0" y="606.0">b..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7,045 samples, 6.78%)</title><rect x="557.2" y="675.0" width="80.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="560.2" y="686.0">one/nio/h..</text>
</g>
<g>
<title>byte[] (2,703 samples, 2.60%)</title><rect x="557.2" y="659.0" width="30.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="560.2" y="670.0">by..</text>
</g>
<g>
<title>java.lang.String[] (2,916 samples, 2.80%)</title><rect x="587.9" y="659.0" width="33.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="590.9" y="670.0">ja..</text>
</g>
<g>
<title>java.lang.String (1,426 samples, 1.37%)</title><rect x="621.0" y="659.0" width="16.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="624.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.upsert (6,670 samples, 6.41%)</title><rect x="637.2" y="675.0" width="75.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="640.2" y="686.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.upsert (6,670 samples, 6.41%)</title><rect x="637.2" y="659.0" width="75.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="640.2" y="670.0">ru/mail/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (79 samples, 0.08%)</title><rect x="637.2" y="643.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (79 samples, 0.08%)</title><rect x="637.2" y="627.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (79 samples, 0.08%)</title><rect x="637.2" y="611.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="640.2" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (72 samples, 0.07%)</title><rect x="637.2" y="595.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="640.2" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (72 samples, 0.07%)</title><rect x="637.2" y="579.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.2" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (50 samples, 0.05%)</title><rect x="637.2" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.2" y="574.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (50 samples, 0.05%)</title><rect x="637.2" y="547.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="640.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTable.upsert (6,591 samples, 6.34%)</title><rect x="638.1" y="643.0" width="74.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="641.1" y="654.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/Item.of (6,591 samples, 6.34%)</title><rect x="638.1" y="627.0" width="74.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="641.1" y="638.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5,586 samples, 5.37%)</title><rect x="638.1" y="611.0" width="63.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.1" y="622.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5,586 samples, 5.37%)</title><rect x="638.1" y="595.0" width="63.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="641.1" y="606.0">java.ni..</text>
</g>
<g>
<title>ru.mail.polis.dao.rubtsov.Item (1,005 samples, 0.97%)</title><rect x="701.4" y="611.0" width="11.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="704.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/BasicTopology.replicas (68 samples, 0.07%)</title><rect x="712.9" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="715.9" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList (31 samples, 0.03%)</title><rect x="712.9" y="659.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="715.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (37 samples, 0.04%)</title><rect x="713.2" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.2" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (37 samples, 0.04%)</title><rect x="713.2" y="643.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="716.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.sendRequestsAndCollect (4,580 samples, 4.40%)</title><rect x="713.6" y="675.0" width="52.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="716.6" y="686.0">ru/ma..</text>
</g>
<g>
<title>java/util/Collection.stream (87 samples, 0.08%)</title><rect x="713.8" y="659.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="716.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (69 samples, 0.07%)</title><rect x="714.0" y="643.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="717.0" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (69 samples, 0.07%)</title><rect x="714.0" y="627.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="717.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (31 samples, 0.03%)</title><rect x="714.7" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="717.7" y="670.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (31 samples, 0.03%)</title><rect x="714.7" y="643.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="717.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (4,367 samples, 4.20%)</title><rect x="715.1" y="659.0" width="49.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.1" y="670.0">java/..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4,347 samples, 4.18%)</title><rect x="715.1" y="643.0" width="49.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.1" y="654.0">java/..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (4,347 samples, 4.18%)</title><rect x="715.1" y="627.0" width="49.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="718.1" y="638.0">java/..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4,317 samples, 4.15%)</title><rect x="715.1" y="611.0" width="49.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="718.1" y="622.0">java..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4,293 samples, 4.13%)</title><rect x="715.1" y="595.0" width="48.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.1" y="606.0">java..</text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (4,265 samples, 4.10%)</title><rect x="715.1" y="579.0" width="48.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.1" y="590.0">java..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4,265 samples, 4.10%)</title><rect x="715.1" y="563.0" width="48.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.1" y="574.0">java..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (60 samples, 0.06%)</title><rect x="715.1" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$133/1101094733.accept (60 samples, 0.06%)</title><rect x="715.1" y="531.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (60 samples, 0.06%)</title><rect x="715.1" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.1" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (60 samples, 0.06%)</title><rect x="715.1" y="499.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="718.1" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (60 samples, 0.06%)</title><rect x="715.1" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="718.1" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (60 samples, 0.06%)</title><rect x="715.1" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="718.1" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (60 samples, 0.06%)</title><rect x="715.1" y="451.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="718.1" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (60 samples, 0.06%)</title><rect x="715.1" y="435.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="718.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$158/1188038743.apply (4,205 samples, 4.04%)</title><rect x="715.8" y="547.0" width="47.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.8" y="558.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$sendRequestsAndCollect$7 (4,205 samples, 4.04%)</title><rect x="715.8" y="531.0" width="47.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="718.8" y="542.0">ru/m..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (4,205 samples, 4.04%)</title><rect x="715.8" y="515.0" width="47.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="718.8" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,205 samples, 4.04%)</title><rect x="715.8" y="499.0" width="47.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.8" y="510.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,205 samples, 4.04%)</title><rect x="715.8" y="483.0" width="47.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.8" y="494.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,205 samples, 4.04%)</title><rect x="715.8" y="467.0" width="47.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="718.8" y="478.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.04%)</title><rect x="715.8" y="451.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="718.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.04%)</title><rect x="715.8" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$181/270135584.get$Lambda (38 samples, 0.04%)</title><rect x="715.8" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$181 (38 samples, 0.04%)</title><rect x="715.8" y="403.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="718.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (148 samples, 0.14%)</title><rect x="716.2" y="451.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="719.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (148 samples, 0.14%)</title><rect x="716.2" y="435.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (71 samples, 0.07%)</title><rect x="716.2" y="419.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="719.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (77 samples, 0.07%)</title><rect x="717.0" y="419.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="720.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (77 samples, 0.07%)</title><rect x="717.0" y="403.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (77 samples, 0.07%)</title><rect x="717.0" y="387.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="720.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (149 samples, 0.14%)</title><rect x="717.9" y="451.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="720.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (149 samples, 0.14%)</title><rect x="717.9" y="435.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="720.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (80 samples, 0.08%)</title><rect x="717.9" y="419.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="720.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (69 samples, 0.07%)</title><rect x="718.8" y="419.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="721.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (69 samples, 0.07%)</title><rect x="718.8" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="721.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (69 samples, 0.07%)</title><rect x="718.8" y="387.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="721.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (104 samples, 0.10%)</title><rect x="719.6" y="451.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="722.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (177 samples, 0.17%)</title><rect x="720.8" y="451.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="723.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (2,089 samples, 2.01%)</title><rect x="722.9" y="451.0" width="23.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.9" y="462.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (239 samples, 0.23%)</title><rect x="722.9" y="435.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.9" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (190 samples, 0.18%)</title><rect x="722.9" y="419.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.9" y="430.0"></text>
</g>
<g>
<title>java/util/List.spliterator (64 samples, 0.06%)</title><rect x="722.9" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.9" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (64 samples, 0.06%)</title><rect x="722.9" y="387.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="725.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (126 samples, 0.12%)</title><rect x="723.6" y="403.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="726.6" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (125 samples, 0.12%)</title><rect x="723.6" y="387.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="726.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (49 samples, 0.05%)</title><rect x="725.0" y="419.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (49 samples, 0.05%)</title><rect x="725.0" y="403.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.0" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (49 samples, 0.05%)</title><rect x="725.0" y="387.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="728.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$55/1962826816.get (49 samples, 0.05%)</title><rect x="725.0" y="371.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="728.0" y="382.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (49 samples, 0.05%)</title><rect x="725.0" y="355.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="728.0" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (828 samples, 0.80%)</title><rect x="725.6" y="435.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.6" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (828 samples, 0.80%)</title><rect x="725.6" y="419.0" width="9.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.6" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (35 samples, 0.03%)</title><rect x="725.6" y="403.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="728.6" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList (46 samples, 0.04%)</title><rect x="726.0" y="403.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="729.0" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (90 samples, 0.09%)</title><rect x="726.5" y="403.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="729.5" y="414.0"></text>
</g>
<g>
<title>java.util.TreeSet (38 samples, 0.04%)</title><rect x="727.5" y="403.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="730.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.05%)</title><rect x="727.9" y="403.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.05%)</title><rect x="727.9" y="387.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.get$Lambda (55 samples, 0.05%)</title><rect x="727.9" y="371.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="730.9" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$149 (55 samples, 0.05%)</title><rect x="727.9" y="355.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="730.9" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (389 samples, 0.37%)</title><rect x="728.6" y="403.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.6" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (389 samples, 0.37%)</title><rect x="728.6" y="387.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.accept (389 samples, 0.37%)</title><rect x="728.6" y="371.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (389 samples, 0.37%)</title><rect x="728.6" y="355.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="731.6" y="366.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (166 samples, 0.16%)</title><rect x="728.6" y="339.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.6" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.accept (103 samples, 0.10%)</title><rect x="728.6" y="323.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.6" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (103 samples, 0.10%)</title><rect x="728.6" y="307.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (103 samples, 0.10%)</title><rect x="728.6" y="291.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (103 samples, 0.10%)</title><rect x="728.6" y="275.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="731.6" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (103 samples, 0.10%)</title><rect x="728.6" y="259.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="731.6" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (103 samples, 0.10%)</title><rect x="728.6" y="243.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.6" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (103 samples, 0.10%)</title><rect x="728.6" y="227.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="731.6" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (103 samples, 0.10%)</title><rect x="728.6" y="211.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="731.6" y="222.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (63 samples, 0.06%)</title><rect x="729.7" y="323.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.7" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (63 samples, 0.06%)</title><rect x="729.7" y="307.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="732.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.06%)</title><rect x="730.5" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.06%)</title><rect x="730.5" y="323.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.5" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.get$Lambda (59 samples, 0.06%)</title><rect x="730.5" y="307.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="733.5" y="318.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$157 (59 samples, 0.06%)</title><rect x="730.5" y="291.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="733.5" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (77 samples, 0.07%)</title><rect x="731.1" y="339.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="734.1" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (77 samples, 0.07%)</title><rect x="731.1" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (33 samples, 0.03%)</title><rect x="731.1" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="734.1" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (33 samples, 0.03%)</title><rect x="731.1" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.1" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.03%)</title><rect x="731.1" y="275.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="734.1" y="286.0"></text>
</g>
<g>
<title>java/util/List.of (44 samples, 0.04%)</title><rect x="731.5" y="307.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="734.5" y="318.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (44 samples, 0.04%)</title><rect x="731.5" y="291.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="734.5" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (87 samples, 0.08%)</title><rect x="732.0" y="339.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.0" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (87 samples, 0.08%)</title><rect x="732.0" y="323.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="735.0" y="334.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (63 samples, 0.06%)</title><rect x="733.0" y="403.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.0" y="414.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (63 samples, 0.06%)</title><rect x="733.0" y="387.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="736.0" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (112 samples, 0.11%)</title><rect x="733.7" y="403.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.7" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (112 samples, 0.11%)</title><rect x="733.7" y="387.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="736.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (32 samples, 0.03%)</title><rect x="735.0" y="435.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="738.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (730 samples, 0.70%)</title><rect x="735.3" y="435.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="738.3" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (730 samples, 0.70%)</title><rect x="735.3" y="419.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.3" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (661 samples, 0.64%)</title><rect x="735.3" y="403.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.3" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (661 samples, 0.64%)</title><rect x="735.3" y="387.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.3" y="398.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (661 samples, 0.64%)</title><rect x="735.3" y="371.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.3" y="382.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (128 samples, 0.12%)</title><rect x="735.3" y="355.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="738.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (203 samples, 0.20%)</title><rect x="736.8" y="355.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.8" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (203 samples, 0.20%)</title><rect x="736.8" y="339.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.8" y="350.0"></text>
</g>
<g>
<title>byte[] (203 samples, 0.20%)</title><rect x="736.8" y="323.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="739.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (330 samples, 0.32%)</title><rect x="739.1" y="355.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="742.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (330 samples, 0.32%)</title><rect x="739.1" y="339.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="742.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String (143 samples, 0.14%)</title><rect x="739.1" y="323.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="742.1" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (187 samples, 0.18%)</title><rect x="740.7" y="323.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.7" y="334.0"></text>
</g>
<g>
<title>byte[] (187 samples, 0.18%)</title><rect x="740.7" y="307.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="743.7" y="318.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (69 samples, 0.07%)</title><rect x="742.8" y="403.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="745.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (94 samples, 0.09%)</title><rect x="743.6" y="435.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.6" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (94 samples, 0.09%)</title><rect x="743.6" y="419.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="746.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (166 samples, 0.16%)</title><rect x="744.7" y="435.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.7" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (50 samples, 0.05%)</title><rect x="744.7" y="419.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="747.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (53 samples, 0.05%)</title><rect x="745.2" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.2" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (53 samples, 0.05%)</title><rect x="745.2" y="403.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="748.2" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (63 samples, 0.06%)</title><rect x="745.9" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.9" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (63 samples, 0.06%)</title><rect x="745.9" y="403.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="748.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (976 samples, 0.94%)</title><rect x="746.6" y="451.0" width="11.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (36 samples, 0.03%)</title><rect x="746.6" y="435.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="749.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (158 samples, 0.15%)</title><rect x="747.0" y="435.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="750.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (27 samples, 0.03%)</title><rect x="748.8" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (27 samples, 0.03%)</title><rect x="748.8" y="419.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="751.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (754 samples, 0.73%)</title><rect x="749.1" y="435.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (754 samples, 0.73%)</title><rect x="749.1" y="419.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.1" y="430.0"></text>
</g>
<g>
<title>java.lang.Class[] (47 samples, 0.05%)</title><rect x="749.1" y="403.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="752.1" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (65 samples, 0.06%)</title><rect x="749.6" y="403.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="752.6" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList (52 samples, 0.05%)</title><rect x="750.4" y="403.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="753.4" y="414.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (319 samples, 0.31%)</title><rect x="750.9" y="403.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (319 samples, 0.31%)</title><rect x="750.9" y="387.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.9" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (319 samples, 0.31%)</title><rect x="750.9" y="371.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.9" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (319 samples, 0.31%)</title><rect x="750.9" y="355.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.9" y="366.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (318 samples, 0.31%)</title><rect x="750.9" y="339.0" width="3.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="753.9" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (106 samples, 0.10%)</title><rect x="754.6" y="403.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (106 samples, 0.10%)</title><rect x="754.6" y="387.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (38 samples, 0.04%)</title><rect x="754.6" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (38 samples, 0.04%)</title><rect x="754.6" y="355.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="757.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (68 samples, 0.07%)</title><rect x="755.0" y="371.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="758.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (68 samples, 0.07%)</title><rect x="755.0" y="355.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="758.0" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (77 samples, 0.07%)</title><rect x="755.8" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="758.8" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (77 samples, 0.07%)</title><rect x="755.8" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="758.8" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (77 samples, 0.07%)</title><rect x="755.8" y="371.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="758.8" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (77 samples, 0.07%)</title><rect x="755.8" y="355.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="758.8" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (88 samples, 0.08%)</title><rect x="756.6" y="403.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.6" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (88 samples, 0.08%)</title><rect x="756.6" y="387.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.6" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (88 samples, 0.08%)</title><rect x="756.6" y="371.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="759.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (516 samples, 0.50%)</title><rect x="757.6" y="451.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (109 samples, 0.10%)</title><rect x="757.6" y="435.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="760.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (48 samples, 0.05%)</title><rect x="757.6" y="419.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="760.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (61 samples, 0.06%)</title><rect x="758.2" y="419.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (61 samples, 0.06%)</title><rect x="758.2" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="761.2" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (58 samples, 0.06%)</title><rect x="758.2" y="387.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="761.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (61 samples, 0.06%)</title><rect x="758.9" y="435.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="761.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (346 samples, 0.33%)</title><rect x="759.6" y="435.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (60 samples, 0.06%)</title><rect x="759.6" y="419.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="762.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.06%)</title><rect x="759.6" y="403.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="762.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$171/210725587.get$Lambda (31 samples, 0.03%)</title><rect x="759.6" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$171 (31 samples, 0.03%)</title><rect x="759.6" y="371.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="762.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$175/71332808.get$Lambda (29 samples, 0.03%)</title><rect x="759.9" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$175 (29 samples, 0.03%)</title><rect x="759.9" y="371.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="762.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (286 samples, 0.28%)</title><rect x="760.3" y="419.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (286 samples, 0.28%)</title><rect x="760.3" y="403.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (155 samples, 0.15%)</title><rect x="760.3" y="387.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="763.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (131 samples, 0.13%)</title><rect x="762.0" y="387.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (131 samples, 0.13%)</title><rect x="762.0" y="371.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (131 samples, 0.13%)</title><rect x="762.0" y="355.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="765.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (28 samples, 0.03%)</title><rect x="763.5" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.5" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (28 samples, 0.03%)</title><rect x="763.5" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="766.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$130/360411984.get (28 samples, 0.03%)</title><rect x="763.5" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="766.5" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (28 samples, 0.03%)</title><rect x="763.5" y="531.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="766.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (24 samples, 0.02%)</title><rect x="763.8" y="595.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="766.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (24 samples, 0.02%)</title><rect x="763.8" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="766.8" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (24 samples, 0.02%)</title><rect x="763.8" y="563.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="766.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (30 samples, 0.03%)</title><rect x="764.1" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="767.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (30 samples, 0.03%)</title><rect x="764.1" y="595.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="767.1" y="606.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (30 samples, 0.03%)</title><rect x="764.1" y="579.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="767.1" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (83 samples, 0.08%)</title><rect x="764.7" y="659.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="767.7" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (83 samples, 0.08%)</title><rect x="764.7" y="643.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="767.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.getHttpRequests (3,366 samples, 3.24%)</title><rect x="765.6" y="675.0" width="38.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.6" y="686.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.03%)</title><rect x="765.6" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="768.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.03%)</title><rect x="765.6" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="768.6" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (117 samples, 0.11%)</title><rect x="766.0" y="659.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.0" y="670.0"></text>
</g>
<g>
<title>java/util/Set.spliterator (43 samples, 0.04%)</title><rect x="766.0" y="643.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="769.0" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (43 samples, 0.04%)</title><rect x="766.0" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.0" y="638.0"></text>
</g>
<g>
<title>java.util.Spliterators$IteratorSpliterator (43 samples, 0.04%)</title><rect x="766.0" y="611.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="769.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (74 samples, 0.07%)</title><rect x="766.5" y="643.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="769.5" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (74 samples, 0.07%)</title><rect x="766.5" y="627.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="769.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (38 samples, 0.04%)</title><rect x="767.3" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.3" y="670.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (38 samples, 0.04%)</title><rect x="767.3" y="643.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="770.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (2,720 samples, 2.62%)</title><rect x="767.7" y="659.0" width="30.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="770.7" y="670.0">ja..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2,686 samples, 2.58%)</title><rect x="767.7" y="643.0" width="30.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.7" y="654.0">ja..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2,686 samples, 2.58%)</title><rect x="767.7" y="627.0" width="30.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="770.7" y="638.0">ja..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2,652 samples, 2.55%)</title><rect x="767.7" y="611.0" width="30.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="770.7" y="622.0">ja..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2,504 samples, 2.41%)</title><rect x="767.7" y="595.0" width="28.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.7" y="606.0">ja..</text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (27 samples, 0.03%)</title><rect x="767.7" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="770.7" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (27 samples, 0.03%)</title><rect x="767.7" y="563.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="770.7" y="574.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.iterator (27 samples, 0.03%)</title><rect x="767.7" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="770.7" y="558.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN$SetNIterator (27 samples, 0.03%)</title><rect x="767.7" y="531.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="770.7" y="542.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.forEachRemaining (2,447 samples, 2.35%)</title><rect x="768.0" y="579.0" width="27.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.0" y="590.0">j..</text>
</g>
<g>
<title>java/util/Iterator.forEachRemaining (2,447 samples, 2.35%)</title><rect x="768.0" y="563.0" width="27.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.0" y="574.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2,447 samples, 2.35%)</title><rect x="768.0" y="547.0" width="27.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.0" y="558.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,447 samples, 2.35%)</title><rect x="768.0" y="531.0" width="27.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="771.0" y="542.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,270 samples, 2.18%)</title><rect x="768.0" y="515.0" width="25.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.0" y="526.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,524 samples, 1.47%)</title><rect x="768.0" y="499.0" width="17.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="771.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,321 samples, 1.27%)</title><rect x="768.0" y="483.0" width="15.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,245 samples, 1.20%)</title><rect x="768.0" y="467.0" width="14.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="771.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (47 samples, 0.05%)</title><rect x="768.0" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="771.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$133/1101094733.accept (47 samples, 0.05%)</title><rect x="768.0" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="771.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (47 samples, 0.05%)</title><rect x="768.0" y="419.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (47 samples, 0.05%)</title><rect x="768.0" y="403.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.0" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (47 samples, 0.05%)</title><rect x="768.0" y="387.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (47 samples, 0.05%)</title><rect x="768.0" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="771.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (47 samples, 0.05%)</title><rect x="768.0" y="355.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (47 samples, 0.05%)</title><rect x="768.0" y="339.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="771.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils$$Lambda$129/283467809.apply (1,198 samples, 1.15%)</title><rect x="768.6" y="451.0" width="13.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="771.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.lambda$getHttpRequests$2 (1,198 samples, 1.15%)</title><rect x="768.6" y="435.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.6" y="446.0"></text>
</g>
<g>
<title>java/time/Duration.ofMillis (44 samples, 0.04%)</title><rect x="768.6" y="419.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.6" y="430.0"></text>
</g>
<g>
<title>java/time/Duration.create (44 samples, 0.04%)</title><rect x="768.6" y="403.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="771.6" y="414.0"></text>
</g>
<g>
<title>java.time.Duration (44 samples, 0.04%)</title><rect x="768.6" y="387.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="771.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (957 samples, 0.92%)</title><rect x="769.1" y="419.0" width="10.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="772.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (80 samples, 0.08%)</title><rect x="769.1" y="403.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="772.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (877 samples, 0.84%)</title><rect x="770.0" y="403.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.0" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (828 samples, 0.80%)</title><rect x="770.0" y="387.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.0" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (828 samples, 0.80%)</title><rect x="770.0" y="371.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.0" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (34 samples, 0.03%)</title><rect x="770.0" y="355.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="773.0" y="366.0"></text>
</g>
<g>
<title>java.util.ArrayList (52 samples, 0.05%)</title><rect x="770.4" y="355.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="773.4" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap (110 samples, 0.11%)</title><rect x="771.0" y="355.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="774.0" y="366.0"></text>
</g>
<g>
<title>java.util.TreeSet (44 samples, 0.04%)</title><rect x="772.2" y="355.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="775.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (70 samples, 0.07%)</title><rect x="772.7" y="355.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (70 samples, 0.07%)</title><rect x="772.7" y="339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="775.7" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.get$Lambda (70 samples, 0.07%)</title><rect x="772.7" y="323.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.7" y="334.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$149 (70 samples, 0.07%)</title><rect x="772.7" y="307.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="775.7" y="318.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (66 samples, 0.06%)</title><rect x="773.5" y="355.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.5" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (66 samples, 0.06%)</title><rect x="773.5" y="339.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="776.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (346 samples, 0.33%)</title><rect x="774.3" y="355.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="777.3" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.accept (346 samples, 0.33%)</title><rect x="774.3" y="339.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.3" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (346 samples, 0.33%)</title><rect x="774.3" y="323.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.05%)</title><rect x="774.3" y="307.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.05%)</title><rect x="774.3" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.3" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.get$Lambda (49 samples, 0.05%)</title><rect x="774.3" y="275.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="777.3" y="286.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$157 (49 samples, 0.05%)</title><rect x="774.3" y="259.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="777.3" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (113 samples, 0.11%)</title><rect x="774.8" y="307.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.accept (113 samples, 0.11%)</title><rect x="774.8" y="291.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.8" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (113 samples, 0.11%)</title><rect x="774.8" y="275.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.8" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (113 samples, 0.11%)</title><rect x="774.8" y="259.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.8" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (113 samples, 0.11%)</title><rect x="774.8" y="243.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (113 samples, 0.11%)</title><rect x="774.8" y="227.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (113 samples, 0.11%)</title><rect x="774.8" y="211.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.8" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (113 samples, 0.11%)</title><rect x="774.8" y="195.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.8" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (113 samples, 0.11%)</title><rect x="774.8" y="179.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="777.8" y="190.0"></text>
</g>
<g>
<title>java/util/List.copyOf (99 samples, 0.10%)</title><rect x="776.1" y="307.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.1" y="318.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (99 samples, 0.10%)</title><rect x="776.1" y="291.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (49 samples, 0.05%)</title><rect x="776.1" y="275.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="779.1" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (49 samples, 0.05%)</title><rect x="776.1" y="259.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.1" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (49 samples, 0.05%)</title><rect x="776.1" y="243.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="779.1" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (50 samples, 0.05%)</title><rect x="776.6" y="275.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.6" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (50 samples, 0.05%)</title><rect x="776.6" y="259.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="779.6" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (85 samples, 0.08%)</title><rect x="777.2" y="307.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.2" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (85 samples, 0.08%)</title><rect x="777.2" y="291.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="780.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (106 samples, 0.10%)</title><rect x="778.2" y="355.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.2" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap (106 samples, 0.10%)</title><rect x="778.2" y="339.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="781.2" y="350.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (49 samples, 0.05%)</title><rect x="779.4" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="782.4" y="398.0"></text>
</g>
<g>
<title>java/util/Optional.of (49 samples, 0.05%)</title><rect x="779.4" y="371.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.4" y="382.0"></text>
</g>
<g>
<title>java.util.Optional (49 samples, 0.05%)</title><rect x="779.4" y="355.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="782.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (197 samples, 0.19%)</title><rect x="779.9" y="419.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (197 samples, 0.19%)</title><rect x="779.9" y="403.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="782.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (197 samples, 0.19%)</title><rect x="779.9" y="387.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.9" y="398.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (197 samples, 0.19%)</title><rect x="779.9" y="371.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="782.9" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (80 samples, 0.08%)</title><rect x="779.9" y="355.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="782.9" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (80 samples, 0.08%)</title><rect x="779.9" y="339.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="782.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$139/805606869.apply (117 samples, 0.11%)</title><rect x="780.8" y="355.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (117 samples, 0.11%)</title><rect x="780.8" y="339.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.8" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (59 samples, 0.06%)</title><rect x="780.8" y="323.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="783.8" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (58 samples, 0.06%)</title><rect x="781.5" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="784.5" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (58 samples, 0.06%)</title><rect x="781.5" y="307.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="784.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$117/630041519.apply (76 samples, 0.07%)</title><rect x="782.2" y="467.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="785.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$upsert$8 (76 samples, 0.07%)</title><rect x="782.2" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.2" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (76 samples, 0.07%)</title><rect x="782.2" y="435.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="785.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (76 samples, 0.07%)</title><rect x="782.2" y="419.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="785.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils$$Lambda$127/562995202.apply (203 samples, 0.20%)</title><rect x="783.0" y="483.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="786.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (203 samples, 0.20%)</title><rect x="783.0" y="467.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (80 samples, 0.08%)</title><rect x="783.0" y="451.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="786.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (123 samples, 0.12%)</title><rect x="783.9" y="451.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (30 samples, 0.03%)</title><rect x="783.9" y="435.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="786.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (93 samples, 0.09%)</title><rect x="784.3" y="435.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="787.3" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (93 samples, 0.09%)</title><rect x="784.3" y="419.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="787.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils$$Lambda$124/1622387257.apply (746 samples, 0.72%)</title><rect x="785.3" y="499.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="788.3" y="510.0"></text>
</g>
<g>
<title>java/net/URI.create (746 samples, 0.72%)</title><rect x="785.3" y="483.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.3" y="494.0"></text>
</g>
<g>
<title>java.net.URI (129 samples, 0.12%)</title><rect x="785.3" y="467.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="788.3" y="478.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (617 samples, 0.59%)</title><rect x="786.8" y="467.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="789.8" y="478.0"></text>
</g>
<g>
<title>java.net.URI$Parser (66 samples, 0.06%)</title><rect x="786.8" y="451.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="789.8" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (551 samples, 0.53%)</title><rect x="787.6" y="451.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="790.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (89 samples, 0.09%)</title><rect x="787.6" y="435.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="790.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (89 samples, 0.09%)</title><rect x="787.6" y="419.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="790.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.04%)</title><rect x="787.6" y="403.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="790.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (52 samples, 0.05%)</title><rect x="788.0" y="403.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.0" y="414.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.05%)</title><rect x="788.0" y="387.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="791.0" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (462 samples, 0.44%)</title><rect x="788.6" y="435.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="791.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (225 samples, 0.22%)</title><rect x="788.6" y="419.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (225 samples, 0.22%)</title><rect x="788.6" y="403.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.6" y="414.0"></text>
</g>
<g>
<title>java.lang.String (88 samples, 0.08%)</title><rect x="788.6" y="387.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="791.6" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (137 samples, 0.13%)</title><rect x="789.6" y="387.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="792.6" y="398.0"></text>
</g>
<g>
<title>byte[] (137 samples, 0.13%)</title><rect x="789.6" y="371.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="792.6" y="382.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (237 samples, 0.23%)</title><rect x="791.1" y="419.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="794.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (122 samples, 0.12%)</title><rect x="791.1" y="403.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (122 samples, 0.12%)</title><rect x="791.1" y="387.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.1" y="398.0"></text>
</g>
<g>
<title>java.lang.String (47 samples, 0.05%)</title><rect x="791.1" y="371.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="794.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (75 samples, 0.07%)</title><rect x="791.7" y="371.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="794.7" y="382.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.07%)</title><rect x="791.7" y="355.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="794.7" y="366.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (115 samples, 0.11%)</title><rect x="792.5" y="403.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.5" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (115 samples, 0.11%)</title><rect x="792.5" y="387.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (115 samples, 0.11%)</title><rect x="792.5" y="371.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="795.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (115 samples, 0.11%)</title><rect x="792.5" y="355.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="795.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.04%)</title><rect x="792.5" y="339.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="795.5" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (74 samples, 0.07%)</title><rect x="793.0" y="339.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.0" y="350.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.07%)</title><rect x="793.0" y="323.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="796.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils$$Lambda$121/1369809361.apply (177 samples, 0.17%)</title><rect x="793.8" y="515.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.lambda$getHttpRequests$1 (177 samples, 0.17%)</title><rect x="793.8" y="499.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="796.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (177 samples, 0.17%)</title><rect x="793.8" y="483.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="796.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (177 samples, 0.17%)</title><rect x="793.8" y="467.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="796.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1089418272.invoke (177 samples, 0.17%)</title><rect x="793.8" y="451.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="796.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (177 samples, 0.17%)</title><rect x="793.8" y="435.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (44 samples, 0.04%)</title><rect x="793.8" y="419.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.04%)</title><rect x="793.8" y="403.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="796.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (133 samples, 0.13%)</title><rect x="794.3" y="419.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="797.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (133 samples, 0.13%)</title><rect x="794.3" y="403.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="797.3" y="414.0"></text>
</g>
<g>
<title>byte[] (133 samples, 0.13%)</title><rect x="794.3" y="387.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="797.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (30 samples, 0.03%)</title><rect x="795.8" y="579.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="798.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (30 samples, 0.03%)</title><rect x="795.8" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (30 samples, 0.03%)</title><rect x="795.8" y="547.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (30 samples, 0.03%)</title><rect x="795.8" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="798.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (30 samples, 0.03%)</title><rect x="795.8" y="515.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="798.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (30 samples, 0.03%)</title><rect x="795.8" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="798.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (30 samples, 0.03%)</title><rect x="795.8" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$130/360411984.get (30 samples, 0.03%)</title><rect x="795.8" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.8" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (30 samples, 0.03%)</title><rect x="795.8" y="451.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="798.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (148 samples, 0.14%)</title><rect x="796.2" y="595.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (132 samples, 0.13%)</title><rect x="796.3" y="579.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.3" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (132 samples, 0.13%)</title><rect x="796.3" y="563.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="799.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (34 samples, 0.03%)</title><rect x="797.8" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (34 samples, 0.03%)</title><rect x="797.8" y="595.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="800.8" y="606.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (34 samples, 0.03%)</title><rect x="797.8" y="579.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="800.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (34 samples, 0.03%)</title><rect x="798.2" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="801.2" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (34 samples, 0.03%)</title><rect x="798.2" y="627.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="801.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (68 samples, 0.07%)</title><rect x="798.6" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="801.6" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (68 samples, 0.07%)</title><rect x="798.6" y="643.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="801.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (326 samples, 0.31%)</title><rect x="799.4" y="659.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="802.4" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (326 samples, 0.31%)</title><rect x="799.4" y="643.0" width="3.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="802.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/BasicTopology.all (63 samples, 0.06%)</title><rect x="803.1" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="806.1" y="670.0"></text>
</g>
<g>
<title>java/util/Set.of (63 samples, 0.06%)</title><rect x="803.1" y="643.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="806.1" y="654.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (24 samples, 0.02%)</title><rect x="803.1" y="627.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="806.1" y="638.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (39 samples, 0.04%)</title><rect x="803.4" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="806.4" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (39 samples, 0.04%)</title><rect x="803.4" y="611.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="806.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (6,435 samples, 6.19%)</title><rect x="803.8" y="803.0" width="73.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.8" y="814.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (6,435 samples, 6.19%)</title><rect x="803.8" y="787.0" width="73.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="806.8" y="798.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (6,435 samples, 6.19%)</title><rect x="803.8" y="771.0" width="73.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.8" y="782.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (6,435 samples, 6.19%)</title><rect x="803.8" y="755.0" width="73.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="806.8" y="766.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (6,435 samples, 6.19%)</title><rect x="803.8" y="739.0" width="73.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="806.8" y="750.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (6,435 samples, 6.19%)</title><rect x="803.8" y="723.0" width="73.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.8" y="734.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (4,069 samples, 3.91%)</title><rect x="803.8" y="707.0" width="46.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="806.8" y="718.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (273 samples, 0.26%)</title><rect x="803.8" y="691.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="806.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$187/1315311552.apply (3,796 samples, 3.65%)</title><rect x="806.9" y="691.0" width="43.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="809.9" y="702.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$upsert$10 (3,796 samples, 3.65%)</title><rect x="806.9" y="675.0" width="43.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="809.9" y="686.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/FutureUtils.getFutureResponses (3,796 samples, 3.65%)</title><rect x="806.9" y="659.0" width="43.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.9" y="670.0">ru/m..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (217 samples, 0.21%)</title><rect x="806.9" y="643.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="809.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (231 samples, 0.22%)</title><rect x="809.4" y="643.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="812.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (236 samples, 0.23%)</title><rect x="812.0" y="643.0" width="2.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="815.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/335139775.linkToTargetMethod (255 samples, 0.25%)</title><rect x="814.7" y="643.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1012184681.invokeStatic (255 samples, 0.25%)</title><rect x="814.7" y="627.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="817.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/FutureUtils$$Lambda$210/579933996.get$Lambda (255 samples, 0.25%)</title><rect x="814.7" y="611.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="817.7" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rubtsov.FutureUtils$$Lambda$210 (255 samples, 0.25%)</title><rect x="814.7" y="595.0" width="2.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="817.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (1,236 samples, 1.19%)</title><rect x="817.5" y="643.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="820.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1,236 samples, 1.19%)</title><rect x="817.5" y="627.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (706 samples, 0.68%)</title><rect x="817.5" y="611.0" width="8.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="820.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (530 samples, 0.51%)</title><rect x="825.6" y="611.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="828.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (530 samples, 0.51%)</title><rect x="825.6" y="595.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="828.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (530 samples, 0.51%)</title><rect x="825.6" y="579.0" width="6.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="828.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1,311 samples, 1.26%)</title><rect x="831.6" y="643.0" width="14.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="834.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,311 samples, 1.26%)</title><rect x="831.6" y="627.0" width="14.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.6" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (739 samples, 0.71%)</title><rect x="831.6" y="611.0" width="8.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="834.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (572 samples, 0.55%)</title><rect x="840.0" y="611.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (572 samples, 0.55%)</title><rect x="840.0" y="595.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (572 samples, 0.55%)</title><rect x="840.0" y="579.0" width="6.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="843.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (310 samples, 0.30%)</title><rect x="846.5" y="643.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="849.5" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (159 samples, 0.15%)</title><rect x="846.5" y="627.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="849.5" y="638.0"></text>
</g>
<g>
<title>java.lang.Object (151 samples, 0.15%)</title><rect x="848.3" y="627.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="851.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2,366 samples, 2.28%)</title><rect x="850.0" y="707.0" width="26.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.0" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2,366 samples, 2.28%)</title><rect x="850.0" y="691.0" width="26.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.0" y="702.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/FutureUtils$$Lambda$210/579933996.accept (259 samples, 0.25%)</title><rect x="850.0" y="675.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/FutureUtils.lambda$getFutureResponses$0 (259 samples, 0.25%)</title><rect x="850.0" y="659.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (259 samples, 0.25%)</title><rect x="850.0" y="643.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.0" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (259 samples, 0.25%)</title><rect x="850.0" y="627.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.0" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (259 samples, 0.25%)</title><rect x="850.0" y="611.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="853.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$190/574769761.accept (2,107 samples, 2.03%)</title><rect x="852.9" y="675.0" width="23.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.9" y="686.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$upsert$11 (2,107 samples, 2.03%)</title><rect x="852.9" y="659.0" width="23.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="855.9" y="670.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.handlePutResponses (2,107 samples, 2.03%)</title><rect x="852.9" y="643.0" width="23.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.9" y="654.0">r..</text>
</g>
<g>
<title>one.nio.http.Response (208 samples, 0.20%)</title><rect x="852.9" y="627.0" width="2.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="855.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,036 samples, 1.00%)</title><rect x="855.3" y="627.0" width="11.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="858.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,036 samples, 1.00%)</title><rect x="855.3" y="611.0" width="11.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="858.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (718 samples, 0.69%)</title><rect x="855.3" y="595.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="858.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (718 samples, 0.69%)</title><rect x="855.3" y="579.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="858.3" y="590.0"></text>
</g>
<g>
<title>byte[] (716 samples, 0.69%)</title><rect x="855.3" y="563.0" width="8.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="858.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (318 samples, 0.31%)</title><rect x="863.4" y="595.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="866.4" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (318 samples, 0.31%)</title><rect x="863.4" y="579.0" width="3.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="866.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (863 samples, 0.83%)</title><rect x="867.0" y="627.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="870.0" y="638.0"></text>
</g>
<g>
<title>byte[] (367 samples, 0.35%)</title><rect x="867.0" y="611.0" width="4.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="870.0" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (281 samples, 0.27%)</title><rect x="871.2" y="611.0" width="3.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="874.2" y="622.0"></text>
</g>
<g>
<title>java.lang.String (215 samples, 0.21%)</title><rect x="874.4" y="611.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="877.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (2,234 samples, 2.15%)</title><rect x="876.8" y="803.0" width="25.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="879.8" y="814.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.05%)</title><rect x="876.8" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="879.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.05%)</title><rect x="876.8" y="771.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="879.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$315/346158750.get$Lambda (34 samples, 0.03%)</title><rect x="876.8" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.8" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$315 (34 samples, 0.03%)</title><rect x="876.8" y="739.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="879.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1995250556.linkToTargetMethod (59 samples, 0.06%)</title><rect x="877.4" y="787.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="880.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.06%)</title><rect x="877.4" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="880.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$316/248695201.get$Lambda (59 samples, 0.06%)</title><rect x="877.4" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="880.4" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$316 (59 samples, 0.06%)</title><rect x="877.4" y="739.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="880.4" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (513 samples, 0.49%)</title><rect x="878.0" y="787.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="881.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$317/1029786317.accept (421 samples, 0.40%)</title><rect x="878.0" y="771.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="881.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (421 samples, 0.40%)</title><rect x="878.0" y="755.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="881.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (421 samples, 0.40%)</title><rect x="878.0" y="739.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="881.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (421 samples, 0.40%)</title><rect x="878.0" y="723.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="881.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (421 samples, 0.40%)</title><rect x="878.0" y="707.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="881.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (421 samples, 0.40%)</title><rect x="878.0" y="691.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (421 samples, 0.40%)</title><rect x="878.0" y="675.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (421 samples, 0.40%)</title><rect x="878.0" y="659.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="881.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (421 samples, 0.40%)</title><rect x="878.0" y="643.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="881.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (421 samples, 0.40%)</title><rect x="878.0" y="627.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="881.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$238/1293482513.run (421 samples, 0.40%)</title><rect x="878.0" y="611.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="881.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (421 samples, 0.40%)</title><rect x="878.0" y="595.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="881.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (113 samples, 0.11%)</title><rect x="878.0" y="579.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (113 samples, 0.11%)</title><rect x="878.0" y="563.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="881.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (113 samples, 0.11%)</title><rect x="878.0" y="547.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="881.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (48 samples, 0.05%)</title><rect x="878.0" y="531.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="881.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (48 samples, 0.05%)</title><rect x="878.0" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="881.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (48 samples, 0.05%)</title><rect x="878.0" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="881.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (48 samples, 0.05%)</title><rect x="878.0" y="483.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="881.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (48 samples, 0.05%)</title><rect x="878.0" y="467.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="881.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 0.06%)</title><rect x="878.6" y="531.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 0.06%)</title><rect x="878.6" y="515.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="881.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (65 samples, 0.06%)</title><rect x="878.6" y="499.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="881.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (65 samples, 0.06%)</title><rect x="878.6" y="483.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="881.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (65 samples, 0.06%)</title><rect x="878.6" y="467.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="881.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (64 samples, 0.06%)</title><rect x="878.6" y="451.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="881.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (33 samples, 0.03%)</title><rect x="879.4" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="882.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.03%)</title><rect x="879.4" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.03%)</title><rect x="879.4" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="882.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$328/562141945.get$Lambda (33 samples, 0.03%)</title><rect x="879.4" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="882.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$328 (33 samples, 0.03%)</title><rect x="879.4" y="515.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="882.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (270 samples, 0.26%)</title><rect x="879.8" y="579.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="882.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (153 samples, 0.15%)</title><rect x="879.8" y="563.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="882.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (90 samples, 0.09%)</title><rect x="879.8" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="882.8" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (90 samples, 0.09%)</title><rect x="879.8" y="531.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="882.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (63 samples, 0.06%)</title><rect x="880.8" y="547.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="883.8" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (63 samples, 0.06%)</title><rect x="880.8" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="883.8" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (63 samples, 0.06%)</title><rect x="880.8" y="515.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="883.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (117 samples, 0.11%)</title><rect x="881.5" y="563.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="884.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$235/1088281802.get (117 samples, 0.11%)</title><rect x="881.5" y="547.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="884.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (117 samples, 0.11%)</title><rect x="881.5" y="531.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="884.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (117 samples, 0.11%)</title><rect x="881.5" y="515.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="884.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (117 samples, 0.11%)</title><rect x="881.5" y="499.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="884.5" y="510.0"></text>
</g>
<g>
<title>byte[] (107 samples, 0.10%)</title><rect x="881.6" y="483.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="884.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$320/412918576.accept (92 samples, 0.09%)</title><rect x="882.8" y="771.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="885.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (92 samples, 0.09%)</title><rect x="882.8" y="755.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="885.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$316/248695201.run (92 samples, 0.09%)</title><rect x="882.8" y="739.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="885.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (92 samples, 0.09%)</title><rect x="882.8" y="723.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="885.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (92 samples, 0.09%)</title><rect x="882.8" y="707.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="885.8" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (92 samples, 0.09%)</title><rect x="882.8" y="691.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="885.8" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (92 samples, 0.09%)</title><rect x="882.8" y="675.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.8" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (92 samples, 0.09%)</title><rect x="882.8" y="659.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="885.8" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (165 samples, 0.16%)</title><rect x="883.9" y="787.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="886.9" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (165 samples, 0.16%)</title><rect x="883.9" y="771.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="886.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (110 samples, 0.11%)</title><rect x="885.7" y="787.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="888.7" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (67 samples, 0.06%)</title><rect x="885.7" y="771.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="888.7" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (67 samples, 0.06%)</title><rect x="885.7" y="755.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="888.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (67 samples, 0.06%)</title><rect x="885.7" y="739.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="888.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (67 samples, 0.06%)</title><rect x="885.7" y="723.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="888.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (67 samples, 0.06%)</title><rect x="885.7" y="707.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="888.7" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (67 samples, 0.06%)</title><rect x="885.7" y="691.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="888.7" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (67 samples, 0.06%)</title><rect x="885.7" y="675.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="888.7" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (43 samples, 0.04%)</title><rect x="886.5" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="889.5" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (43 samples, 0.04%)</title><rect x="886.5" y="755.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="889.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (391 samples, 0.38%)</title><rect x="887.0" y="787.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="890.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/108890628.run (212 samples, 0.20%)</title><rect x="887.0" y="771.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="890.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (212 samples, 0.20%)</title><rect x="887.0" y="755.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="890.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (212 samples, 0.20%)</title><rect x="887.0" y="739.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (212 samples, 0.20%)</title><rect x="887.0" y="723.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="890.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (212 samples, 0.20%)</title><rect x="887.0" y="707.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="890.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (212 samples, 0.20%)</title><rect x="887.0" y="691.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="890.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$238/1293482513.run (212 samples, 0.20%)</title><rect x="887.0" y="675.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="890.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (212 samples, 0.20%)</title><rect x="887.0" y="659.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (210 samples, 0.20%)</title><rect x="887.0" y="643.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="890.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (210 samples, 0.20%)</title><rect x="887.0" y="627.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (146 samples, 0.14%)</title><rect x="887.0" y="611.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="890.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (146 samples, 0.14%)</title><rect x="887.0" y="595.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (146 samples, 0.14%)</title><rect x="887.0" y="579.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="890.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/532087022.linkToTargetMethod (101 samples, 0.10%)</title><rect x="887.0" y="563.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1403704789.invoke (101 samples, 0.10%)</title><rect x="887.0" y="547.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (101 samples, 0.10%)</title><rect x="887.0" y="531.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (101 samples, 0.10%)</title><rect x="887.0" y="515.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="890.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (101 samples, 0.10%)</title><rect x="887.0" y="499.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.0" y="510.0"></text>
</g>
<g>
<title>byte[] (101 samples, 0.10%)</title><rect x="887.0" y="483.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="890.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (45 samples, 0.04%)</title><rect x="888.1" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="891.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (45 samples, 0.04%)</title><rect x="888.1" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="891.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 0.04%)</title><rect x="888.1" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="891.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$328/562141945.get$Lambda (45 samples, 0.04%)</title><rect x="888.1" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="891.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$328 (45 samples, 0.04%)</title><rect x="888.1" y="499.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="891.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (64 samples, 0.06%)</title><rect x="888.6" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="891.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (64 samples, 0.06%)</title><rect x="888.6" y="595.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="891.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (64 samples, 0.06%)</title><rect x="888.6" y="579.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="891.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (64 samples, 0.06%)</title><rect x="888.6" y="563.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="891.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (64 samples, 0.06%)</title><rect x="888.6" y="547.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="891.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (64 samples, 0.06%)</title><rect x="888.6" y="531.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (64 samples, 0.06%)</title><rect x="888.6" y="515.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="891.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$246/1261412757.run (179 samples, 0.17%)</title><rect x="889.4" y="771.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="892.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (179 samples, 0.17%)</title><rect x="889.4" y="755.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="892.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (96 samples, 0.09%)</title><rect x="889.4" y="739.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="892.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (96 samples, 0.09%)</title><rect x="889.4" y="723.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="892.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$324/1583117545.get$Lambda (96 samples, 0.09%)</title><rect x="889.4" y="707.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="892.4" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$324 (96 samples, 0.09%)</title><rect x="889.4" y="691.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="892.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (83 samples, 0.08%)</title><rect x="890.5" y="739.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="893.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (83 samples, 0.08%)</title><rect x="890.5" y="723.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="893.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (83 samples, 0.08%)</title><rect x="890.5" y="707.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="893.5" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (82 samples, 0.08%)</title><rect x="890.5" y="691.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="893.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (355 samples, 0.34%)</title><rect x="891.4" y="787.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.4" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (84 samples, 0.08%)</title><rect x="891.4" y="771.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="894.4" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (84 samples, 0.08%)</title><rect x="891.4" y="755.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.4" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (84 samples, 0.08%)</title><rect x="891.4" y="739.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.4" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (84 samples, 0.08%)</title><rect x="891.4" y="723.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.4" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (84 samples, 0.08%)</title><rect x="891.4" y="707.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="894.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (271 samples, 0.26%)</title><rect x="892.4" y="771.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="895.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.05%)</title><rect x="892.4" y="755.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="895.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.05%)</title><rect x="892.4" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="895.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$387/1694286803.get$Lambda (52 samples, 0.05%)</title><rect x="892.4" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="895.4" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$387 (52 samples, 0.05%)</title><rect x="892.4" y="707.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="895.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (219 samples, 0.21%)</title><rect x="893.0" y="755.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.0" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (107 samples, 0.10%)</title><rect x="893.0" y="739.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="896.0" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (112 samples, 0.11%)</title><rect x="894.2" y="739.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="897.2" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (112 samples, 0.11%)</title><rect x="894.2" y="723.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.2" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (112 samples, 0.11%)</title><rect x="894.2" y="707.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="897.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (389 samples, 0.37%)</title><rect x="895.5" y="787.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.02%)</title><rect x="895.5" y="771.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.02%)</title><rect x="895.5" y="755.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$314/437596836.get$Lambda (25 samples, 0.02%)</title><rect x="895.5" y="739.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.5" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$314 (25 samples, 0.02%)</title><rect x="895.5" y="723.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="898.5" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (213 samples, 0.20%)</title><rect x="895.7" y="771.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="898.7" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (92 samples, 0.09%)</title><rect x="895.7" y="755.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.7" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (92 samples, 0.09%)</title><rect x="895.7" y="739.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="898.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (121 samples, 0.12%)</title><rect x="896.8" y="755.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.8" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (121 samples, 0.12%)</title><rect x="896.8" y="739.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="899.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (151 samples, 0.15%)</title><rect x="898.2" y="771.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.2" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (151 samples, 0.15%)</title><rect x="898.2" y="755.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="901.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (118 samples, 0.11%)</title><rect x="899.9" y="787.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="902.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (118 samples, 0.11%)</title><rect x="899.9" y="771.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="902.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (118 samples, 0.11%)</title><rect x="899.9" y="755.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="902.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (118 samples, 0.11%)</title><rect x="899.9" y="739.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.9" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (43 samples, 0.04%)</title><rect x="899.9" y="723.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="902.9" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (43 samples, 0.04%)</title><rect x="899.9" y="707.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="902.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (75 samples, 0.07%)</title><rect x="900.4" y="723.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="903.4" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (75 samples, 0.07%)</title><rect x="900.4" y="707.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="903.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (75 samples, 0.07%)</title><rect x="900.4" y="691.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (75 samples, 0.07%)</title><rect x="900.4" y="675.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="903.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (75 samples, 0.07%)</title><rect x="900.4" y="659.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="903.4" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (75 samples, 0.07%)</title><rect x="900.4" y="643.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="903.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (41 samples, 0.04%)</title><rect x="901.2" y="787.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="904.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (41 samples, 0.04%)</title><rect x="901.2" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="904.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (41 samples, 0.04%)</title><rect x="901.2" y="755.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="904.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (41 samples, 0.04%)</title><rect x="901.2" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="904.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (35 samples, 0.03%)</title><rect x="901.2" y="723.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.2" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (35 samples, 0.03%)</title><rect x="901.2" y="707.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="904.2" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (44 samples, 0.04%)</title><rect x="901.7" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="904.7" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (44 samples, 0.04%)</title><rect x="901.7" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.7" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (44 samples, 0.04%)</title><rect x="901.7" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="904.7" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (44 samples, 0.04%)</title><rect x="901.7" y="739.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="904.7" y="750.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (145 samples, 0.14%)</title><rect x="902.2" y="803.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.2" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (36 samples, 0.03%)</title><rect x="902.2" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="905.2" y="798.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (36 samples, 0.03%)</title><rect x="902.2" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="905.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (36 samples, 0.03%)</title><rect x="902.2" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="905.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (36 samples, 0.03%)</title><rect x="902.2" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (35 samples, 0.03%)</title><rect x="902.2" y="723.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.2" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock (34 samples, 0.03%)</title><rect x="902.2" y="707.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="905.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.createSession (108 samples, 0.10%)</title><rect x="902.6" y="787.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="905.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.createSession (108 samples, 0.10%)</title><rect x="902.6" y="771.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/StreamSession.&lt;init&gt; (107 samples, 0.10%)</title><rect x="902.6" y="755.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="905.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (107 samples, 0.10%)</title><rect x="902.6" y="739.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.6" y="750.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.03%)</title><rect x="902.6" y="723.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="905.6" y="734.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.07%)</title><rect x="903.0" y="723.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="906.0" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (25,219 samples, 24.25%)</title><rect x="903.8" y="803.0" width="286.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.8" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (2,931 samples, 2.82%)</title><rect x="903.8" y="787.0" width="33.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.8" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1,597 samples, 1.54%)</title><rect x="903.8" y="771.0" width="18.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="906.8" y="782.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (407 samples, 0.39%)</title><rect x="903.8" y="755.0" width="4.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="906.8" y="766.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (441 samples, 0.42%)</title><rect x="908.4" y="755.0" width="5.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="911.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (749 samples, 0.72%)</title><rect x="913.4" y="755.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="916.4" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (749 samples, 0.72%)</title><rect x="913.4" y="739.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="916.4" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (749 samples, 0.72%)</title><rect x="913.4" y="723.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="916.4" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (749 samples, 0.72%)</title><rect x="913.4" y="707.0" width="8.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="916.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1,331 samples, 1.28%)</title><rect x="922.0" y="771.0" width="15.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,331 samples, 1.28%)</title><rect x="922.0" y="755.0" width="15.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="925.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (1,331 samples, 1.28%)</title><rect x="922.0" y="739.0" width="15.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="925.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1,328 samples, 1.28%)</title><rect x="922.0" y="723.0" width="15.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="925.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (732 samples, 0.70%)</title><rect x="922.0" y="707.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="925.0" y="718.0"></text>
</g>
<g>
<title>java.lang.Integer (732 samples, 0.70%)</title><rect x="922.0" y="691.0" width="8.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="925.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (596 samples, 0.57%)</title><rect x="930.3" y="707.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.3" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (596 samples, 0.57%)</title><rect x="930.3" y="691.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="933.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (596 samples, 0.57%)</title><rect x="930.3" y="675.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="933.3" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (596 samples, 0.57%)</title><rect x="930.3" y="659.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="933.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (596 samples, 0.57%)</title><rect x="930.3" y="643.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.3" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (596 samples, 0.57%)</title><rect x="930.3" y="627.0" width="6.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="933.3" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (22,288 samples, 21.43%)</title><rect x="937.1" y="787.0" width="252.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="940.1" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (22,288 samples, 21.43%)</title><rect x="937.1" y="771.0" width="252.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="940.1" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (21,355 samples, 20.54%)</title><rect x="937.1" y="755.0" width="242.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="940.1" y="766.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,033 samples, 3.88%)</title><rect x="937.1" y="739.0" width="45.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="940.1" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,033 samples, 3.88%)</title><rect x="937.1" y="723.0" width="45.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="940.1" y="734.0">one/..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (3,001 samples, 2.89%)</title><rect x="937.1" y="707.0" width="34.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="940.1" y="718.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (889 samples, 0.85%)</title><rect x="937.1" y="691.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="940.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (889 samples, 0.85%)</title><rect x="937.1" y="675.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="940.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (889 samples, 0.85%)</title><rect x="937.1" y="659.0" width="10.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="940.1" y="670.0"></text>
</g>
<g>
<title>java.lang.String (453 samples, 0.44%)</title><rect x="937.1" y="643.0" width="5.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="940.1" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (436 samples, 0.42%)</title><rect x="942.2" y="643.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="945.2" y="654.0"></text>
</g>
<g>
<title>byte[] (436 samples, 0.42%)</title><rect x="942.2" y="627.0" width="5.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="945.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.entity (2,112 samples, 2.03%)</title><rect x="947.2" y="691.0" width="23.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="950.2" y="702.0">r..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/163417896.linkToTargetMethod (810 samples, 0.78%)</title><rect x="947.2" y="675.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="950.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1667875349.invokeStatic (810 samples, 0.78%)</title><rect x="947.2" y="659.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$112/1705978347.get$Lambda (810 samples, 0.78%)</title><rect x="947.2" y="643.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="950.2" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rubtsov.MyService$$Lambda$112 (810 samples, 0.78%)</title><rect x="947.2" y="627.0" width="9.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="950.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.executeAsync (855 samples, 0.82%)</title><rect x="956.4" y="675.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="959.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (419 samples, 0.40%)</title><rect x="956.4" y="659.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="959.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (419 samples, 0.40%)</title><rect x="956.4" y="643.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="959.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$115/356589445.get$Lambda (419 samples, 0.40%)</title><rect x="956.4" y="627.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="959.4" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rubtsov.MyService$$Lambda$115 (419 samples, 0.40%)</title><rect x="956.4" y="611.0" width="4.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="959.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (436 samples, 0.42%)</title><rect x="961.1" y="659.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="964.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (436 samples, 0.42%)</title><rect x="961.1" y="643.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="964.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (412 samples, 0.40%)</title><rect x="961.1" y="627.0" width="4.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="964.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (23 samples, 0.02%)</title><rect x="965.8" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="968.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (23 samples, 0.02%)</title><rect x="965.8" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (23 samples, 0.02%)</title><rect x="965.8" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="968.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (23 samples, 0.02%)</title><rect x="965.8" y="579.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="968.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.isProxied (447 samples, 0.43%)</title><rect x="966.1" y="675.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="969.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (447 samples, 0.43%)</title><rect x="966.1" y="659.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="969.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (447 samples, 0.43%)</title><rect x="966.1" y="643.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="969.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (447 samples, 0.43%)</title><rect x="966.1" y="627.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.1" y="638.0"></text>
</g>
<g>
<title>java.lang.String (217 samples, 0.21%)</title><rect x="966.1" y="611.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="969.1" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (230 samples, 0.22%)</title><rect x="968.5" y="611.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="971.5" y="622.0"></text>
</g>
<g>
<title>byte[] (230 samples, 0.22%)</title><rect x="968.5" y="595.0" width="2.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="971.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,032 samples, 0.99%)</title><rect x="971.1" y="707.0" width="11.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="974.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,032 samples, 0.99%)</title><rect x="971.1" y="691.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,032 samples, 0.99%)</title><rect x="971.1" y="675.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="974.1" y="686.0"></text>
</g>
<g>
<title>java.lang.String (462 samples, 0.44%)</title><rect x="971.1" y="659.0" width="5.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="974.1" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (570 samples, 0.55%)</title><rect x="976.4" y="659.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="979.4" y="670.0"></text>
</g>
<g>
<title>byte[] (570 samples, 0.55%)</title><rect x="976.4" y="643.0" width="6.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="979.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,478 samples, 4.31%)</title><rect x="982.8" y="739.0" width="50.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="985.8" y="750.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (686 samples, 0.66%)</title><rect x="982.8" y="723.0" width="7.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="985.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,460 samples, 1.40%)</title><rect x="990.6" y="723.0" width="16.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="993.6" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (1,450 samples, 1.39%)</title><rect x="990.6" y="707.0" width="16.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="993.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,332 samples, 2.24%)</title><rect x="1007.2" y="723.0" width="26.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1010.2" y="734.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,332 samples, 2.24%)</title><rect x="1007.2" y="707.0" width="26.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1010.2" y="718.0">o..</text>
</g>
<g>
<title>char[] (1,147 samples, 1.10%)</title><rect x="1007.2" y="691.0" width="13.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1010.2" y="702.0"></text>
</g>
<g>
<title>java.lang.String (446 samples, 0.43%)</title><rect x="1020.2" y="691.0" width="5.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1023.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (738 samples, 0.71%)</title><rect x="1025.3" y="691.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1028.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (738 samples, 0.71%)</title><rect x="1025.3" y="675.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1028.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (738 samples, 0.71%)</title><rect x="1025.3" y="659.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1028.3" y="670.0"></text>
</g>
<g>
<title>byte[] (738 samples, 0.71%)</title><rect x="1025.3" y="643.0" width="8.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1028.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (451 samples, 0.43%)</title><rect x="1033.7" y="739.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1036.7" y="750.0"></text>
</g>
<g>
<title>byte[] (451 samples, 0.43%)</title><rect x="1033.7" y="723.0" width="5.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1036.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (840 samples, 0.81%)</title><rect x="1038.8" y="739.0" width="9.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1041.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (840 samples, 0.81%)</title><rect x="1038.8" y="723.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1041.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (840 samples, 0.81%)</title><rect x="1038.8" y="707.0" width="9.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1041.8" y="718.0"></text>
</g>
<g>
<title>java.lang.String (432 samples, 0.42%)</title><rect x="1038.8" y="691.0" width="4.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1041.8" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (408 samples, 0.39%)</title><rect x="1043.7" y="691.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1046.7" y="702.0"></text>
</g>
<g>
<title>byte[] (408 samples, 0.39%)</title><rect x="1043.7" y="675.0" width="4.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1046.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11,553 samples, 11.11%)</title><rect x="1048.3" y="739.0" width="131.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1051.3" y="750.0">one/nio/util/Utf..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (11,553 samples, 11.11%)</title><rect x="1048.3" y="723.0" width="131.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1051.3" y="734.0">one/nio/util/Utf..</text>
</g>
<g>
<title>char[] (5,657 samples, 5.44%)</title><rect x="1048.3" y="707.0" width="64.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1051.3" y="718.0">char[]</text>
</g>
<g>
<title>java.lang.String (2,017 samples, 1.94%)</title><rect x="1112.7" y="707.0" width="22.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1115.7" y="718.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,864 samples, 3.72%)</title><rect x="1135.6" y="707.0" width="43.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1138.6" y="718.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,864 samples, 3.72%)</title><rect x="1135.6" y="691.0" width="43.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1138.6" y="702.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,864 samples, 3.72%)</title><rect x="1135.6" y="675.0" width="43.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1138.6" y="686.0">java..</text>
</g>
<g>
<title>byte[] (3,860 samples, 3.71%)</title><rect x="1135.6" y="659.0" width="43.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1138.6" y="670.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.read (933 samples, 0.90%)</title><rect x="1179.4" y="755.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1182.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (933 samples, 0.90%)</title><rect x="1179.4" y="739.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1182.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (897 samples, 0.86%)</title><rect x="1179.4" y="723.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1182.4" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (897 samples, 0.86%)</title><rect x="1179.4" y="707.0" width="10.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1182.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (34 samples, 0.03%)</title><rect x="1189.6" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1192.6" y="734.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (34 samples, 0.03%)</title><rect x="1189.6" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.6" y="718.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (34 samples, 0.03%)</title><rect x="1189.6" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1192.6" y="702.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (34 samples, 0.03%)</title><rect x="1189.6" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.6" y="686.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (34 samples, 0.03%)</title><rect x="1189.6" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.6" y="670.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (34 samples, 0.03%)</title><rect x="1189.6" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.6" y="654.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (34 samples, 0.03%)</title><rect x="1189.6" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.6" y="638.0"></text>
</g>
</g>
</svg>
