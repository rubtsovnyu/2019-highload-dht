<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (132,527 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (100,320 samples, 75.70%)</title><rect x="10.0" y="691.0" width="893.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (100,320 samples, 75.70%)</title><rect x="10.0" y="675.0" width="893.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (100,320 samples, 75.70%)</title><rect x="10.0" y="659.0" width="893.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (12,560 samples, 9.48%)</title><rect x="10.0" y="643.0" width="111.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12,423 samples, 9.37%)</title><rect x="10.0" y="627.0" width="110.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (12,423 samples, 9.37%)</title><rect x="10.0" y="611.0" width="110.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util/con..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (62 samples, 0.05%)</title><rect x="10.0" y="595.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$171/210725587.apply (12,361 samples, 9.33%)</title><rect x="10.6" y="595.0" width="110.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.6" y="606.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (12,361 samples, 9.33%)</title><rect x="10.6" y="579.0" width="110.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.6" y="590.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (12,361 samples, 9.33%)</title><rect x="10.6" y="563.0" width="110.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.6" y="574.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.04%)</title><rect x="10.6" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.04%)</title><rect x="10.6" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$307/724253840.get$Lambda (34 samples, 0.03%)</title><rect x="10.6" y="515.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$307 (34 samples, 0.03%)</title><rect x="10.6" y="499.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="13.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (137 samples, 0.10%)</title><rect x="11.0" y="547.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (137 samples, 0.10%)</title><rect x="11.0" y="531.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (78 samples, 0.06%)</title><rect x="11.0" y="515.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="14.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.04%)</title><rect x="11.7" y="515.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.04%)</title><rect x="11.7" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.04%)</title><rect x="11.7" y="483.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="14.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (271 samples, 0.20%)</title><rect x="12.2" y="547.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (271 samples, 0.20%)</title><rect x="12.2" y="531.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="15.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (128 samples, 0.10%)</title><rect x="12.2" y="515.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="15.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (143 samples, 0.11%)</title><rect x="13.4" y="515.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (143 samples, 0.11%)</title><rect x="13.4" y="499.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="16.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (143 samples, 0.11%)</title><rect x="13.4" y="483.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="16.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (11,645 samples, 8.79%)</title><rect x="14.6" y="547.0" width="103.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.6" y="558.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (11,645 samples, 8.79%)</title><rect x="14.6" y="531.0" width="103.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.6" y="542.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (11,645 samples, 8.79%)</title><rect x="14.6" y="515.0" width="103.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.6" y="526.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (115 samples, 0.09%)</title><rect x="14.6" y="499.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (115 samples, 0.09%)</title><rect x="14.6" y="483.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/1124124731.get$Lambda (31 samples, 0.02%)</title><rect x="14.6" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$200 (31 samples, 0.02%)</title><rect x="14.6" y="451.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="17.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$203/670130308.get$Lambda (43 samples, 0.03%)</title><rect x="14.9" y="467.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$203 (43 samples, 0.03%)</title><rect x="14.9" y="451.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="17.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$274/1438378433.get$Lambda (41 samples, 0.03%)</title><rect x="15.3" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$274 (41 samples, 0.03%)</title><rect x="15.3" y="451.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="18.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (7,246 samples, 5.47%)</title><rect x="15.7" y="499.0" width="64.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.7" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (7,246 samples, 5.47%)</title><rect x="15.7" y="483.0" width="64.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.7" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7,193 samples, 5.43%)</title><rect x="15.7" y="467.0" width="64.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.7" y="478.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$274/1438378433.apply (7,193 samples, 5.43%)</title><rect x="15.7" y="451.0" width="64.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.7" y="462.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (7,193 samples, 5.43%)</title><rect x="15.7" y="435.0" width="64.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.7" y="446.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (7,193 samples, 5.43%)</title><rect x="15.7" y="419.0" width="64.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.7" y="430.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$203/670130308.apply (7,193 samples, 5.43%)</title><rect x="15.7" y="403.0" width="64.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.7" y="414.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (7,193 samples, 5.43%)</title><rect x="15.7" y="387.0" width="64.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.7" y="398.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.04%)</title><rect x="15.7" y="371.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.04%)</title><rect x="15.7" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/2063345593.get$Lambda (53 samples, 0.04%)</title><rect x="15.7" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$304 (53 samples, 0.04%)</title><rect x="15.7" y="323.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="18.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (135 samples, 0.10%)</title><rect x="16.1" y="371.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (135 samples, 0.10%)</title><rect x="16.1" y="355.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (74 samples, 0.06%)</title><rect x="16.1" y="339.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="19.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.04%)</title><rect x="16.9" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.04%)</title><rect x="16.9" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (53 samples, 0.04%)</title><rect x="16.9" y="307.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="19.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (129 samples, 0.10%)</title><rect x="17.3" y="371.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (129 samples, 0.10%)</title><rect x="17.3" y="355.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (62 samples, 0.05%)</title><rect x="17.3" y="339.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="20.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.05%)</title><rect x="17.9" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.05%)</title><rect x="17.9" y="323.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.05%)</title><rect x="17.9" y="307.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="20.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (6,876 samples, 5.19%)</title><rect x="18.5" y="371.0" width="61.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.5" y="382.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.04%)</title><rect x="18.5" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.04%)</title><rect x="18.5" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$302/526109933.get$Lambda (31 samples, 0.02%)</title><rect x="18.7" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$302 (31 samples, 0.02%)</title><rect x="18.7" y="307.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="21.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5,816 samples, 4.39%)</title><rect x="19.0" y="355.0" width="51.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.0" y="366.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5,816 samples, 4.39%)</title><rect x="19.0" y="339.0" width="51.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.0" y="350.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (63 samples, 0.05%)</title><rect x="19.0" y="323.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="22.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$298/1779330839.apply (5,639 samples, 4.25%)</title><rect x="19.5" y="323.0" width="50.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.5" y="334.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (5,639 samples, 4.25%)</title><rect x="19.5" y="307.0" width="50.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.5" y="318.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.02%)</title><rect x="19.5" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.02%)</title><rect x="19.5" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$323/1389601670.get$Lambda (30 samples, 0.02%)</title><rect x="19.5" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$323 (30 samples, 0.02%)</title><rect x="19.5" y="243.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="22.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (120 samples, 0.09%)</title><rect x="19.8" y="291.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (120 samples, 0.09%)</title><rect x="19.8" y="275.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.8" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (69 samples, 0.05%)</title><rect x="19.8" y="259.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="22.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.04%)</title><rect x="20.4" y="259.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.04%)</title><rect x="20.4" y="243.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.04%)</title><rect x="20.4" y="227.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="23.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.04%)</title><rect x="20.9" y="291.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="23.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (105 samples, 0.08%)</title><rect x="21.3" y="291.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (53 samples, 0.04%)</title><rect x="21.3" y="275.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="24.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (52 samples, 0.04%)</title><rect x="21.8" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (49 samples, 0.04%)</title><rect x="21.8" y="259.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (49 samples, 0.04%)</title><rect x="21.8" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (49 samples, 0.04%)</title><rect x="21.8" y="227.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (49 samples, 0.04%)</title><rect x="21.8" y="211.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.8" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (49 samples, 0.04%)</title><rect x="21.8" y="195.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="24.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (120 samples, 0.09%)</title><rect x="22.2" y="291.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (120 samples, 0.09%)</title><rect x="22.2" y="275.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (29 samples, 0.02%)</title><rect x="22.2" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="25.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (29 samples, 0.02%)</title><rect x="22.2" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (29 samples, 0.02%)</title><rect x="22.2" y="227.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (29 samples, 0.02%)</title><rect x="22.2" y="211.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="25.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (91 samples, 0.07%)</title><rect x="22.5" y="259.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (91 samples, 0.07%)</title><rect x="22.5" y="243.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (59 samples, 0.04%)</title><rect x="22.5" y="227.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="25.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (32 samples, 0.02%)</title><rect x="23.0" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (32 samples, 0.02%)</title><rect x="23.0" y="211.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="26.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (5,214 samples, 3.93%)</title><rect x="23.3" y="291.0" width="46.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.3" y="302.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (54 samples, 0.04%)</title><rect x="23.3" y="275.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="26.3" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (479 samples, 0.36%)</title><rect x="23.8" y="275.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (479 samples, 0.36%)</title><rect x="23.8" y="259.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (479 samples, 0.36%)</title><rect x="23.8" y="243.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.8" y="254.0"></text>
</g>
<g>
<title>byte[] (479 samples, 0.36%)</title><rect x="23.8" y="227.0" width="4.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="26.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (159 samples, 0.12%)</title><rect x="28.0" y="275.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.0" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (159 samples, 0.12%)</title><rect x="28.0" y="259.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.0" y="270.0"></text>
</g>
<g>
<title>byte[] (159 samples, 0.12%)</title><rect x="28.0" y="243.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="31.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (482 samples, 0.36%)</title><rect x="29.5" y="275.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (482 samples, 0.36%)</title><rect x="29.5" y="259.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (482 samples, 0.36%)</title><rect x="29.5" y="243.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.5" y="254.0"></text>
</g>
<g>
<title>byte[] (482 samples, 0.36%)</title><rect x="29.5" y="227.0" width="4.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="32.5" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (77 samples, 0.06%)</title><rect x="33.8" y="275.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="36.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (77 samples, 0.06%)</title><rect x="33.8" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.8" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (77 samples, 0.06%)</title><rect x="33.8" y="243.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="36.8" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (48 samples, 0.04%)</title><rect x="34.4" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.4" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (48 samples, 0.04%)</title><rect x="34.4" y="259.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="37.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (3,334 samples, 2.52%)</title><rect x="34.9" y="275.0" width="29.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.9" y="286.0">jd..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (32 samples, 0.02%)</title><rect x="34.9" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.02%)</title><rect x="34.9" y="243.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.02%)</title><rect x="34.9" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.9" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$325/1191925351.get$Lambda (32 samples, 0.02%)</title><rect x="34.9" y="211.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.9" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$325 (32 samples, 0.02%)</title><rect x="34.9" y="195.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="37.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,608 samples, 1.21%)</title><rect x="35.2" y="259.0" width="14.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (807 samples, 0.61%)</title><rect x="35.2" y="243.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="38.2" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (807 samples, 0.61%)</title><rect x="35.2" y="227.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.2" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (807 samples, 0.61%)</title><rect x="35.2" y="211.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="38.2" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (807 samples, 0.61%)</title><rect x="35.2" y="195.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="38.2" y="206.0"></text>
</g>
<g>
<title>byte[] (807 samples, 0.61%)</title><rect x="35.2" y="179.0" width="7.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="38.2" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (119 samples, 0.09%)</title><rect x="42.3" y="243.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.3" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (119 samples, 0.09%)</title><rect x="42.3" y="227.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (119 samples, 0.09%)</title><rect x="42.3" y="211.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.3" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (119 samples, 0.09%)</title><rect x="42.3" y="195.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="45.3" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (123 samples, 0.09%)</title><rect x="43.4" y="243.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.4" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (58 samples, 0.04%)</title><rect x="43.4" y="227.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="46.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (65 samples, 0.05%)</title><rect x="43.9" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="46.9" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (65 samples, 0.05%)</title><rect x="43.9" y="211.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="46.9" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$325/1191925351.test (559 samples, 0.42%)</title><rect x="44.5" y="243.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.5" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (559 samples, 0.42%)</title><rect x="44.5" y="227.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1610702581.test (559 samples, 0.42%)</title><rect x="44.5" y="211.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (559 samples, 0.42%)</title><rect x="44.5" y="195.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.5" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$75/1212772528.test (559 samples, 0.42%)</title><rect x="44.5" y="179.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.5" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (559 samples, 0.42%)</title><rect x="44.5" y="163.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$74/896644936.test (559 samples, 0.42%)</title><rect x="44.5" y="147.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (559 samples, 0.42%)</title><rect x="44.5" y="131.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (559 samples, 0.42%)</title><rect x="44.5" y="115.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (559 samples, 0.42%)</title><rect x="44.5" y="99.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (303 samples, 0.23%)</title><rect x="44.5" y="83.0" width="2.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="47.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (256 samples, 0.19%)</title><rect x="47.2" y="83.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.2" y="94.0"></text>
</g>
<g>
<title>byte[] (256 samples, 0.19%)</title><rect x="47.2" y="67.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="50.2" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (1,694 samples, 1.28%)</title><rect x="49.5" y="259.0" width="15.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.5" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,694 samples, 1.28%)</title><rect x="49.5" y="243.0" width="15.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.5" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,694 samples, 1.28%)</title><rect x="49.5" y="227.0" width="15.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.5" y="238.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (38 samples, 0.03%)</title><rect x="49.5" y="211.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="52.5" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (47 samples, 0.04%)</title><rect x="49.8" y="211.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="52.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (79 samples, 0.06%)</title><rect x="50.2" y="211.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="53.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.04%)</title><rect x="51.2" y="211.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.04%)</title><rect x="51.2" y="195.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="54.2" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.get$Lambda (49 samples, 0.04%)</title><rect x="51.2" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.2" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$149 (49 samples, 0.04%)</title><rect x="51.2" y="163.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="54.2" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (65 samples, 0.05%)</title><rect x="51.6" y="211.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.6" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (65 samples, 0.05%)</title><rect x="51.6" y="195.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="54.6" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,309 samples, 0.99%)</title><rect x="52.2" y="211.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.2" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.accept (1,309 samples, 0.99%)</title><rect x="52.2" y="195.0" width="11.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="55.2" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,309 samples, 0.99%)</title><rect x="52.2" y="179.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (279 samples, 0.21%)</title><rect x="52.2" y="163.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (279 samples, 0.21%)</title><rect x="52.2" y="147.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.2" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.get$Lambda (279 samples, 0.21%)</title><rect x="52.2" y="131.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.2" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$157 (279 samples, 0.21%)</title><rect x="52.2" y="115.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="55.2" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (97 samples, 0.07%)</title><rect x="54.7" y="163.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.7" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.accept (97 samples, 0.07%)</title><rect x="54.7" y="147.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.7" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (97 samples, 0.07%)</title><rect x="54.7" y="131.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.7" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (97 samples, 0.07%)</title><rect x="54.7" y="115.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.7" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (97 samples, 0.07%)</title><rect x="54.7" y="99.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.7" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (97 samples, 0.07%)</title><rect x="54.7" y="83.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.7" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (97 samples, 0.07%)</title><rect x="54.7" y="67.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.7" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (97 samples, 0.07%)</title><rect x="54.7" y="51.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.7" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (97 samples, 0.07%)</title><rect x="54.7" y="35.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="57.7" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (516 samples, 0.39%)</title><rect x="55.5" y="163.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.5" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (516 samples, 0.39%)</title><rect x="55.5" y="147.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (262 samples, 0.20%)</title><rect x="55.5" y="131.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (262 samples, 0.20%)</title><rect x="55.5" y="115.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.5" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (262 samples, 0.20%)</title><rect x="55.5" y="99.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="58.5" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (254 samples, 0.19%)</title><rect x="57.9" y="131.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.9" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (254 samples, 0.19%)</title><rect x="57.9" y="115.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="60.9" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (417 samples, 0.31%)</title><rect x="60.1" y="163.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.1" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (417 samples, 0.31%)</title><rect x="60.1" y="147.0" width="3.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="63.1" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (81 samples, 0.06%)</title><rect x="63.8" y="211.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (81 samples, 0.06%)</title><rect x="63.8" y="195.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="66.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (137 samples, 0.10%)</title><rect x="64.6" y="275.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.6" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (33 samples, 0.02%)</title><rect x="64.6" y="259.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.6" y="270.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.02%)</title><rect x="64.6" y="243.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="67.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (104 samples, 0.08%)</title><rect x="64.8" y="259.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (104 samples, 0.08%)</title><rect x="64.8" y="243.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1089418272.invoke (104 samples, 0.08%)</title><rect x="64.8" y="227.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (104 samples, 0.08%)</title><rect x="64.8" y="211.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (38 samples, 0.03%)</title><rect x="64.8" y="195.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.8" y="206.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.03%)</title><rect x="64.8" y="179.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="67.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (66 samples, 0.05%)</title><rect x="65.2" y="195.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (66 samples, 0.05%)</title><rect x="65.2" y="179.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.2" y="190.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.05%)</title><rect x="65.2" y="163.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="68.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (122 samples, 0.09%)</title><rect x="65.8" y="275.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (122 samples, 0.09%)</title><rect x="65.8" y="259.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (122 samples, 0.09%)</title><rect x="65.8" y="243.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (122 samples, 0.09%)</title><rect x="65.8" y="227.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1089418272.invoke (122 samples, 0.09%)</title><rect x="65.8" y="211.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (122 samples, 0.09%)</title><rect x="65.8" y="195.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (44 samples, 0.03%)</title><rect x="65.8" y="179.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.03%)</title><rect x="65.8" y="163.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="68.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (78 samples, 0.06%)</title><rect x="66.2" y="179.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (78 samples, 0.06%)</title><rect x="66.2" y="163.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.2" y="174.0"></text>
</g>
<g>
<title>byte[] (78 samples, 0.06%)</title><rect x="66.2" y="147.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="69.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (322 samples, 0.24%)</title><rect x="66.9" y="275.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.9" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (96 samples, 0.07%)</title><rect x="66.9" y="259.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="69.9" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (83 samples, 0.06%)</title><rect x="67.7" y="259.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.7" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (83 samples, 0.06%)</title><rect x="67.7" y="243.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="70.7" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (143 samples, 0.11%)</title><rect x="68.5" y="259.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.5" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (143 samples, 0.11%)</title><rect x="68.5" y="243.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="71.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (114 samples, 0.09%)</title><rect x="69.7" y="323.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (114 samples, 0.09%)</title><rect x="69.7" y="307.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (114 samples, 0.09%)</title><rect x="69.7" y="291.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="72.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (182 samples, 0.14%)</title><rect x="70.7" y="355.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="73.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.04%)</title><rect x="72.4" y="355.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="75.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (769 samples, 0.58%)</title><rect x="72.9" y="355.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.03%)</title><rect x="72.9" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.03%)</title><rect x="72.9" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (90 samples, 0.07%)</title><rect x="73.2" y="339.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="76.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (65 samples, 0.05%)</title><rect x="74.0" y="339.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="77.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (89 samples, 0.07%)</title><rect x="74.6" y="339.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="77.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (200 samples, 0.15%)</title><rect x="75.4" y="339.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (200 samples, 0.15%)</title><rect x="75.4" y="323.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (200 samples, 0.15%)</title><rect x="75.4" y="307.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (200 samples, 0.15%)</title><rect x="75.4" y="291.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (200 samples, 0.15%)</title><rect x="75.4" y="275.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (200 samples, 0.15%)</title><rect x="75.4" y="259.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$259/1643973216.run (200 samples, 0.15%)</title><rect x="75.4" y="243.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (200 samples, 0.15%)</title><rect x="75.4" y="227.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (200 samples, 0.15%)</title><rect x="75.4" y="211.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (65 samples, 0.05%)</title><rect x="75.4" y="195.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (65 samples, 0.05%)</title><rect x="75.4" y="179.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$286/690219596.get$Lambda (41 samples, 0.03%)</title><rect x="75.6" y="163.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.6" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$286 (41 samples, 0.03%)</title><rect x="75.6" y="147.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="78.6" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (55 samples, 0.04%)</title><rect x="76.0" y="195.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="79.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (80 samples, 0.06%)</title><rect x="76.5" y="195.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (80 samples, 0.06%)</title><rect x="76.5" y="179.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.5" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (34 samples, 0.03%)</title><rect x="76.5" y="163.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="79.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (46 samples, 0.03%)</title><rect x="76.8" y="163.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.8" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (46 samples, 0.03%)</title><rect x="76.8" y="147.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="79.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (207 samples, 0.16%)</title><rect x="77.2" y="339.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.2" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (44 samples, 0.03%)</title><rect x="77.2" y="323.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="80.2" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (98 samples, 0.07%)</title><rect x="77.6" y="323.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="80.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (65 samples, 0.05%)</title><rect x="78.5" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.5" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (65 samples, 0.05%)</title><rect x="78.5" y="307.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.5" y="318.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.05%)</title><rect x="78.5" y="291.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="81.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (75 samples, 0.06%)</title><rect x="79.0" y="339.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (75 samples, 0.06%)</title><rect x="79.0" y="323.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="82.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.04%)</title><rect x="79.7" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.04%)</title><rect x="79.7" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (53 samples, 0.04%)</title><rect x="79.7" y="435.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="82.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (113 samples, 0.09%)</title><rect x="80.2" y="499.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (113 samples, 0.09%)</title><rect x="80.2" y="483.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (49 samples, 0.04%)</title><rect x="80.2" y="467.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="83.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.05%)</title><rect x="80.6" y="467.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.05%)</title><rect x="80.6" y="451.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.05%)</title><rect x="80.6" y="435.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="83.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (4,171 samples, 3.15%)</title><rect x="81.2" y="499.0" width="37.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.2" y="510.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (72 samples, 0.05%)</title><rect x="81.2" y="483.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (72 samples, 0.05%)</title><rect x="81.2" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$271/74074948.get$Lambda (42 samples, 0.03%)</title><rect x="81.2" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$271 (42 samples, 0.03%)</title><rect x="81.2" y="435.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="84.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$273/1434040749.get$Lambda (30 samples, 0.02%)</title><rect x="81.6" y="451.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$273 (30 samples, 0.02%)</title><rect x="81.6" y="435.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="84.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (123 samples, 0.09%)</title><rect x="81.8" y="483.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (123 samples, 0.09%)</title><rect x="81.8" y="467.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$273/1434040749.apply (66 samples, 0.05%)</title><rect x="81.8" y="451.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (66 samples, 0.05%)</title><rect x="81.8" y="435.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (66 samples, 0.05%)</title><rect x="81.8" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (66 samples, 0.05%)</title><rect x="81.8" y="403.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="84.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.04%)</title><rect x="82.4" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.04%)</title><rect x="82.4" y="435.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.04%)</title><rect x="82.4" y="419.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="85.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (72 samples, 0.05%)</title><rect x="82.9" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (72 samples, 0.05%)</title><rect x="82.9" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (72 samples, 0.05%)</title><rect x="82.9" y="451.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (72 samples, 0.05%)</title><rect x="82.9" y="435.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (72 samples, 0.05%)</title><rect x="82.9" y="419.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="85.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (3,904 samples, 2.95%)</title><rect x="83.6" y="483.0" width="34.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.6" y="494.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.04%)</title><rect x="83.6" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.04%)</title><rect x="83.6" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$215/923038470.get$Lambda (51 samples, 0.04%)</title><rect x="83.6" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$215 (51 samples, 0.04%)</title><rect x="83.6" y="419.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="86.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3,615 samples, 2.73%)</title><rect x="84.0" y="467.0" width="32.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.0" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3,615 samples, 2.73%)</title><rect x="84.0" y="451.0" width="32.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.0" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,544 samples, 2.67%)</title><rect x="84.0" y="435.0" width="31.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.0" y="446.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$215/923038470.apply (3,544 samples, 2.67%)</title><rect x="84.0" y="419.0" width="31.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.0" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (3,544 samples, 2.67%)</title><rect x="84.0" y="403.0" width="31.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.0" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (3,544 samples, 2.67%)</title><rect x="84.0" y="387.0" width="31.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.0" y="398.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.03%)</title><rect x="84.0" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.03%)</title><rect x="84.0" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$264/1092418694.get$Lambda (37 samples, 0.03%)</title><rect x="84.0" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$264 (37 samples, 0.03%)</title><rect x="84.0" y="323.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="87.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1,424 samples, 1.07%)</title><rect x="84.3" y="371.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,424 samples, 1.07%)</title><rect x="84.3" y="355.0" width="12.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1,424 samples, 1.07%)</title><rect x="84.3" y="339.0" width="12.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$264/1092418694.apply (1,347 samples, 1.02%)</title><rect x="84.3" y="323.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (1,347 samples, 1.02%)</title><rect x="84.3" y="307.0" width="12.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (1,347 samples, 1.02%)</title><rect x="84.3" y="291.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (1,347 samples, 1.02%)</title><rect x="84.3" y="275.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (851 samples, 0.64%)</title><rect x="84.3" y="259.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.3" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (252 samples, 0.19%)</title><rect x="84.3" y="243.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.3" y="254.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.03%)</title><rect x="84.3" y="227.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="87.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (102 samples, 0.08%)</title><rect x="84.7" y="227.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.7" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (102 samples, 0.08%)</title><rect x="84.7" y="211.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.7" y="222.0"></text>
</g>
<g>
<title>byte[] (102 samples, 0.08%)</title><rect x="84.7" y="195.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="87.7" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (109 samples, 0.08%)</title><rect x="85.6" y="227.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.6" y="238.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.08%)</title><rect x="85.6" y="211.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="88.6" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (41 samples, 0.03%)</title><rect x="86.6" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.6" y="254.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (41 samples, 0.03%)</title><rect x="86.6" y="227.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="89.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (361 samples, 0.27%)</title><rect x="87.0" y="243.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (303 samples, 0.23%)</title><rect x="87.0" y="227.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (303 samples, 0.23%)</title><rect x="87.0" y="211.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1995250556.linkToTargetMethod (222 samples, 0.17%)</title><rect x="87.0" y="195.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (222 samples, 0.17%)</title><rect x="87.0" y="179.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/961160488.get$Lambda (222 samples, 0.17%)</title><rect x="87.0" y="163.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.0" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$70 (222 samples, 0.17%)</title><rect x="87.0" y="147.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="90.0" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (81 samples, 0.06%)</title><rect x="88.9" y="195.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/961160488.run (81 samples, 0.06%)</title><rect x="88.9" y="179.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (81 samples, 0.06%)</title><rect x="88.9" y="163.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.9" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (81 samples, 0.06%)</title><rect x="88.9" y="147.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.9" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (81 samples, 0.06%)</title><rect x="88.9" y="131.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.9" y="142.0"></text>
</g>
<g>
<title>java.lang.Integer (81 samples, 0.06%)</title><rect x="88.9" y="115.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="91.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (58 samples, 0.04%)</title><rect x="89.7" y="227.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="92.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (58 samples, 0.04%)</title><rect x="89.7" y="211.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.7" y="222.0"></text>
</g>
<g>
<title>int[] (58 samples, 0.04%)</title><rect x="89.7" y="195.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="92.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (197 samples, 0.15%)</title><rect x="90.2" y="243.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.2" y="254.0"></text>
</g>
<g>
<title>byte[] (115 samples, 0.09%)</title><rect x="90.2" y="227.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="93.2" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (82 samples, 0.06%)</title><rect x="91.2" y="227.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.2" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (82 samples, 0.06%)</title><rect x="91.2" y="211.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="94.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (82 samples, 0.06%)</title><rect x="91.2" y="195.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="94.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (496 samples, 0.37%)</title><rect x="91.9" y="259.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.9" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (136 samples, 0.10%)</title><rect x="91.9" y="243.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="94.9" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (134 samples, 0.10%)</title><rect x="93.1" y="243.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.1" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (134 samples, 0.10%)</title><rect x="93.1" y="227.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="96.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (226 samples, 0.17%)</title><rect x="94.3" y="243.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.3" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (226 samples, 0.17%)</title><rect x="94.3" y="227.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="97.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (77 samples, 0.06%)</title><rect x="96.3" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (77 samples, 0.06%)</title><rect x="96.3" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="99.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (77 samples, 0.06%)</title><rect x="96.3" y="291.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="99.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (2,083 samples, 1.57%)</title><rect x="97.0" y="371.0" width="18.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (168 samples, 0.13%)</title><rect x="97.0" y="355.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="100.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,858 samples, 1.40%)</title><rect x="98.5" y="355.0" width="16.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.5" y="366.0"></text>
</g>
<g>
<title>java.lang.Object (41 samples, 0.03%)</title><rect x="98.5" y="339.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="101.5" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList (57 samples, 0.04%)</title><rect x="98.9" y="339.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="101.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (37 samples, 0.03%)</title><rect x="99.4" y="339.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="102.4" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (95 samples, 0.07%)</title><rect x="99.7" y="339.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (95 samples, 0.07%)</title><rect x="99.7" y="323.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="102.7" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (95 samples, 0.07%)</title><rect x="99.7" y="307.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="102.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (38 samples, 0.03%)</title><rect x="100.6" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="103.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (38 samples, 0.03%)</title><rect x="100.6" y="323.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="103.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (126 samples, 0.10%)</title><rect x="100.9" y="339.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="103.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (90 samples, 0.07%)</title><rect x="102.0" y="339.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="105.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (105 samples, 0.08%)</title><rect x="102.8" y="339.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="105.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (112 samples, 0.08%)</title><rect x="103.8" y="339.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="106.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (536 samples, 0.40%)</title><rect x="104.8" y="339.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="107.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (48 samples, 0.04%)</title><rect x="104.8" y="323.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="107.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (52 samples, 0.04%)</title><rect x="105.4" y="323.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="108.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (39 samples, 0.03%)</title><rect x="105.9" y="323.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="108.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (36 samples, 0.03%)</title><rect x="106.4" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (36 samples, 0.03%)</title><rect x="106.4" y="307.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="109.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (46 samples, 0.03%)</title><rect x="106.8" y="323.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="109.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.04%)</title><rect x="107.2" y="323.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="110.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (214 samples, 0.16%)</title><rect x="107.6" y="323.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (38 samples, 0.03%)</title><rect x="107.6" y="307.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="110.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (61 samples, 0.05%)</title><rect x="108.0" y="307.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="111.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (87 samples, 0.07%)</title><rect x="108.8" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.8" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (29 samples, 0.02%)</title><rect x="108.8" y="291.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="111.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (31 samples, 0.02%)</title><rect x="109.0" y="291.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="112.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (352 samples, 0.27%)</title><rect x="109.5" y="339.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (32 samples, 0.02%)</title><rect x="110.0" y="323.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="113.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (62 samples, 0.05%)</title><rect x="110.3" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="113.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (62 samples, 0.05%)</title><rect x="110.3" y="307.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="113.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (205 samples, 0.15%)</title><rect x="110.8" y="323.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (33 samples, 0.02%)</title><rect x="110.8" y="307.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="113.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (58 samples, 0.04%)</title><rect x="111.1" y="307.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="114.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (87 samples, 0.07%)</title><rect x="111.9" y="307.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (34 samples, 0.03%)</title><rect x="112.1" y="291.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="115.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (96 samples, 0.07%)</title><rect x="112.7" y="339.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (96 samples, 0.07%)</title><rect x="112.7" y="323.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (47 samples, 0.04%)</title><rect x="112.7" y="307.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="115.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (49 samples, 0.04%)</title><rect x="113.1" y="307.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.1" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (49 samples, 0.04%)</title><rect x="113.1" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="116.1" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (49 samples, 0.04%)</title><rect x="113.1" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (49 samples, 0.04%)</title><rect x="113.1" y="259.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.1" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (49 samples, 0.04%)</title><rect x="113.1" y="243.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="116.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (173 samples, 0.13%)</title><rect x="113.5" y="339.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1995250556.linkToTargetMethod (47 samples, 0.04%)</title><rect x="113.5" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.04%)</title><rect x="113.5" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$220/1680543885.get$Lambda (47 samples, 0.04%)</title><rect x="113.5" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$220 (47 samples, 0.04%)</title><rect x="113.5" y="275.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="116.5" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (126 samples, 0.10%)</title><rect x="113.9" y="323.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$220/1680543885.run (126 samples, 0.10%)</title><rect x="113.9" y="307.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (126 samples, 0.10%)</title><rect x="113.9" y="291.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.9" y="302.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (106 samples, 0.08%)</title><rect x="114.1" y="275.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.1" y="286.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (50 samples, 0.04%)</title><rect x="114.1" y="259.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="117.1" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (56 samples, 0.04%)</title><rect x="114.6" y="259.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.6" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (56 samples, 0.04%)</title><rect x="114.6" y="243.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.6" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (56 samples, 0.04%)</title><rect x="114.6" y="227.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.6" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (56 samples, 0.04%)</title><rect x="114.6" y="211.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.6" y="222.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (56 samples, 0.04%)</title><rect x="114.6" y="195.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="117.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (57 samples, 0.04%)</title><rect x="115.1" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.04%)</title><rect x="115.1" y="339.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="118.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (71 samples, 0.05%)</title><rect x="115.6" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (71 samples, 0.05%)</title><rect x="115.6" y="419.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (71 samples, 0.05%)</title><rect x="115.6" y="403.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="118.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (66 samples, 0.05%)</title><rect x="116.2" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (66 samples, 0.05%)</title><rect x="116.2" y="451.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (66 samples, 0.05%)</title><rect x="116.2" y="435.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (66 samples, 0.05%)</title><rect x="116.2" y="419.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (66 samples, 0.05%)</title><rect x="116.2" y="403.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="119.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (172 samples, 0.13%)</title><rect x="116.8" y="467.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (112 samples, 0.08%)</title><rect x="116.8" y="451.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="119.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (112 samples, 0.08%)</title><rect x="116.8" y="435.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1024252201.linkToTargetMethod (112 samples, 0.08%)</title><rect x="116.8" y="419.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/231089404.invoke (112 samples, 0.08%)</title><rect x="116.8" y="403.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="119.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1167267625.invoke (112 samples, 0.08%)</title><rect x="116.8" y="387.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (112 samples, 0.08%)</title><rect x="116.8" y="371.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (39 samples, 0.03%)</title><rect x="116.8" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="119.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.03%)</title><rect x="116.8" y="339.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="119.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (73 samples, 0.06%)</title><rect x="117.1" y="355.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (73 samples, 0.06%)</title><rect x="117.1" y="339.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.1" y="350.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.06%)</title><rect x="117.1" y="323.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="120.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (60 samples, 0.05%)</title><rect x="117.8" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (60 samples, 0.05%)</title><rect x="117.8" y="435.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="120.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (77 samples, 0.06%)</title><rect x="118.3" y="547.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (77 samples, 0.06%)</title><rect x="118.3" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="121.3" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (77 samples, 0.06%)</title><rect x="118.3" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.3" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (77 samples, 0.06%)</title><rect x="118.3" y="499.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="121.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (180 samples, 0.14%)</title><rect x="119.0" y="547.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (91 samples, 0.07%)</title><rect x="119.0" y="531.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="122.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (89 samples, 0.07%)</title><rect x="119.8" y="531.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (89 samples, 0.07%)</title><rect x="119.8" y="515.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.8" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.now (42 samples, 0.03%)</title><rect x="119.8" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.8" y="510.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (42 samples, 0.03%)</title><rect x="119.8" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="122.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (42 samples, 0.03%)</title><rect x="119.8" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.create (42 samples, 0.03%)</title><rect x="119.8" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.8" y="462.0"></text>
</g>
<g>
<title>java.time.Instant (42 samples, 0.03%)</title><rect x="119.8" y="435.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="122.8" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (47 samples, 0.04%)</title><rect x="120.2" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.2" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (47 samples, 0.04%)</title><rect x="120.2" y="483.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (47 samples, 0.04%)</title><rect x="120.2" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="123.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (47 samples, 0.04%)</title><rect x="120.2" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.2" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (47 samples, 0.04%)</title><rect x="120.2" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.2" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (47 samples, 0.04%)</title><rect x="120.2" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.2" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (47 samples, 0.04%)</title><rect x="120.2" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.2" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (47 samples, 0.04%)</title><rect x="120.2" y="387.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.2" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (47 samples, 0.04%)</title><rect x="120.2" y="371.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="123.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$407/608496021.get (137 samples, 0.10%)</title><rect x="120.6" y="627.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="123.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$get$3 (137 samples, 0.10%)</title><rect x="120.6" y="611.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="123.6" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (51 samples, 0.04%)</title><rect x="120.6" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.6" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (51 samples, 0.04%)</title><rect x="120.6" y="579.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.6" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (51 samples, 0.04%)</title><rect x="120.6" y="563.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (51 samples, 0.04%)</title><rect x="120.6" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (51 samples, 0.04%)</title><rect x="120.6" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="123.6" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (51 samples, 0.04%)</title><rect x="120.6" y="515.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="123.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ValueUtils.from (86 samples, 0.06%)</title><rect x="121.1" y="595.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/Value.present (86 samples, 0.06%)</title><rect x="121.1" y="579.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.1" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (44 samples, 0.03%)</title><rect x="121.1" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.1" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (44 samples, 0.03%)</title><rect x="121.1" y="547.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="124.1" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rubtsov.Value (42 samples, 0.03%)</title><rect x="121.5" y="563.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="124.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,611 samples, 2.72%)</title><rect x="121.8" y="643.0" width="32.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.8" y="654.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3,611 samples, 2.72%)</title><rect x="121.8" y="627.0" width="32.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.8" y="638.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3,522 samples, 2.66%)</title><rect x="121.8" y="611.0" width="31.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="124.8" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3,522 samples, 2.66%)</title><rect x="121.8" y="595.0" width="31.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.8" y="606.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3,522 samples, 2.66%)</title><rect x="121.8" y="579.0" width="31.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="124.8" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (89 samples, 0.07%)</title><rect x="153.2" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="156.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (89 samples, 0.07%)</title><rect x="153.2" y="595.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (89 samples, 0.07%)</title><rect x="153.2" y="579.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (89 samples, 0.07%)</title><rect x="153.2" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (89 samples, 0.07%)</title><rect x="153.2" y="547.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="156.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$324/1583117545.run (1,107 samples, 0.84%)</title><rect x="154.0" y="643.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,107 samples, 0.84%)</title><rect x="154.0" y="627.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,107 samples, 0.84%)</title><rect x="154.0" y="611.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="157.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,107 samples, 0.84%)</title><rect x="154.0" y="595.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,107 samples, 0.84%)</title><rect x="154.0" y="579.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="157.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,107 samples, 0.84%)</title><rect x="154.0" y="563.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,107 samples, 0.84%)</title><rect x="154.0" y="547.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,107 samples, 0.84%)</title><rect x="154.0" y="531.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,107 samples, 0.84%)</title><rect x="154.0" y="515.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,107 samples, 0.84%)</title><rect x="154.0" y="499.0" width="9.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,107 samples, 0.84%)</title><rect x="154.0" y="483.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1,011 samples, 0.76%)</title><rect x="154.0" y="467.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (68 samples, 0.05%)</title><rect x="154.0" y="451.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (68 samples, 0.05%)</title><rect x="154.0" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$329/64629268.get$Lambda (33 samples, 0.02%)</title><rect x="154.0" y="419.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$329 (33 samples, 0.02%)</title><rect x="154.0" y="403.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="157.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$341/84272617.get$Lambda (35 samples, 0.03%)</title><rect x="154.3" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$341 (35 samples, 0.03%)</title><rect x="154.3" y="403.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="157.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (943 samples, 0.71%)</title><rect x="154.6" y="451.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (97 samples, 0.07%)</title><rect x="154.6" y="435.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="157.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (846 samples, 0.64%)</title><rect x="155.5" y="435.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (846 samples, 0.64%)</title><rect x="155.5" y="419.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (846 samples, 0.64%)</title><rect x="155.5" y="403.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="158.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (310 samples, 0.23%)</title><rect x="155.5" y="387.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.5" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (99 samples, 0.07%)</title><rect x="155.5" y="371.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="158.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$334/1364128704.apply (211 samples, 0.16%)</title><rect x="156.3" y="371.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (211 samples, 0.16%)</title><rect x="156.3" y="355.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="159.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (211 samples, 0.16%)</title><rect x="156.3" y="339.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.3" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (48 samples, 0.04%)</title><rect x="156.3" y="323.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="159.3" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (48 samples, 0.04%)</title><rect x="156.3" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.3" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (48 samples, 0.04%)</title><rect x="156.3" y="291.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="159.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (163 samples, 0.12%)</title><rect x="156.8" y="323.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.03%)</title><rect x="156.8" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.03%)</title><rect x="156.8" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$342/1623830039.get$Lambda (34 samples, 0.03%)</title><rect x="156.8" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="159.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$342 (34 samples, 0.03%)</title><rect x="156.8" y="259.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="159.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (129 samples, 0.10%)</title><rect x="157.1" y="307.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (129 samples, 0.10%)</title><rect x="157.1" y="291.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (65 samples, 0.05%)</title><rect x="157.1" y="275.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="160.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.05%)</title><rect x="157.6" y="275.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.05%)</title><rect x="157.6" y="259.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.05%)</title><rect x="157.6" y="243.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="160.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (536 samples, 0.40%)</title><rect x="158.2" y="387.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (536 samples, 0.40%)</title><rect x="158.2" y="371.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="161.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/2063345593.apply (536 samples, 0.40%)</title><rect x="158.2" y="355.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (536 samples, 0.40%)</title><rect x="158.2" y="339.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (536 samples, 0.40%)</title><rect x="158.2" y="323.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/1124124731.apply (536 samples, 0.40%)</title><rect x="158.2" y="307.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (536 samples, 0.40%)</title><rect x="158.2" y="291.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (120 samples, 0.09%)</title><rect x="158.4" y="275.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="161.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (120 samples, 0.09%)</title><rect x="158.4" y="259.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="161.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (78 samples, 0.06%)</title><rect x="158.4" y="243.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="161.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.03%)</title><rect x="159.1" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.03%)</title><rect x="159.1" y="227.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.03%)</title><rect x="159.1" y="211.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="162.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (170 samples, 0.13%)</title><rect x="159.5" y="275.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (142 samples, 0.11%)</title><rect x="159.7" y="259.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (142 samples, 0.11%)</title><rect x="159.7" y="243.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="162.7" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (78 samples, 0.06%)</title><rect x="159.7" y="227.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="162.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.05%)</title><rect x="160.4" y="227.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.05%)</title><rect x="160.4" y="211.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.4" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.05%)</title><rect x="160.4" y="195.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="163.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (225 samples, 0.17%)</title><rect x="161.0" y="275.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="164.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (133 samples, 0.10%)</title><rect x="161.0" y="259.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="164.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (68 samples, 0.05%)</title><rect x="161.0" y="243.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="164.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (65 samples, 0.05%)</title><rect x="161.6" y="243.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (65 samples, 0.05%)</title><rect x="161.6" y="227.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (65 samples, 0.05%)</title><rect x="161.6" y="211.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="164.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (92 samples, 0.07%)</title><rect x="162.2" y="259.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="165.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (49 samples, 0.04%)</title><rect x="162.2" y="243.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="165.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (43 samples, 0.03%)</title><rect x="162.6" y="243.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (43 samples, 0.03%)</title><rect x="162.6" y="227.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (43 samples, 0.03%)</title><rect x="162.6" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="165.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (43 samples, 0.03%)</title><rect x="162.6" y="195.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (43 samples, 0.03%)</title><rect x="162.6" y="179.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (43 samples, 0.03%)</title><rect x="162.6" y="163.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="165.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (96 samples, 0.07%)</title><rect x="163.0" y="467.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (96 samples, 0.07%)</title><rect x="163.0" y="451.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (96 samples, 0.07%)</title><rect x="163.0" y="435.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (96 samples, 0.07%)</title><rect x="163.0" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (96 samples, 0.07%)</title><rect x="163.0" y="403.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.0" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (96 samples, 0.07%)</title><rect x="163.0" y="387.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.0" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (34 samples, 0.03%)</title><rect x="163.0" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.0" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (34 samples, 0.03%)</title><rect x="163.0" y="355.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="166.0" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (62 samples, 0.05%)</title><rect x="163.3" y="371.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.3" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (62 samples, 0.05%)</title><rect x="163.3" y="355.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="166.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8,992 samples, 6.79%)</title><rect x="163.8" y="643.0" width="80.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.8" y="654.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8,992 samples, 6.79%)</title><rect x="163.8" y="627.0" width="80.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.8" y="638.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7,647 samples, 5.77%)</title><rect x="163.8" y="611.0" width="68.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.8" y="622.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$259/1643973216.run (7,647 samples, 5.77%)</title><rect x="163.8" y="595.0" width="68.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.8" y="606.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7,647 samples, 5.77%)</title><rect x="163.8" y="579.0" width="68.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.8" y="590.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (148 samples, 0.11%)</title><rect x="163.8" y="563.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (148 samples, 0.11%)</title><rect x="163.8" y="547.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (148 samples, 0.11%)</title><rect x="163.8" y="531.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (148 samples, 0.11%)</title><rect x="163.8" y="515.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/532087022.linkToTargetMethod (89 samples, 0.07%)</title><rect x="163.8" y="499.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1403704789.invoke (89 samples, 0.07%)</title><rect x="163.8" y="483.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (89 samples, 0.07%)</title><rect x="163.8" y="467.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (89 samples, 0.07%)</title><rect x="163.8" y="451.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (89 samples, 0.07%)</title><rect x="163.8" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.8" y="446.0"></text>
</g>
<g>
<title>byte[] (89 samples, 0.07%)</title><rect x="163.8" y="419.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="166.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (59 samples, 0.04%)</title><rect x="164.6" y="499.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="167.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.04%)</title><rect x="164.6" y="483.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.04%)</title><rect x="164.6" y="467.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$328/562141945.get$Lambda (59 samples, 0.04%)</title><rect x="164.6" y="451.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$328 (59 samples, 0.04%)</title><rect x="164.6" y="435.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="167.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (7,499 samples, 5.66%)</title><rect x="165.2" y="563.0" width="66.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.2" y="574.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (7,499 samples, 5.66%)</title><rect x="165.2" y="547.0" width="66.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.2" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (7,499 samples, 5.66%)</title><rect x="165.2" y="531.0" width="66.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.2" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (7,499 samples, 5.66%)</title><rect x="165.2" y="515.0" width="66.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.2" y="526.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,963 samples, 2.24%)</title><rect x="165.2" y="499.0" width="26.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="168.2" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,963 samples, 2.24%)</title><rect x="165.2" y="483.0" width="26.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.2" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,963 samples, 2.24%)</title><rect x="165.2" y="467.0" width="26.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="168.2" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,963 samples, 2.24%)</title><rect x="165.2" y="451.0" width="26.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="168.2" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,963 samples, 2.24%)</title><rect x="165.2" y="435.0" width="26.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.2" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,963 samples, 2.24%)</title><rect x="165.2" y="419.0" width="26.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.2" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,963 samples, 2.24%)</title><rect x="165.2" y="403.0" width="26.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="168.2" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,878 samples, 2.17%)</title><rect x="165.2" y="387.0" width="25.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="168.2" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,878 samples, 2.17%)</title><rect x="165.2" y="371.0" width="25.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="168.2" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,817 samples, 2.13%)</title><rect x="165.2" y="355.0" width="25.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.2" y="366.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (69 samples, 0.05%)</title><rect x="165.2" y="339.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="168.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$335/730000972.apply (50 samples, 0.04%)</title><rect x="165.8" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (50 samples, 0.04%)</title><rect x="165.8" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (50 samples, 0.04%)</title><rect x="165.8" y="307.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="168.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (50 samples, 0.04%)</title><rect x="165.8" y="291.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.04%)</title><rect x="165.8" y="275.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="168.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$175/71332808.apply (2,596 samples, 1.96%)</title><rect x="166.2" y="339.0" width="23.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="169.2" y="350.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2,596 samples, 1.96%)</title><rect x="166.2" y="323.0" width="23.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.2" y="334.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.03%)</title><rect x="166.2" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="169.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.03%)</title><rect x="166.2" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="169.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$381/1418581618.get$Lambda (46 samples, 0.03%)</title><rect x="166.2" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$381 (46 samples, 0.03%)</title><rect x="166.2" y="259.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="169.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (141 samples, 0.11%)</title><rect x="166.6" y="307.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="169.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (141 samples, 0.11%)</title><rect x="166.6" y="291.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (76 samples, 0.06%)</title><rect x="166.6" y="275.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="169.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.05%)</title><rect x="167.3" y="275.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.05%)</title><rect x="167.3" y="259.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (65 samples, 0.05%)</title><rect x="167.3" y="243.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="170.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2,409 samples, 1.82%)</title><rect x="167.9" y="307.0" width="21.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.9" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (127 samples, 0.10%)</title><rect x="168.1" y="291.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (127 samples, 0.10%)</title><rect x="168.1" y="275.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (70 samples, 0.05%)</title><rect x="168.1" y="259.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="171.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.04%)</title><rect x="168.7" y="259.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="171.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.04%)</title><rect x="168.7" y="243.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="171.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.04%)</title><rect x="168.7" y="227.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="171.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2,256 samples, 1.70%)</title><rect x="169.2" y="291.0" width="20.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.2" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$162/2090647856.apply (160 samples, 0.12%)</title><rect x="169.2" y="275.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.2" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (160 samples, 0.12%)</title><rect x="169.2" y="259.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="172.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (160 samples, 0.12%)</title><rect x="169.2" y="243.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (37 samples, 0.03%)</title><rect x="169.2" y="227.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="172.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (123 samples, 0.09%)</title><rect x="169.6" y="227.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.6" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (44 samples, 0.03%)</title><rect x="169.6" y="211.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="172.6" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (79 samples, 0.06%)</title><rect x="170.0" y="211.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="173.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2,096 samples, 1.58%)</title><rect x="170.7" y="275.0" width="18.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.03%)</title><rect x="170.7" y="259.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.03%)</title><rect x="170.7" y="243.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="173.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/550071966.linkToTargetMethod (80 samples, 0.06%)</title><rect x="171.1" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1132500708.invokeStatic (80 samples, 0.06%)</title><rect x="171.1" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$361/1529121028.get$Lambda (80 samples, 0.06%)</title><rect x="171.1" y="227.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$361 (80 samples, 0.06%)</title><rect x="171.1" y="211.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="174.1" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (433 samples, 0.33%)</title><rect x="171.8" y="259.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="174.8" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (172 samples, 0.13%)</title><rect x="171.8" y="243.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.8" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (64 samples, 0.05%)</title><rect x="171.8" y="227.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="174.8" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (64 samples, 0.05%)</title><rect x="171.8" y="211.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="174.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (108 samples, 0.08%)</title><rect x="172.4" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="175.4" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (108 samples, 0.08%)</title><rect x="172.4" y="211.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="175.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (114 samples, 0.09%)</title><rect x="173.3" y="243.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (114 samples, 0.09%)</title><rect x="173.3" y="227.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (114 samples, 0.09%)</title><rect x="173.3" y="211.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (33 samples, 0.02%)</title><rect x="173.3" y="195.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (33 samples, 0.02%)</title><rect x="173.3" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="176.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (33 samples, 0.02%)</title><rect x="173.3" y="163.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="176.3" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (33 samples, 0.02%)</title><rect x="173.3" y="147.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="176.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$357/1494509719.get (54 samples, 0.04%)</title><rect x="173.6" y="195.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="176.6" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (54 samples, 0.04%)</title><rect x="173.6" y="179.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="176.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (147 samples, 0.11%)</title><rect x="174.3" y="243.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="177.3" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (147 samples, 0.11%)</title><rect x="174.3" y="227.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="177.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (247 samples, 0.19%)</title><rect x="175.6" y="259.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (121 samples, 0.09%)</title><rect x="175.6" y="243.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.6" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (80 samples, 0.06%)</title><rect x="175.6" y="227.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="178.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.03%)</title><rect x="176.4" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="179.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.03%)</title><rect x="176.4" y="211.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.4" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.03%)</title><rect x="176.4" y="195.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="179.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (126 samples, 0.10%)</title><rect x="176.7" y="243.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="179.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (126 samples, 0.10%)</title><rect x="176.7" y="227.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.7" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (76 samples, 0.06%)</title><rect x="176.7" y="211.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="179.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.04%)</title><rect x="177.4" y="211.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.04%)</title><rect x="177.4" y="195.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="180.4" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.04%)</title><rect x="177.4" y="179.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="180.4" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (38 samples, 0.03%)</title><rect x="177.8" y="259.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="180.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (61 samples, 0.05%)</title><rect x="178.2" y="259.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="181.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (73 samples, 0.06%)</title><rect x="178.7" y="259.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="181.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,097 samples, 0.83%)</title><rect x="179.6" y="259.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$361/1529121028.run (1,097 samples, 0.83%)</title><rect x="179.6" y="243.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1,097 samples, 0.83%)</title><rect x="179.6" y="227.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="182.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (133 samples, 0.10%)</title><rect x="179.6" y="211.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="182.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (133 samples, 0.10%)</title><rect x="179.6" y="195.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$362/413808019.get$Lambda (32 samples, 0.02%)</title><rect x="179.6" y="179.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.6" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$362 (32 samples, 0.02%)</title><rect x="179.6" y="163.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="182.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$363/625315377.get$Lambda (42 samples, 0.03%)</title><rect x="179.8" y="179.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="182.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$363 (42 samples, 0.03%)</title><rect x="179.8" y="163.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="182.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$369/1721572810.get$Lambda (59 samples, 0.04%)</title><rect x="180.2" y="179.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.2" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$369 (59 samples, 0.04%)</title><rect x="180.2" y="163.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="183.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (113 samples, 0.09%)</title><rect x="180.7" y="211.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="183.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (113 samples, 0.09%)</title><rect x="180.7" y="195.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="183.7" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (63 samples, 0.05%)</title><rect x="180.7" y="179.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="183.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.04%)</title><rect x="181.3" y="179.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="184.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.04%)</title><rect x="181.3" y="163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="184.3" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.04%)</title><rect x="181.3" y="147.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="184.3" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (86 samples, 0.06%)</title><rect x="181.8" y="211.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="184.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (52 samples, 0.04%)</title><rect x="182.5" y="211.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.04%)</title><rect x="182.5" y="195.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="185.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (201 samples, 0.15%)</title><rect x="183.0" y="211.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (201 samples, 0.15%)</title><rect x="183.0" y="195.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.04%)</title><rect x="183.0" y="179.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.04%)</title><rect x="183.0" y="163.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="186.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$370/742003348.get$Lambda (53 samples, 0.04%)</title><rect x="183.0" y="147.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$370 (53 samples, 0.04%)</title><rect x="183.0" y="131.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="186.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (148 samples, 0.11%)</title><rect x="183.5" y="179.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (148 samples, 0.11%)</title><rect x="183.5" y="163.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="186.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (148 samples, 0.11%)</title><rect x="183.5" y="147.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.5" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (74 samples, 0.06%)</title><rect x="183.5" y="131.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="186.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (74 samples, 0.06%)</title><rect x="184.1" y="131.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (74 samples, 0.06%)</title><rect x="184.1" y="115.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.1" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (74 samples, 0.06%)</title><rect x="184.1" y="99.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="187.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (191 samples, 0.14%)</title><rect x="184.8" y="211.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (191 samples, 0.14%)</title><rect x="184.8" y="195.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2141817446.invoke (191 samples, 0.14%)</title><rect x="184.8" y="179.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="187.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (191 samples, 0.14%)</title><rect x="184.8" y="163.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="187.8" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (51 samples, 0.04%)</title><rect x="184.8" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.04%)</title><rect x="184.8" y="131.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="187.8" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (140 samples, 0.11%)</title><rect x="185.2" y="147.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="188.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (140 samples, 0.11%)</title><rect x="185.2" y="131.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="188.2" y="142.0"></text>
</g>
<g>
<title>byte[] (140 samples, 0.11%)</title><rect x="185.2" y="115.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="188.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (321 samples, 0.24%)</title><rect x="186.5" y="211.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (109 samples, 0.08%)</title><rect x="186.5" y="195.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="189.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (212 samples, 0.16%)</title><rect x="187.4" y="195.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (212 samples, 0.16%)</title><rect x="187.4" y="179.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2141817446.invoke (212 samples, 0.16%)</title><rect x="187.4" y="163.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="190.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (212 samples, 0.16%)</title><rect x="187.4" y="147.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (40 samples, 0.03%)</title><rect x="187.4" y="131.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="190.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.03%)</title><rect x="187.4" y="115.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="190.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (172 samples, 0.13%)</title><rect x="187.8" y="131.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (172 samples, 0.13%)</title><rect x="187.8" y="115.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="190.8" y="126.0"></text>
</g>
<g>
<title>byte[] (172 samples, 0.13%)</title><rect x="187.8" y="99.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="190.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$307/724253840.apply (102 samples, 0.08%)</title><rect x="189.3" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (102 samples, 0.08%)</title><rect x="189.3" y="323.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (45 samples, 0.03%)</title><rect x="189.3" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.3" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (45 samples, 0.03%)</title><rect x="189.3" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.3" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (45 samples, 0.03%)</title><rect x="189.3" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.3" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (45 samples, 0.03%)</title><rect x="189.3" y="259.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="192.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (57 samples, 0.04%)</title><rect x="189.7" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.04%)</title><rect x="189.7" y="291.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="192.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (61 samples, 0.05%)</title><rect x="190.2" y="355.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (61 samples, 0.05%)</title><rect x="190.2" y="339.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$310/278934779.apply (61 samples, 0.05%)</title><rect x="190.2" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (61 samples, 0.05%)</title><rect x="190.2" y="307.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (61 samples, 0.05%)</title><rect x="190.2" y="291.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (61 samples, 0.05%)</title><rect x="190.2" y="275.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="193.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$342/1623830039.apply (85 samples, 0.06%)</title><rect x="190.8" y="387.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (85 samples, 0.06%)</title><rect x="190.8" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (85 samples, 0.06%)</title><rect x="190.8" y="355.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="193.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (4,536 samples, 3.42%)</title><rect x="191.5" y="499.0" width="40.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="194.5" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (428 samples, 0.32%)</title><rect x="191.5" y="483.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (428 samples, 0.32%)</title><rect x="191.5" y="467.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (428 samples, 0.32%)</title><rect x="191.5" y="451.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="194.5" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (428 samples, 0.32%)</title><rect x="191.5" y="435.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="194.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (428 samples, 0.32%)</title><rect x="191.5" y="419.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="194.5" y="430.0"></text>
</g>
<g>
<title>byte[] (428 samples, 0.32%)</title><rect x="191.5" y="403.0" width="3.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="194.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (326 samples, 0.25%)</title><rect x="195.4" y="483.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.4" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (40 samples, 0.03%)</title><rect x="195.4" y="467.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="198.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.04%)</title><rect x="195.7" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.04%)</title><rect x="195.7" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (47 samples, 0.04%)</title><rect x="195.7" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.7" y="446.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.04%)</title><rect x="195.7" y="419.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="198.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (60 samples, 0.05%)</title><rect x="196.1" y="467.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="199.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (60 samples, 0.05%)</title><rect x="196.1" y="451.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.1" y="462.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.05%)</title><rect x="196.1" y="435.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="199.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (179 samples, 0.14%)</title><rect x="196.7" y="467.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (179 samples, 0.14%)</title><rect x="196.7" y="451.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (117 samples, 0.09%)</title><rect x="196.7" y="435.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="199.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (62 samples, 0.05%)</title><rect x="197.7" y="435.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="200.7" y="446.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.05%)</title><rect x="197.7" y="419.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="200.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1,113 samples, 0.84%)</title><rect x="198.3" y="483.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,113 samples, 0.84%)</title><rect x="198.3" y="467.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,113 samples, 0.84%)</title><rect x="198.3" y="451.0" width="9.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="201.3" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (29 samples, 0.02%)</title><rect x="198.3" y="435.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="201.3" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (34 samples, 0.03%)</title><rect x="198.5" y="435.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="201.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (95 samples, 0.07%)</title><rect x="198.8" y="435.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="201.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.03%)</title><rect x="199.9" y="435.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.03%)</title><rect x="199.9" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.get$Lambda (44 samples, 0.03%)</title><rect x="199.9" y="403.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.9" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$149 (44 samples, 0.03%)</title><rect x="199.9" y="387.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="202.9" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (78 samples, 0.06%)</title><rect x="200.3" y="435.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.3" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (78 samples, 0.06%)</title><rect x="200.3" y="419.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="203.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (719 samples, 0.54%)</title><rect x="201.0" y="435.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="204.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.accept (719 samples, 0.54%)</title><rect x="201.0" y="419.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="204.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (719 samples, 0.54%)</title><rect x="201.0" y="403.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (133 samples, 0.10%)</title><rect x="201.0" y="387.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (133 samples, 0.10%)</title><rect x="201.0" y="371.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.get$Lambda (133 samples, 0.10%)</title><rect x="201.0" y="355.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.0" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$157 (133 samples, 0.10%)</title><rect x="201.0" y="339.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="204.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (97 samples, 0.07%)</title><rect x="202.2" y="387.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="205.2" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.accept (97 samples, 0.07%)</title><rect x="202.2" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="205.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (97 samples, 0.07%)</title><rect x="202.2" y="355.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (97 samples, 0.07%)</title><rect x="202.2" y="339.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (97 samples, 0.07%)</title><rect x="202.2" y="323.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="205.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (97 samples, 0.07%)</title><rect x="202.2" y="307.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (97 samples, 0.07%)</title><rect x="202.2" y="291.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (97 samples, 0.07%)</title><rect x="202.2" y="275.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="205.2" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (97 samples, 0.07%)</title><rect x="202.2" y="259.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="205.2" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (266 samples, 0.20%)</title><rect x="203.0" y="387.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.0" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (266 samples, 0.20%)</title><rect x="203.0" y="371.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="206.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (138 samples, 0.10%)</title><rect x="203.0" y="355.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (138 samples, 0.10%)</title><rect x="203.0" y="339.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.0" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (138 samples, 0.10%)</title><rect x="203.0" y="323.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="206.0" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (128 samples, 0.10%)</title><rect x="204.3" y="355.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.3" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (128 samples, 0.10%)</title><rect x="204.3" y="339.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="207.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (223 samples, 0.17%)</title><rect x="205.4" y="387.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.4" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (223 samples, 0.17%)</title><rect x="205.4" y="371.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="208.4" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (87 samples, 0.07%)</title><rect x="207.4" y="435.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (87 samples, 0.07%)</title><rect x="207.4" y="419.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="210.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (2,669 samples, 2.01%)</title><rect x="208.2" y="483.0" width="23.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.2" y="494.0">j..</text>
</g>
<g>
<title>java.lang.StringBuilder (120 samples, 0.09%)</title><rect x="208.2" y="467.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="211.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (185 samples, 0.14%)</title><rect x="209.2" y="467.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="212.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (185 samples, 0.14%)</title><rect x="209.2" y="451.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.2" y="462.0"></text>
</g>
<g>
<title>byte[] (185 samples, 0.14%)</title><rect x="209.2" y="435.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="212.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (398 samples, 0.30%)</title><rect x="210.9" y="467.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="213.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (398 samples, 0.30%)</title><rect x="210.9" y="451.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="213.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String (150 samples, 0.11%)</title><rect x="210.9" y="435.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="213.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (248 samples, 0.19%)</title><rect x="212.2" y="435.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.2" y="446.0"></text>
</g>
<g>
<title>byte[] (248 samples, 0.19%)</title><rect x="212.2" y="419.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="215.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1,966 samples, 1.48%)</title><rect x="214.4" y="467.0" width="17.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="217.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (584 samples, 0.44%)</title><rect x="214.4" y="451.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="217.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (584 samples, 0.44%)</title><rect x="214.4" y="435.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.4" y="446.0"></text>
</g>
<g>
<title>java.lang.String (240 samples, 0.18%)</title><rect x="214.4" y="419.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="217.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (344 samples, 0.26%)</title><rect x="216.6" y="419.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.6" y="430.0"></text>
</g>
<g>
<title>byte[] (344 samples, 0.26%)</title><rect x="216.6" y="403.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="219.6" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (307 samples, 0.23%)</title><rect x="219.6" y="451.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (307 samples, 0.23%)</title><rect x="219.6" y="435.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.6" y="446.0"></text>
</g>
<g>
<title>byte[] (157 samples, 0.12%)</title><rect x="219.6" y="419.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="222.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (150 samples, 0.11%)</title><rect x="221.0" y="419.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="224.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (314 samples, 0.24%)</title><rect x="222.4" y="451.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="225.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (314 samples, 0.24%)</title><rect x="222.4" y="435.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="225.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (314 samples, 0.24%)</title><rect x="222.4" y="419.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (146 samples, 0.11%)</title><rect x="222.4" y="403.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="225.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (168 samples, 0.13%)</title><rect x="223.7" y="403.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.7" y="414.0"></text>
</g>
<g>
<title>byte[] (168 samples, 0.13%)</title><rect x="223.7" y="387.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="226.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (283 samples, 0.21%)</title><rect x="225.2" y="451.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (283 samples, 0.21%)</title><rect x="225.2" y="435.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="228.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (283 samples, 0.21%)</title><rect x="225.2" y="419.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="228.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (283 samples, 0.21%)</title><rect x="225.2" y="403.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="228.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (283 samples, 0.21%)</title><rect x="225.2" y="387.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (283 samples, 0.21%)</title><rect x="225.2" y="371.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="228.2" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (478 samples, 0.36%)</title><rect x="227.7" y="451.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.7" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (169 samples, 0.13%)</title><rect x="227.7" y="435.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.7" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (169 samples, 0.13%)</title><rect x="227.7" y="419.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="230.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (154 samples, 0.12%)</title><rect x="229.2" y="435.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="232.2" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (154 samples, 0.12%)</title><rect x="229.2" y="419.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="232.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$353/470461262.apply (155 samples, 0.12%)</title><rect x="230.5" y="435.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="233.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (155 samples, 0.12%)</title><rect x="230.5" y="419.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.5" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (155 samples, 0.12%)</title><rect x="230.5" y="403.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="233.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,345 samples, 1.01%)</title><rect x="231.9" y="611.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,345 samples, 1.01%)</title><rect x="231.9" y="595.0" width="12.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="234.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,345 samples, 1.01%)</title><rect x="231.9" y="579.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$259/1643973216.run (1,345 samples, 1.01%)</title><rect x="231.9" y="563.0" width="12.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="234.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,345 samples, 1.01%)</title><rect x="231.9" y="547.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (185 samples, 0.14%)</title><rect x="231.9" y="531.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (80 samples, 0.06%)</title><rect x="231.9" y="515.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="234.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.06%)</title><rect x="231.9" y="499.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="234.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$286/690219596.get$Lambda (52 samples, 0.04%)</title><rect x="232.2" y="483.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$286 (52 samples, 0.04%)</title><rect x="232.2" y="467.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="235.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (47 samples, 0.04%)</title><rect x="232.6" y="515.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="235.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (58 samples, 0.04%)</title><rect x="233.1" y="515.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="236.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (58 samples, 0.04%)</title><rect x="233.1" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="236.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (37 samples, 0.03%)</title><rect x="233.2" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (37 samples, 0.03%)</title><rect x="233.2" y="467.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="236.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1,158 samples, 0.87%)</title><rect x="233.6" y="531.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,158 samples, 0.87%)</title><rect x="233.6" y="515.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,158 samples, 0.87%)</title><rect x="233.6" y="499.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="236.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,158 samples, 0.87%)</title><rect x="233.6" y="483.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="236.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,158 samples, 0.87%)</title><rect x="233.6" y="467.0" width="10.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,158 samples, 0.87%)</title><rect x="233.6" y="451.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (90 samples, 0.07%)</title><rect x="233.6" y="435.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.6" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (90 samples, 0.07%)</title><rect x="233.6" y="419.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.6" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (90 samples, 0.07%)</title><rect x="233.6" y="403.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="236.6" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (45 samples, 0.03%)</title><rect x="234.4" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.4" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (45 samples, 0.03%)</title><rect x="234.4" y="419.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="237.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$362/413808019.run (691 samples, 0.52%)</title><rect x="234.8" y="435.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (691 samples, 0.52%)</title><rect x="234.8" y="419.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (691 samples, 0.52%)</title><rect x="234.8" y="403.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.8" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (215 samples, 0.16%)</title><rect x="234.8" y="387.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.8" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (149 samples, 0.11%)</title><rect x="234.8" y="371.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.8" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (53 samples, 0.04%)</title><rect x="234.8" y="355.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.8" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (53 samples, 0.04%)</title><rect x="234.8" y="339.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="237.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (96 samples, 0.07%)</title><rect x="235.2" y="355.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.2" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (96 samples, 0.07%)</title><rect x="235.2" y="339.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="238.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (66 samples, 0.05%)</title><rect x="236.1" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="239.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (66 samples, 0.05%)</title><rect x="236.1" y="355.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="239.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (66 samples, 0.05%)</title><rect x="236.1" y="339.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$55/1962826816.get (40 samples, 0.03%)</title><rect x="236.1" y="323.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="239.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (40 samples, 0.03%)</title><rect x="236.1" y="307.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="239.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (476 samples, 0.36%)</title><rect x="236.7" y="387.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.7" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (46 samples, 0.03%)</title><rect x="236.7" y="371.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="239.7" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (46 samples, 0.03%)</title><rect x="236.7" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.7" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (46 samples, 0.03%)</title><rect x="236.7" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="239.7" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (46 samples, 0.03%)</title><rect x="236.7" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="239.7" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (46 samples, 0.03%)</title><rect x="236.7" y="307.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="239.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (430 samples, 0.32%)</title><rect x="237.1" y="371.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (163 samples, 0.12%)</title><rect x="237.1" y="355.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.1" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (42 samples, 0.03%)</title><rect x="237.1" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="240.1" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (42 samples, 0.03%)</title><rect x="237.1" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.1" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (42 samples, 0.03%)</title><rect x="237.1" y="307.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="240.1" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (42 samples, 0.03%)</title><rect x="237.1" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.1" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (42 samples, 0.03%)</title><rect x="237.1" y="275.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.1" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (42 samples, 0.03%)</title><rect x="237.1" y="259.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="240.1" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (38 samples, 0.03%)</title><rect x="237.5" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="240.5" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (38 samples, 0.03%)</title><rect x="237.5" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.5" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (38 samples, 0.03%)</title><rect x="237.5" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="240.5" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (38 samples, 0.03%)</title><rect x="237.5" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.5" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (38 samples, 0.03%)</title><rect x="237.5" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="240.5" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (38 samples, 0.03%)</title><rect x="237.5" y="259.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="240.5" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (37 samples, 0.03%)</title><rect x="237.9" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.9" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (37 samples, 0.03%)</title><rect x="237.9" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.9" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (37 samples, 0.03%)</title><rect x="237.9" y="307.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="240.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (39 samples, 0.03%)</title><rect x="238.2" y="339.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="241.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (84 samples, 0.06%)</title><rect x="238.6" y="355.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.6" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (48 samples, 0.04%)</title><rect x="238.6" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.6" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (48 samples, 0.04%)</title><rect x="238.6" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (48 samples, 0.04%)</title><rect x="238.6" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.6" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (48 samples, 0.04%)</title><rect x="238.6" y="291.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="241.6" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (36 samples, 0.03%)</title><rect x="239.0" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="242.0" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (36 samples, 0.03%)</title><rect x="239.0" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.0" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (36 samples, 0.03%)</title><rect x="239.0" y="307.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="242.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (183 samples, 0.14%)</title><rect x="239.3" y="355.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (49 samples, 0.04%)</title><rect x="239.3" y="339.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="242.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (134 samples, 0.10%)</title><rect x="239.7" y="339.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="242.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (49 samples, 0.04%)</title><rect x="239.7" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (49 samples, 0.04%)</title><rect x="239.7" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="242.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (49 samples, 0.04%)</title><rect x="239.7" y="291.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="242.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (49 samples, 0.04%)</title><rect x="239.7" y="275.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="242.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (85 samples, 0.06%)</title><rect x="240.2" y="323.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (85 samples, 0.06%)</title><rect x="240.2" y="307.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="243.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (60 samples, 0.05%)</title><rect x="240.2" y="291.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="243.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (163 samples, 0.12%)</title><rect x="240.9" y="435.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="243.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (163 samples, 0.12%)</title><rect x="240.9" y="419.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (163 samples, 0.12%)</title><rect x="240.9" y="403.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (121 samples, 0.09%)</title><rect x="240.9" y="387.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (121 samples, 0.09%)</title><rect x="240.9" y="371.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (121 samples, 0.09%)</title><rect x="240.9" y="355.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (121 samples, 0.09%)</title><rect x="240.9" y="339.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$373/624900171.accept (121 samples, 0.09%)</title><rect x="240.9" y="323.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (121 samples, 0.09%)</title><rect x="240.9" y="307.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="243.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (121 samples, 0.09%)</title><rect x="240.9" y="291.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="243.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (121 samples, 0.09%)</title><rect x="240.9" y="275.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="243.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (121 samples, 0.09%)</title><rect x="240.9" y="259.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$381/1418581618.apply (121 samples, 0.09%)</title><rect x="240.9" y="243.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (121 samples, 0.09%)</title><rect x="240.9" y="227.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (121 samples, 0.09%)</title><rect x="240.9" y="211.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="243.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (42 samples, 0.03%)</title><rect x="242.0" y="387.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="245.0" y="398.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.03%)</title><rect x="242.0" y="371.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="245.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (169 samples, 0.13%)</title><rect x="242.4" y="435.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (169 samples, 0.13%)</title><rect x="242.4" y="419.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="245.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (169 samples, 0.13%)</title><rect x="242.4" y="403.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="245.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (169 samples, 0.13%)</title><rect x="242.4" y="387.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="245.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (169 samples, 0.13%)</title><rect x="242.4" y="371.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.4" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (51 samples, 0.04%)</title><rect x="242.4" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (51 samples, 0.04%)</title><rect x="242.4" y="339.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="245.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (118 samples, 0.09%)</title><rect x="242.8" y="355.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="245.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (118 samples, 0.09%)</title><rect x="242.8" y="339.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="245.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (118 samples, 0.09%)</title><rect x="242.8" y="323.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="245.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$115/356589445.run (74,050 samples, 55.88%)</title><rect x="243.9" y="643.0" width="659.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="246.9" y="654.0">ru/mail/polis/service/rubtsov/MyService$$Lambda$115/356589445.run</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$17 (74,050 samples, 55.88%)</title><rect x="243.9" y="627.0" width="659.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="246.9" y="638.0">ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$17</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$395/1741362108.act (74,050 samples, 55.88%)</title><rect x="243.9" y="611.0" width="659.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="246.9" y="622.0">ru/mail/polis/service/rubtsov/MyService$$Lambda$395/1741362108.act</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$0 (74,050 samples, 55.88%)</title><rect x="243.9" y="595.0" width="659.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="246.9" y="606.0">ru/mail/polis/service/rubtsov/MyService.lambda$entity$0</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.get (74,050 samples, 55.88%)</title><rect x="243.9" y="579.0" width="659.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="246.9" y="590.0">ru/mail/polis/service/rubtsov/MyService.get</text>
</g>
<g>
<title>java/lang/String.getBytes (3,469 samples, 2.62%)</title><rect x="244.1" y="563.0" width="30.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="247.1" y="574.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (3,469 samples, 2.62%)</title><rect x="244.1" y="547.0" width="30.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="247.1" y="558.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3,469 samples, 2.62%)</title><rect x="244.1" y="531.0" width="30.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="247.1" y="542.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,469 samples, 2.62%)</title><rect x="244.1" y="515.0" width="30.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="247.1" y="526.0">ja..</text>
</g>
<g>
<title>byte[] (3,469 samples, 2.62%)</title><rect x="244.1" y="499.0" width="30.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="247.1" y="510.0">by..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/506328402.linkToTargetMethod (59 samples, 0.04%)</title><rect x="275.2" y="563.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.04%)</title><rect x="275.2" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$411/1690616023.get$Lambda (32 samples, 0.02%)</title><rect x="275.4" y="531.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="278.4" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rubtsov.MyService$$Lambda$411 (32 samples, 0.02%)</title><rect x="275.4" y="515.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="278.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4,197 samples, 3.17%)</title><rect x="275.7" y="563.0" width="37.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.7" y="574.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4,197 samples, 3.17%)</title><rect x="275.7" y="547.0" width="37.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="278.7" y="558.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,197 samples, 3.17%)</title><rect x="275.7" y="531.0" width="37.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="278.7" y="542.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (56 samples, 0.04%)</title><rect x="313.1" y="563.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (56 samples, 0.04%)</title><rect x="313.1" y="547.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (32 samples, 0.02%)</title><rect x="313.1" y="531.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="316.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (68 samples, 0.05%)</title><rect x="313.6" y="563.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (68 samples, 0.05%)</title><rect x="313.6" y="547.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (29 samples, 0.02%)</title><rect x="313.7" y="531.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="316.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenComposeAsync (63 samples, 0.05%)</title><rect x="314.2" y="563.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (63 samples, 0.05%)</title><rect x="314.2" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.2" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (47 samples, 0.04%)</title><rect x="314.2" y="531.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="317.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (67 samples, 0.05%)</title><rect x="314.8" y="563.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (67 samples, 0.05%)</title><rect x="314.8" y="547.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (41 samples, 0.03%)</title><rect x="314.8" y="531.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="317.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (17,302 samples, 13.06%)</title><rect x="315.4" y="563.0" width="154.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="318.4" y="574.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (12,408 samples, 9.36%)</title><rect x="315.4" y="547.0" width="110.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.4" y="558.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10,236 samples, 7.72%)</title><rect x="315.4" y="531.0" width="91.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.4" y="542.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (10,236 samples, 7.72%)</title><rect x="315.4" y="515.0" width="91.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.4" y="526.0">one/nio/uti..</text>
</g>
<g>
<title>byte[] (5,214 samples, 3.93%)</title><rect x="315.4" y="499.0" width="46.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="318.4" y="510.0">byte[]</text>
</g>
<g>
<title>byte[] (5,022 samples, 3.79%)</title><rect x="361.8" y="499.0" width="44.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="364.8" y="510.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (2,172 samples, 1.64%)</title><rect x="406.5" y="531.0" width="19.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="409.5" y="542.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2,172 samples, 1.64%)</title><rect x="406.5" y="515.0" width="19.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="409.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4,894 samples, 3.69%)</title><rect x="425.8" y="547.0" width="43.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.8" y="558.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (4,894 samples, 3.69%)</title><rect x="425.8" y="531.0" width="43.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="428.8" y="542.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,894 samples, 3.69%)</title><rect x="425.8" y="515.0" width="43.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="428.8" y="526.0">java..</text>
</g>
<g>
<title>java.lang.String (753 samples, 0.57%)</title><rect x="425.8" y="499.0" width="6.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="428.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,141 samples, 3.12%)</title><rect x="432.5" y="499.0" width="36.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.5" y="510.0">jav..</text>
</g>
<g>
<title>byte[] (4,141 samples, 3.12%)</title><rect x="432.5" y="483.0" width="36.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="435.5" y="494.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.latestIterator (26,495 samples, 19.99%)</title><rect x="469.4" y="563.0" width="235.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.4" y="574.0">ru/mail/polis/dao/rubtsov/MyDAO..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransformWithRemoved (7,508 samples, 5.67%)</title><rect x="469.4" y="547.0" width="66.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="472.4" y="558.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5,918 samples, 4.47%)</title><rect x="469.4" y="531.0" width="52.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.4" y="542.0">com/g..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (585 samples, 0.44%)</title><rect x="469.4" y="515.0" width="5.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="472.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5,333 samples, 4.02%)</title><rect x="474.6" y="515.0" width="47.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.6" y="526.0">com/..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1,727 samples, 1.30%)</title><rect x="474.6" y="499.0" width="15.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="477.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (628 samples, 0.47%)</title><rect x="490.0" y="499.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="493.0" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (628 samples, 0.47%)</title><rect x="490.0" y="483.0" width="5.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="493.0" y="494.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1,777 samples, 1.34%)</title><rect x="495.6" y="499.0" width="15.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="498.6" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1,201 samples, 0.91%)</title><rect x="511.4" y="499.0" width="10.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.4" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,201 samples, 0.91%)</title><rect x="511.4" y="483.0" width="10.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="514.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,590 samples, 1.20%)</title><rect x="522.1" y="531.0" width="14.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="525.1" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1,590 samples, 1.20%)</title><rect x="522.1" y="515.0" width="14.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="525.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.collectItems (18,987 samples, 14.33%)</title><rect x="536.3" y="547.0" width="169.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="539.3" y="558.0">ru/mail/polis/dao/rubt..</text>
</g>
<g>
<title>java.util.ArrayList (1,413 samples, 1.07%)</title><rect x="536.3" y="531.0" width="12.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="539.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1,424 samples, 1.07%)</title><rect x="548.8" y="531.0" width="12.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="551.8" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,424 samples, 1.07%)</title><rect x="548.8" y="515.0" width="12.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="551.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (335 samples, 0.25%)</title><rect x="561.5" y="531.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (335 samples, 0.25%)</title><rect x="561.5" y="515.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (335 samples, 0.25%)</title><rect x="561.5" y="499.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="564.5" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (309 samples, 0.23%)</title><rect x="561.5" y="483.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.5" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (309 samples, 0.23%)</title><rect x="561.5" y="467.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.5" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (178 samples, 0.13%)</title><rect x="561.5" y="451.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.5" y="462.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (178 samples, 0.13%)</title><rect x="561.5" y="435.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="564.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (131 samples, 0.10%)</title><rect x="563.1" y="451.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="566.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (131 samples, 0.10%)</title><rect x="563.1" y="435.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="566.1" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (131 samples, 0.10%)</title><rect x="563.1" y="419.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="566.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.latestIterator (15,815 samples, 11.93%)</title><rect x="564.5" y="531.0" width="140.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.5" y="542.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransformWithRemoved (6,861 samples, 5.18%)</title><rect x="564.5" y="515.0" width="61.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.5" y="526.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5,551 samples, 4.19%)</title><rect x="564.5" y="499.0" width="49.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.5" y="510.0">com/g..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (286 samples, 0.22%)</title><rect x="564.5" y="483.0" width="2.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="567.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5,265 samples, 3.97%)</title><rect x="567.1" y="483.0" width="46.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.1" y="494.0">com/..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1,578 samples, 1.19%)</title><rect x="567.1" y="467.0" width="14.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="570.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1,192 samples, 0.90%)</title><rect x="581.1" y="467.0" width="10.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.1" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1,192 samples, 0.90%)</title><rect x="581.1" y="451.0" width="10.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="584.1" y="462.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1,594 samples, 1.20%)</title><rect x="591.7" y="467.0" width="14.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="594.7" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (901 samples, 0.68%)</title><rect x="605.9" y="467.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (901 samples, 0.68%)</title><rect x="605.9" y="451.0" width="8.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="608.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,310 samples, 0.99%)</title><rect x="613.9" y="499.0" width="11.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="616.9" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1,310 samples, 0.99%)</title><rect x="613.9" y="483.0" width="11.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="616.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.collectIters (8,954 samples, 6.76%)</title><rect x="625.6" y="515.0" width="79.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="628.6" y="526.0">ru/mail/p..</text>
</g>
<g>
<title>java.util.ArrayList (910 samples, 0.69%)</title><rect x="625.6" y="499.0" width="8.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="628.6" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1,097 samples, 0.83%)</title><rect x="633.7" y="499.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.7" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,097 samples, 0.83%)</title><rect x="633.7" y="483.0" width="9.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="636.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1,736 samples, 1.31%)</title><rect x="643.5" y="499.0" width="15.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.5" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (1,736 samples, 1.31%)</title><rect x="643.5" y="483.0" width="15.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="646.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (219 samples, 0.17%)</title><rect x="658.9" y="499.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (219 samples, 0.17%)</title><rect x="658.9" y="483.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (219 samples, 0.17%)</title><rect x="658.9" y="467.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.9" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (193 samples, 0.15%)</title><rect x="658.9" y="451.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.9" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (193 samples, 0.15%)</title><rect x="658.9" y="435.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.9" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (109 samples, 0.08%)</title><rect x="658.9" y="419.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.9" y="430.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (109 samples, 0.08%)</title><rect x="658.9" y="403.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="661.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (84 samples, 0.06%)</title><rect x="659.9" y="419.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (84 samples, 0.06%)</title><rect x="659.9" y="403.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.9" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (84 samples, 0.06%)</title><rect x="659.9" y="387.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="662.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTable.iterator (4,992 samples, 3.77%)</title><rect x="660.9" y="499.0" width="44.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="663.9" y="510.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (719 samples, 0.54%)</title><rect x="660.9" y="483.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (719 samples, 0.54%)</title><rect x="660.9" y="467.0" width="6.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="663.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1,670 samples, 1.26%)</title><rect x="667.3" y="483.0" width="14.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (1,670 samples, 1.26%)</title><rect x="667.3" y="467.0" width="14.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="670.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2,603 samples, 1.96%)</title><rect x="682.1" y="483.0" width="23.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.1" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2,603 samples, 1.96%)</title><rect x="682.1" y="467.0" width="23.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.1" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2,603 samples, 1.96%)</title><rect x="682.1" y="451.0" width="23.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.1" y="462.0">j..</text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (2,603 samples, 1.96%)</title><rect x="682.1" y="435.0" width="23.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="685.1" y="446.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/BasicTopology.replicas (45 samples, 0.03%)</title><rect x="705.3" y="563.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="708.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.sendRequestsAndCollect (4,249 samples, 3.21%)</title><rect x="705.7" y="563.0" width="37.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.7" y="574.0">ru/..</text>
</g>
<g>
<title>java/util/Collection.stream (85 samples, 0.06%)</title><rect x="705.8" y="547.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="708.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (60 samples, 0.05%)</title><rect x="706.0" y="531.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.0" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (60 samples, 0.05%)</title><rect x="706.0" y="515.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="709.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (37 samples, 0.03%)</title><rect x="706.6" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="709.6" y="558.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (37 samples, 0.03%)</title><rect x="706.6" y="531.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="709.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (4,053 samples, 3.06%)</title><rect x="706.9" y="547.0" width="36.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.9" y="558.0">jav..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4,018 samples, 3.03%)</title><rect x="706.9" y="531.0" width="35.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.9" y="542.0">jav..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (4,018 samples, 3.03%)</title><rect x="706.9" y="515.0" width="35.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="709.9" y="526.0">jav..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3,997 samples, 3.02%)</title><rect x="706.9" y="499.0" width="35.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="709.9" y="510.0">jav..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3,980 samples, 3.00%)</title><rect x="706.9" y="483.0" width="35.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="709.9" y="494.0">jav..</text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (3,954 samples, 2.98%)</title><rect x="706.9" y="467.0" width="35.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.9" y="478.0">jav..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3,954 samples, 2.98%)</title><rect x="706.9" y="451.0" width="35.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.9" y="462.0">jav..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (57 samples, 0.04%)</title><rect x="706.9" y="435.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$133/1101094733.accept (57 samples, 0.04%)</title><rect x="706.9" y="419.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (57 samples, 0.04%)</title><rect x="706.9" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.9" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (57 samples, 0.04%)</title><rect x="706.9" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="709.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (57 samples, 0.04%)</title><rect x="706.9" y="371.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (57 samples, 0.04%)</title><rect x="706.9" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (57 samples, 0.04%)</title><rect x="706.9" y="339.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (57 samples, 0.04%)</title><rect x="706.9" y="323.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="709.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$158/1188038743.apply (3,897 samples, 2.94%)</title><rect x="707.4" y="435.0" width="34.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.4" y="446.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$sendRequestsAndCollect$7 (3,897 samples, 2.94%)</title><rect x="707.4" y="419.0" width="34.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.4" y="430.0">ru..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (3,897 samples, 2.94%)</title><rect x="707.4" y="403.0" width="34.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="710.4" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,897 samples, 2.94%)</title><rect x="707.4" y="387.0" width="34.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.4" y="398.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,897 samples, 2.94%)</title><rect x="707.4" y="371.0" width="34.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.4" y="382.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,897 samples, 2.94%)</title><rect x="707.4" y="355.0" width="34.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.4" y="366.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.03%)</title><rect x="707.4" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.03%)</title><rect x="707.4" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$181/270135584.get$Lambda (34 samples, 0.03%)</title><rect x="707.4" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$181 (34 samples, 0.03%)</title><rect x="707.4" y="291.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="710.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (143 samples, 0.11%)</title><rect x="707.7" y="339.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (143 samples, 0.11%)</title><rect x="707.7" y="323.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (77 samples, 0.06%)</title><rect x="707.7" y="307.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="710.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (66 samples, 0.05%)</title><rect x="708.4" y="307.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (66 samples, 0.05%)</title><rect x="708.4" y="291.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="711.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (66 samples, 0.05%)</title><rect x="708.4" y="275.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="711.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (118 samples, 0.09%)</title><rect x="709.0" y="339.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (118 samples, 0.09%)</title><rect x="709.0" y="323.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (64 samples, 0.05%)</title><rect x="709.0" y="307.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="712.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.04%)</title><rect x="709.5" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.04%)</title><rect x="709.5" y="291.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="712.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.04%)</title><rect x="709.5" y="275.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="712.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (113 samples, 0.09%)</title><rect x="710.0" y="339.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="713.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (165 samples, 0.12%)</title><rect x="711.0" y="339.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="714.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1,896 samples, 1.43%)</title><rect x="712.5" y="339.0" width="16.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="715.5" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (225 samples, 0.17%)</title><rect x="712.5" y="323.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="715.5" y="334.0"></text>
</g>
<g>
<title>java/util/Collection.stream (174 samples, 0.13%)</title><rect x="712.5" y="307.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="715.5" y="318.0"></text>
</g>
<g>
<title>java/util/List.spliterator (73 samples, 0.06%)</title><rect x="712.5" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="715.5" y="302.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (73 samples, 0.06%)</title><rect x="712.5" y="275.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="715.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (101 samples, 0.08%)</title><rect x="713.1" y="291.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.1" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (101 samples, 0.08%)</title><rect x="713.1" y="275.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="716.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (51 samples, 0.04%)</title><rect x="714.0" y="307.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="717.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (51 samples, 0.04%)</title><rect x="714.0" y="291.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (51 samples, 0.04%)</title><rect x="714.0" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$55/1962826816.get (51 samples, 0.04%)</title><rect x="714.0" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="717.0" y="270.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (51 samples, 0.04%)</title><rect x="714.0" y="243.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="717.0" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (713 samples, 0.54%)</title><rect x="714.5" y="323.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="717.5" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (713 samples, 0.54%)</title><rect x="714.5" y="307.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="717.5" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (29 samples, 0.02%)</title><rect x="714.7" y="291.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="717.7" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap (88 samples, 0.07%)</title><rect x="714.9" y="291.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="717.9" y="302.0"></text>
</g>
<g>
<title>java.util.TreeSet (29 samples, 0.02%)</title><rect x="715.7" y="291.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="718.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (56 samples, 0.04%)</title><rect x="716.0" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (56 samples, 0.04%)</title><rect x="716.0" y="275.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.get$Lambda (56 samples, 0.04%)</title><rect x="716.0" y="259.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.0" y="270.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$149 (56 samples, 0.04%)</title><rect x="716.0" y="243.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="719.0" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (359 samples, 0.27%)</title><rect x="716.5" y="291.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.5" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (359 samples, 0.27%)</title><rect x="716.5" y="275.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.5" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.accept (359 samples, 0.27%)</title><rect x="716.5" y="259.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.5" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (359 samples, 0.27%)</title><rect x="716.5" y="243.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="719.5" y="254.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (173 samples, 0.13%)</title><rect x="716.5" y="227.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.5" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.accept (120 samples, 0.09%)</title><rect x="716.5" y="211.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="719.5" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (120 samples, 0.09%)</title><rect x="716.5" y="195.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.5" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (120 samples, 0.09%)</title><rect x="716.5" y="179.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.5" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (120 samples, 0.09%)</title><rect x="716.5" y="163.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="719.5" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (120 samples, 0.09%)</title><rect x="716.5" y="147.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (120 samples, 0.09%)</title><rect x="716.5" y="131.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="719.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (120 samples, 0.09%)</title><rect x="716.5" y="115.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.5" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (120 samples, 0.09%)</title><rect x="716.5" y="99.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="719.5" y="110.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (53 samples, 0.04%)</title><rect x="717.5" y="211.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="720.5" y="222.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (53 samples, 0.04%)</title><rect x="717.5" y="195.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="720.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.03%)</title><rect x="718.0" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="721.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.03%)</title><rect x="718.0" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="721.0" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.get$Lambda (40 samples, 0.03%)</title><rect x="718.0" y="195.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="721.0" y="206.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$157 (40 samples, 0.03%)</title><rect x="718.0" y="179.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="721.0" y="190.0"></text>
</g>
<g>
<title>java/util/List.copyOf (88 samples, 0.07%)</title><rect x="718.4" y="227.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.4" y="238.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (88 samples, 0.07%)</title><rect x="718.4" y="211.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.4" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (37 samples, 0.03%)</title><rect x="718.4" y="195.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (37 samples, 0.03%)</title><rect x="718.4" y="179.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.4" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (37 samples, 0.03%)</title><rect x="718.4" y="163.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="721.4" y="174.0"></text>
</g>
<g>
<title>java/util/List.of (51 samples, 0.04%)</title><rect x="718.7" y="195.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="721.7" y="206.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (51 samples, 0.04%)</title><rect x="718.7" y="179.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="721.7" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (58 samples, 0.04%)</title><rect x="719.1" y="227.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.1" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (58 samples, 0.04%)</title><rect x="719.1" y="211.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="722.1" y="222.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (52 samples, 0.04%)</title><rect x="719.7" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="722.7" y="302.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (52 samples, 0.04%)</title><rect x="719.7" y="275.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="722.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (82 samples, 0.06%)</title><rect x="720.1" y="291.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="723.1" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap (82 samples, 0.06%)</title><rect x="720.1" y="275.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="723.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (685 samples, 0.52%)</title><rect x="721.1" y="323.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.1" y="334.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (685 samples, 0.52%)</title><rect x="721.1" y="307.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.1" y="318.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (624 samples, 0.47%)</title><rect x="721.1" y="291.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.1" y="302.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (624 samples, 0.47%)</title><rect x="721.1" y="275.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="724.1" y="286.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (624 samples, 0.47%)</title><rect x="721.1" y="259.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.1" y="270.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (141 samples, 0.11%)</title><rect x="721.1" y="243.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="724.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (185 samples, 0.14%)</title><rect x="722.3" y="243.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.3" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (185 samples, 0.14%)</title><rect x="722.3" y="227.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="725.3" y="238.0"></text>
</g>
<g>
<title>byte[] (185 samples, 0.14%)</title><rect x="722.3" y="211.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="725.3" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (298 samples, 0.22%)</title><rect x="724.0" y="243.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="727.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (298 samples, 0.22%)</title><rect x="724.0" y="227.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="727.0" y="238.0"></text>
</g>
<g>
<title>java.lang.String (124 samples, 0.09%)</title><rect x="724.0" y="211.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="727.0" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (174 samples, 0.13%)</title><rect x="725.1" y="211.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.1" y="222.0"></text>
</g>
<g>
<title>byte[] (174 samples, 0.13%)</title><rect x="725.1" y="195.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="728.1" y="206.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (61 samples, 0.05%)</title><rect x="726.6" y="291.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="729.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (88 samples, 0.07%)</title><rect x="727.2" y="323.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.2" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (88 samples, 0.07%)</title><rect x="727.2" y="307.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="730.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (160 samples, 0.12%)</title><rect x="728.0" y="323.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.0" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (52 samples, 0.04%)</title><rect x="728.0" y="307.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="731.0" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (50 samples, 0.04%)</title><rect x="728.4" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.04%)</title><rect x="728.4" y="291.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="731.4" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (58 samples, 0.04%)</title><rect x="728.9" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.9" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (58 samples, 0.04%)</title><rect x="728.9" y="291.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="731.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (948 samples, 0.72%)</title><rect x="729.4" y="339.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (38 samples, 0.03%)</title><rect x="729.4" y="323.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="732.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (147 samples, 0.11%)</title><rect x="729.7" y="323.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="732.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (39 samples, 0.03%)</title><rect x="731.0" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (39 samples, 0.03%)</title><rect x="731.0" y="307.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="734.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (724 samples, 0.55%)</title><rect x="731.4" y="323.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (724 samples, 0.55%)</title><rect x="731.4" y="307.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="734.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Class[] (64 samples, 0.05%)</title><rect x="731.4" y="291.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="734.4" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (66 samples, 0.05%)</title><rect x="731.9" y="291.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="734.9" y="302.0"></text>
</g>
<g>
<title>java.util.LinkedList (65 samples, 0.05%)</title><rect x="732.5" y="291.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="735.5" y="302.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (296 samples, 0.22%)</title><rect x="733.1" y="291.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (296 samples, 0.22%)</title><rect x="733.1" y="275.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="736.1" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (296 samples, 0.22%)</title><rect x="733.1" y="259.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.1" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (296 samples, 0.22%)</title><rect x="733.1" y="243.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="736.1" y="254.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (296 samples, 0.22%)</title><rect x="733.1" y="227.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="736.1" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (86 samples, 0.06%)</title><rect x="735.7" y="291.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (86 samples, 0.06%)</title><rect x="735.7" y="275.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="738.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (61 samples, 0.05%)</title><rect x="736.0" y="259.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (61 samples, 0.05%)</title><rect x="736.0" y="243.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="739.0" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (65 samples, 0.05%)</title><rect x="736.5" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.5" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (65 samples, 0.05%)</title><rect x="736.5" y="275.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.5" y="286.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (65 samples, 0.05%)</title><rect x="736.5" y="259.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.5" y="270.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (65 samples, 0.05%)</title><rect x="736.5" y="243.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="739.5" y="254.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (82 samples, 0.06%)</title><rect x="737.1" y="291.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="740.1" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (82 samples, 0.06%)</title><rect x="737.1" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.1" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (82 samples, 0.06%)</title><rect x="737.1" y="259.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="740.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (480 samples, 0.36%)</title><rect x="737.8" y="339.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (87 samples, 0.07%)</title><rect x="737.8" y="323.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (41 samples, 0.03%)</title><rect x="737.8" y="307.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="740.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (46 samples, 0.03%)</title><rect x="738.2" y="307.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="741.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (46 samples, 0.03%)</title><rect x="738.2" y="291.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="741.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (40 samples, 0.03%)</title><rect x="738.2" y="275.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="741.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (55 samples, 0.04%)</title><rect x="738.6" y="323.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="741.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (338 samples, 0.26%)</title><rect x="739.1" y="323.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="742.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.04%)</title><rect x="739.1" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="742.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.04%)</title><rect x="739.1" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (284 samples, 0.21%)</title><rect x="739.6" y="307.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="742.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (284 samples, 0.21%)</title><rect x="739.6" y="291.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="742.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (148 samples, 0.11%)</title><rect x="739.6" y="275.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="742.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (136 samples, 0.10%)</title><rect x="740.9" y="275.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="743.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (136 samples, 0.10%)</title><rect x="740.9" y="259.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (136 samples, 0.10%)</title><rect x="740.9" y="243.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="743.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (35 samples, 0.03%)</title><rect x="742.7" y="531.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.7" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (35 samples, 0.03%)</title><rect x="742.7" y="515.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="745.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (65 samples, 0.05%)</title><rect x="743.0" y="547.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="746.0" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (65 samples, 0.05%)</title><rect x="743.0" y="531.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="746.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.from (11,110 samples, 8.38%)</title><rect x="743.6" y="563.0" width="98.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="746.6" y="574.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/532087022.linkToTargetMethod (4,507 samples, 3.40%)</title><rect x="743.6" y="547.0" width="40.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.6" y="558.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/764580014.invoke (4,507 samples, 3.40%)</title><rect x="743.6" y="531.0" width="40.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.6" y="542.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4,507 samples, 3.40%)</title><rect x="743.6" y="515.0" width="40.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="746.6" y="526.0">jav..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2,301 samples, 1.74%)</title><rect x="743.6" y="499.0" width="20.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.6" y="510.0"></text>
</g>
<g>
<title>java.lang.String (2,301 samples, 1.74%)</title><rect x="743.6" y="483.0" width="20.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="746.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2,206 samples, 1.66%)</title><rect x="764.0" y="499.0" width="19.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="767.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2,206 samples, 1.66%)</title><rect x="764.0" y="483.0" width="19.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="767.0" y="494.0"></text>
</g>
<g>
<title>byte[] (1,904 samples, 1.44%)</title><rect x="764.0" y="467.0" width="17.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="767.0" y="478.0"></text>
</g>
<g>
<title>byte[] (302 samples, 0.23%)</title><rect x="781.0" y="467.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="784.0" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Response (1,639 samples, 1.24%)</title><rect x="783.7" y="547.0" width="14.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="786.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4,964 samples, 3.75%)</title><rect x="798.3" y="547.0" width="44.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.3" y="558.0">one/..</text>
</g>
<g>
<title>byte[] (2,078 samples, 1.57%)</title><rect x="798.3" y="531.0" width="18.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="801.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (1,576 samples, 1.19%)</title><rect x="816.8" y="531.0" width="14.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="819.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (1,310 samples, 0.99%)</title><rect x="830.8" y="531.0" width="11.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="833.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.getHttpRequests (2,900 samples, 2.19%)</title><rect x="842.5" y="563.0" width="25.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.5" y="574.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.02%)</title><rect x="842.5" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="845.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.02%)</title><rect x="842.5" y="531.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="845.5" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (84 samples, 0.06%)</title><rect x="842.8" y="547.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="845.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (58 samples, 0.04%)</title><rect x="843.0" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="846.0" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (58 samples, 0.04%)</title><rect x="843.0" y="515.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="846.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (32 samples, 0.02%)</title><rect x="843.5" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="846.5" y="558.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (32 samples, 0.02%)</title><rect x="843.5" y="531.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="846.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (2,318 samples, 1.75%)</title><rect x="843.8" y="547.0" width="20.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="846.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2,288 samples, 1.73%)</title><rect x="843.8" y="531.0" width="20.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="846.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2,288 samples, 1.73%)</title><rect x="843.8" y="515.0" width="20.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="846.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2,261 samples, 1.71%)</title><rect x="843.8" y="499.0" width="20.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="846.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2,116 samples, 1.60%)</title><rect x="843.8" y="483.0" width="18.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.8" y="494.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (33 samples, 0.02%)</title><rect x="843.8" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="846.8" y="478.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (33 samples, 0.02%)</title><rect x="843.8" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="846.8" y="462.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.iterator (33 samples, 0.02%)</title><rect x="843.8" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="846.8" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN$SetNIterator (33 samples, 0.02%)</title><rect x="843.8" y="419.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="846.8" y="430.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.forEachRemaining (2,062 samples, 1.56%)</title><rect x="844.1" y="467.0" width="18.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="847.1" y="478.0"></text>
</g>
<g>
<title>java/util/Iterator.forEachRemaining (2,062 samples, 1.56%)</title><rect x="844.1" y="451.0" width="18.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2,062 samples, 1.56%)</title><rect x="844.1" y="435.0" width="18.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="847.1" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,062 samples, 1.56%)</title><rect x="844.1" y="419.0" width="18.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="847.1" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,899 samples, 1.43%)</title><rect x="844.1" y="403.0" width="16.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="847.1" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,216 samples, 0.92%)</title><rect x="844.1" y="387.0" width="10.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="847.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,037 samples, 0.78%)</title><rect x="844.1" y="371.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="847.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,037 samples, 0.78%)</title><rect x="844.1" y="355.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="847.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (50 samples, 0.04%)</title><rect x="844.1" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="847.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$133/1101094733.accept (50 samples, 0.04%)</title><rect x="844.1" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (50 samples, 0.04%)</title><rect x="844.1" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="847.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (50 samples, 0.04%)</title><rect x="844.1" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="847.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (50 samples, 0.04%)</title><rect x="844.1" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="847.1" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (50 samples, 0.04%)</title><rect x="844.1" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="847.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (50 samples, 0.04%)</title><rect x="844.1" y="243.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="847.1" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.04%)</title><rect x="844.1" y="227.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="847.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils$$Lambda$129/283467809.apply (987 samples, 0.74%)</title><rect x="844.5" y="339.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="847.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.lambda$getHttpRequests$2 (987 samples, 0.74%)</title><rect x="844.5" y="323.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="847.5" y="334.0"></text>
</g>
<g>
<title>java/time/Duration.ofMillis (39 samples, 0.03%)</title><rect x="844.5" y="307.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="847.5" y="318.0"></text>
</g>
<g>
<title>java/time/Duration.create (39 samples, 0.03%)</title><rect x="844.5" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="847.5" y="302.0"></text>
</g>
<g>
<title>java.time.Duration (39 samples, 0.03%)</title><rect x="844.5" y="275.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="847.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (778 samples, 0.59%)</title><rect x="844.9" y="307.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="847.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (63 samples, 0.05%)</title><rect x="844.9" y="291.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="847.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (715 samples, 0.54%)</title><rect x="845.4" y="291.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="848.4" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (688 samples, 0.52%)</title><rect x="845.4" y="275.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.4" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (688 samples, 0.52%)</title><rect x="845.4" y="259.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.4" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (47 samples, 0.04%)</title><rect x="845.7" y="243.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="848.7" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap (101 samples, 0.08%)</title><rect x="846.1" y="243.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="849.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (45 samples, 0.03%)</title><rect x="847.2" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 0.03%)</title><rect x="847.2" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="850.2" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.get$Lambda (45 samples, 0.03%)</title><rect x="847.2" y="211.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.2" y="222.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$149 (45 samples, 0.03%)</title><rect x="847.2" y="195.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="850.2" y="206.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (50 samples, 0.04%)</title><rect x="847.6" y="243.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.6" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (50 samples, 0.04%)</title><rect x="847.6" y="227.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="850.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (307 samples, 0.23%)</title><rect x="848.1" y="243.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="851.1" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.accept (307 samples, 0.23%)</title><rect x="848.1" y="227.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="851.1" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (307 samples, 0.23%)</title><rect x="848.1" y="211.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.03%)</title><rect x="848.1" y="195.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="851.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.03%)</title><rect x="848.1" y="179.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="851.1" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.get$Lambda (35 samples, 0.03%)</title><rect x="848.1" y="163.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.1" y="174.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$157 (35 samples, 0.03%)</title><rect x="848.1" y="147.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="851.1" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (110 samples, 0.08%)</title><rect x="848.4" y="195.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="851.4" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.accept (110 samples, 0.08%)</title><rect x="848.4" y="179.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="851.4" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (110 samples, 0.08%)</title><rect x="848.4" y="163.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="851.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (110 samples, 0.08%)</title><rect x="848.4" y="147.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="851.4" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (110 samples, 0.08%)</title><rect x="848.4" y="131.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.4" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (110 samples, 0.08%)</title><rect x="848.4" y="115.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.4" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (110 samples, 0.08%)</title><rect x="848.4" y="99.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.4" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (110 samples, 0.08%)</title><rect x="848.4" y="83.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="851.4" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (110 samples, 0.08%)</title><rect x="848.4" y="67.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="851.4" y="78.0"></text>
</g>
<g>
<title>java/util/List.copyOf (78 samples, 0.06%)</title><rect x="849.3" y="195.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="852.3" y="206.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (78 samples, 0.06%)</title><rect x="849.3" y="179.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="852.3" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (43 samples, 0.03%)</title><rect x="849.3" y="163.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.3" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (43 samples, 0.03%)</title><rect x="849.3" y="147.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="852.3" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (43 samples, 0.03%)</title><rect x="849.3" y="131.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="852.3" y="142.0"></text>
</g>
<g>
<title>java/util/List.of (35 samples, 0.03%)</title><rect x="849.7" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="852.7" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (35 samples, 0.03%)</title><rect x="849.7" y="147.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="852.7" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (84 samples, 0.06%)</title><rect x="850.0" y="195.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.0" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (84 samples, 0.06%)</title><rect x="850.0" y="179.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="853.0" y="190.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (87 samples, 0.07%)</title><rect x="850.8" y="243.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.8" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap (87 samples, 0.07%)</title><rect x="850.8" y="227.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="853.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (170 samples, 0.13%)</title><rect x="851.8" y="307.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (170 samples, 0.13%)</title><rect x="851.8" y="291.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="854.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (170 samples, 0.13%)</title><rect x="851.8" y="275.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="854.8" y="286.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (170 samples, 0.13%)</title><rect x="851.8" y="259.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.8" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (79 samples, 0.06%)</title><rect x="851.8" y="243.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="854.8" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (79 samples, 0.06%)</title><rect x="851.8" y="227.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="854.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$139/805606869.apply (91 samples, 0.07%)</title><rect x="852.5" y="243.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (91 samples, 0.07%)</title><rect x="852.5" y="227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="855.5" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (39 samples, 0.03%)</title><rect x="852.5" y="211.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="855.5" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (52 samples, 0.04%)</title><rect x="852.9" y="211.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="855.9" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (52 samples, 0.04%)</title><rect x="852.9" y="195.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="855.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils$$Lambda$127/562995202.apply (179 samples, 0.14%)</title><rect x="853.3" y="371.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.3" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (179 samples, 0.14%)</title><rect x="853.3" y="355.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (65 samples, 0.05%)</title><rect x="853.3" y="339.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="856.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (114 samples, 0.09%)</title><rect x="853.9" y="339.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="856.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (31 samples, 0.02%)</title><rect x="853.9" y="323.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="856.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (83 samples, 0.06%)</title><rect x="854.2" y="323.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="857.2" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (83 samples, 0.06%)</title><rect x="854.2" y="307.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="857.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils$$Lambda$124/1622387257.apply (683 samples, 0.52%)</title><rect x="854.9" y="387.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="857.9" y="398.0"></text>
</g>
<g>
<title>java/net/URI.create (683 samples, 0.52%)</title><rect x="854.9" y="371.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="857.9" y="382.0"></text>
</g>
<g>
<title>java.net.URI (130 samples, 0.10%)</title><rect x="854.9" y="355.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="857.9" y="366.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (553 samples, 0.42%)</title><rect x="856.1" y="355.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="859.1" y="366.0"></text>
</g>
<g>
<title>java.net.URI$Parser (60 samples, 0.05%)</title><rect x="856.1" y="339.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="859.1" y="350.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (493 samples, 0.37%)</title><rect x="856.6" y="339.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (75 samples, 0.06%)</title><rect x="856.6" y="323.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="859.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (75 samples, 0.06%)</title><rect x="856.6" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.6" y="318.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.03%)</title><rect x="856.6" y="291.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="859.6" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (37 samples, 0.03%)</title><rect x="856.9" y="291.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.9" y="302.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.03%)</title><rect x="856.9" y="275.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="859.9" y="286.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (418 samples, 0.32%)</title><rect x="857.3" y="323.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="860.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (219 samples, 0.17%)</title><rect x="857.3" y="307.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="860.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (219 samples, 0.17%)</title><rect x="857.3" y="291.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="860.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (94 samples, 0.07%)</title><rect x="857.3" y="275.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="860.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (125 samples, 0.09%)</title><rect x="858.1" y="275.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="861.1" y="286.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.09%)</title><rect x="858.1" y="259.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="861.1" y="270.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (199 samples, 0.15%)</title><rect x="859.2" y="307.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="862.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (93 samples, 0.07%)</title><rect x="859.2" y="291.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="862.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (93 samples, 0.07%)</title><rect x="859.2" y="275.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="862.2" y="286.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.03%)</title><rect x="859.2" y="259.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="862.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (54 samples, 0.04%)</title><rect x="859.6" y="259.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="862.6" y="270.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.04%)</title><rect x="859.6" y="243.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="862.6" y="254.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (106 samples, 0.08%)</title><rect x="860.1" y="291.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="863.1" y="302.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (106 samples, 0.08%)</title><rect x="860.1" y="275.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="863.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (106 samples, 0.08%)</title><rect x="860.1" y="259.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="863.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (106 samples, 0.08%)</title><rect x="860.1" y="243.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="863.1" y="254.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.04%)</title><rect x="860.1" y="227.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="863.1" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (58 samples, 0.04%)</title><rect x="860.5" y="227.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="863.5" y="238.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.04%)</title><rect x="860.5" y="211.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="863.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils$$Lambda$121/1369809361.apply (163 samples, 0.12%)</title><rect x="861.0" y="403.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="864.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.lambda$getHttpRequests$1 (163 samples, 0.12%)</title><rect x="861.0" y="387.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (163 samples, 0.12%)</title><rect x="861.0" y="371.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="864.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (163 samples, 0.12%)</title><rect x="861.0" y="355.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="864.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1089418272.invoke (163 samples, 0.12%)</title><rect x="861.0" y="339.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="864.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (163 samples, 0.12%)</title><rect x="861.0" y="323.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="864.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (44 samples, 0.03%)</title><rect x="861.0" y="307.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="864.0" y="318.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.03%)</title><rect x="861.0" y="291.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="864.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (119 samples, 0.09%)</title><rect x="861.4" y="307.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="864.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (119 samples, 0.09%)</title><rect x="861.4" y="291.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="864.4" y="302.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.09%)</title><rect x="861.4" y="275.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="864.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (145 samples, 0.11%)</title><rect x="862.6" y="483.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="865.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (119 samples, 0.09%)</title><rect x="862.9" y="467.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.9" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (119 samples, 0.09%)</title><rect x="862.9" y="451.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="865.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (30 samples, 0.02%)</title><rect x="864.2" y="531.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.2" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (30 samples, 0.02%)</title><rect x="864.2" y="515.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="867.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (65 samples, 0.05%)</title><rect x="864.4" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.4" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (65 samples, 0.05%)</title><rect x="864.4" y="531.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="867.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (317 samples, 0.24%)</title><rect x="865.0" y="547.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="868.0" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (317 samples, 0.24%)</title><rect x="865.0" y="531.0" width="2.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="868.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/BasicTopology.all (52 samples, 0.04%)</title><rect x="867.8" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="870.8" y="558.0"></text>
</g>
<g>
<title>java/util/Set.of (52 samples, 0.04%)</title><rect x="867.8" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="870.8" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (37 samples, 0.03%)</title><rect x="868.0" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="871.0" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (37 samples, 0.03%)</title><rect x="868.0" y="499.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="871.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ValueUtils.from (3,924 samples, 2.96%)</title><rect x="868.3" y="563.0" width="34.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="871.3" y="574.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/Value.present (3,924 samples, 2.96%)</title><rect x="868.3" y="547.0" width="34.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="871.3" y="558.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2,394 samples, 1.81%)</title><rect x="868.3" y="531.0" width="21.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="871.3" y="542.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,394 samples, 1.81%)</title><rect x="868.3" y="515.0" width="21.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="871.3" y="526.0">j..</text>
</g>
<g>
<title>ru.mail.polis.service.rubtsov.Value (1,530 samples, 1.15%)</title><rect x="889.6" y="531.0" width="13.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="892.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (5,933 samples, 4.48%)</title><rect x="903.2" y="691.0" width="52.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="906.2" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (5,933 samples, 4.48%)</title><rect x="903.2" y="675.0" width="52.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="906.2" y="686.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (5,933 samples, 4.48%)</title><rect x="903.2" y="659.0" width="52.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="906.2" y="670.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (5,933 samples, 4.48%)</title><rect x="903.2" y="643.0" width="52.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.2" y="654.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (5,933 samples, 4.48%)</title><rect x="903.2" y="627.0" width="52.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.2" y="638.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (5,933 samples, 4.48%)</title><rect x="903.2" y="611.0" width="52.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.2" y="622.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,173 samples, 1.64%)</title><rect x="903.2" y="595.0" width="19.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="906.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (152 samples, 0.11%)</title><rect x="903.2" y="579.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="906.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$409/939600287.apply (2,021 samples, 1.52%)</title><rect x="904.6" y="579.0" width="18.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="907.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$get$4 (2,021 samples, 1.52%)</title><rect x="904.6" y="563.0" width="18.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/FutureUtils.getFutureResponses (2,021 samples, 1.52%)</title><rect x="904.6" y="547.0" width="18.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (117 samples, 0.09%)</title><rect x="904.6" y="531.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="907.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (122 samples, 0.09%)</title><rect x="905.6" y="531.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="908.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (122 samples, 0.09%)</title><rect x="906.7" y="531.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="909.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/335139775.linkToTargetMethod (148 samples, 0.11%)</title><rect x="907.8" y="531.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="910.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1012184681.invokeStatic (148 samples, 0.11%)</title><rect x="907.8" y="515.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="910.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/FutureUtils$$Lambda$210/579933996.get$Lambda (148 samples, 0.11%)</title><rect x="907.8" y="499.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="910.8" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rubtsov.FutureUtils$$Lambda$210 (148 samples, 0.11%)</title><rect x="907.8" y="483.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="910.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (668 samples, 0.50%)</title><rect x="909.1" y="531.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="912.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (668 samples, 0.50%)</title><rect x="909.1" y="515.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="912.1" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (393 samples, 0.30%)</title><rect x="909.1" y="499.0" width="3.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="912.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (275 samples, 0.21%)</title><rect x="912.6" y="499.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="915.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (275 samples, 0.21%)</title><rect x="912.6" y="483.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="915.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (275 samples, 0.21%)</title><rect x="912.6" y="467.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="915.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (679 samples, 0.51%)</title><rect x="915.1" y="531.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (679 samples, 0.51%)</title><rect x="915.1" y="515.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="918.1" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (381 samples, 0.29%)</title><rect x="915.1" y="499.0" width="3.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="918.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (298 samples, 0.22%)</title><rect x="918.5" y="499.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="921.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (298 samples, 0.22%)</title><rect x="918.5" y="483.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="921.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (298 samples, 0.22%)</title><rect x="918.5" y="467.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="921.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (165 samples, 0.12%)</title><rect x="921.1" y="531.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="924.1" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (89 samples, 0.07%)</title><rect x="921.1" y="515.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="924.1" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (76 samples, 0.06%)</title><rect x="921.9" y="515.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="924.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3,760 samples, 2.84%)</title><rect x="922.6" y="595.0" width="33.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="925.6" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3,760 samples, 2.84%)</title><rect x="922.6" y="579.0" width="33.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="925.6" y="590.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/FutureUtils$$Lambda$210/579933996.accept (185 samples, 0.14%)</title><rect x="922.6" y="563.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="925.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/FutureUtils.lambda$getFutureResponses$0 (185 samples, 0.14%)</title><rect x="922.6" y="547.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="925.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (185 samples, 0.14%)</title><rect x="922.6" y="531.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="925.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (185 samples, 0.14%)</title><rect x="922.6" y="515.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="925.6" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (185 samples, 0.14%)</title><rect x="922.6" y="499.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="925.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$411/1690616023.accept (3,575 samples, 2.70%)</title><rect x="924.2" y="563.0" width="31.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="927.2" y="574.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$get$5 (3,575 samples, 2.70%)</title><rect x="924.2" y="547.0" width="31.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="927.2" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.handleGetResponses (3,575 samples, 2.70%)</title><rect x="924.2" y="531.0" width="31.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="927.2" y="542.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (628 samples, 0.47%)</title><rect x="924.2" y="515.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="927.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (628 samples, 0.47%)</title><rect x="924.2" y="499.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="927.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (430 samples, 0.32%)</title><rect x="924.2" y="483.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="927.2" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (430 samples, 0.32%)</title><rect x="924.2" y="467.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="927.2" y="478.0"></text>
</g>
<g>
<title>byte[] (430 samples, 0.32%)</title><rect x="924.2" y="451.0" width="3.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="927.2" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (198 samples, 0.15%)</title><rect x="928.1" y="483.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="931.1" y="494.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (198 samples, 0.15%)</title><rect x="928.1" y="467.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="931.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.from (587 samples, 0.44%)</title><rect x="929.8" y="515.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="932.8" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Response (114 samples, 0.09%)</title><rect x="929.8" y="499.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="932.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (473 samples, 0.36%)</title><rect x="930.8" y="499.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="933.8" y="510.0"></text>
</g>
<g>
<title>byte[] (200 samples, 0.15%)</title><rect x="930.8" y="483.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="933.8" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (156 samples, 0.12%)</title><rect x="932.6" y="483.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="935.6" y="494.0"></text>
</g>
<g>
<title>java.lang.String (117 samples, 0.09%)</title><rect x="934.0" y="483.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="937.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ValueUtils.from (1,030 samples, 0.78%)</title><rect x="935.0" y="515.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="938.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (611 samples, 0.46%)</title><rect x="935.0" y="499.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="938.0" y="510.0"></text>
</g>
<g>
<title>java/util/Collection.stream (419 samples, 0.32%)</title><rect x="935.0" y="483.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="938.0" y="494.0"></text>
</g>
<g>
<title>java/util/List.spliterator (149 samples, 0.11%)</title><rect x="935.0" y="467.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="938.0" y="478.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (149 samples, 0.11%)</title><rect x="935.0" y="451.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="938.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (270 samples, 0.20%)</title><rect x="936.4" y="467.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="939.4" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (270 samples, 0.20%)</title><rect x="936.4" y="451.0" width="2.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="939.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (192 samples, 0.14%)</title><rect x="938.8" y="483.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="941.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (192 samples, 0.14%)</title><rect x="938.8" y="467.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="941.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (192 samples, 0.14%)</title><rect x="938.8" y="451.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="941.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$55/1962826816.get (118 samples, 0.09%)</title><rect x="938.8" y="435.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.8" y="446.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (118 samples, 0.09%)</title><rect x="938.8" y="419.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="941.8" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (74 samples, 0.06%)</title><rect x="939.8" y="435.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="942.8" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (74 samples, 0.06%)</title><rect x="939.8" y="419.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="942.8" y="430.0"></text>
</g>
<g>
<title>java/util/Optional.of (74 samples, 0.06%)</title><rect x="939.8" y="403.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="942.8" y="414.0"></text>
</g>
<g>
<title>java.util.Optional (74 samples, 0.06%)</title><rect x="939.8" y="387.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="942.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/Value.present (419 samples, 0.32%)</title><rect x="940.5" y="499.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="943.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (256 samples, 0.19%)</title><rect x="940.5" y="483.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="943.5" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (256 samples, 0.19%)</title><rect x="940.5" y="467.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="943.5" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rubtsov.Value (163 samples, 0.12%)</title><rect x="942.8" y="483.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="945.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ValueUtils.merge (1,330 samples, 1.00%)</title><rect x="944.2" y="515.0" width="11.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.2" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (460 samples, 0.35%)</title><rect x="944.2" y="499.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (171 samples, 0.13%)</title><rect x="944.2" y="483.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.2" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (171 samples, 0.13%)</title><rect x="944.2" y="467.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="947.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (289 samples, 0.22%)</title><rect x="945.7" y="483.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="948.7" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (289 samples, 0.22%)</title><rect x="945.7" y="467.0" width="2.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="948.7" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (72 samples, 0.05%)</title><rect x="948.3" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (72 samples, 0.05%)</title><rect x="948.3" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="951.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (72 samples, 0.05%)</title><rect x="948.3" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="951.3" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$420/1118439972.get$Lambda (72 samples, 0.05%)</title><rect x="948.3" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="951.3" y="462.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$420 (72 samples, 0.05%)</title><rect x="948.3" y="435.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="951.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (299 samples, 0.23%)</title><rect x="949.0" y="499.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.0" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (299 samples, 0.23%)</title><rect x="949.0" y="483.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="952.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (499 samples, 0.38%)</title><rect x="951.6" y="499.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="954.6" y="510.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (83 samples, 0.06%)</title><rect x="951.6" y="483.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="954.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (83 samples, 0.06%)</title><rect x="951.6" y="467.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="954.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (83 samples, 0.06%)</title><rect x="951.6" y="451.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="954.6" y="462.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$421/767090991.get$Lambda (83 samples, 0.06%)</title><rect x="951.6" y="435.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="954.6" y="446.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$421 (83 samples, 0.06%)</title><rect x="951.6" y="419.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="954.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (416 samples, 0.31%)</title><rect x="952.4" y="483.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="955.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (307 samples, 0.23%)</title><rect x="952.4" y="467.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="955.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (307 samples, 0.23%)</title><rect x="952.4" y="451.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="955.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (115 samples, 0.09%)</title><rect x="952.4" y="435.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="955.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (115 samples, 0.09%)</title><rect x="952.4" y="419.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="955.4" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (115 samples, 0.09%)</title><rect x="952.4" y="403.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="955.4" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (115 samples, 0.09%)</title><rect x="952.4" y="387.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="955.4" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (115 samples, 0.09%)</title><rect x="953.4" y="435.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="956.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (115 samples, 0.09%)</title><rect x="953.4" y="419.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="956.4" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (115 samples, 0.09%)</title><rect x="953.4" y="403.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="956.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (77 samples, 0.06%)</title><rect x="954.4" y="435.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="957.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (77 samples, 0.06%)</title><rect x="954.4" y="419.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="957.4" y="430.0"></text>
</g>
<g>
<title>java/util/Optional.of (77 samples, 0.06%)</title><rect x="954.4" y="403.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="957.4" y="414.0"></text>
</g>
<g>
<title>java.util.Optional (77 samples, 0.06%)</title><rect x="954.4" y="387.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="957.4" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (109 samples, 0.08%)</title><rect x="955.1" y="467.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="958.1" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (109 samples, 0.08%)</title><rect x="955.1" y="451.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="958.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (2,141 samples, 1.62%)</title><rect x="956.1" y="691.0" width="19.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="959.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.03%)</title><rect x="956.1" y="675.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="959.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.03%)</title><rect x="956.1" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="959.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$315/346158750.get$Lambda (33 samples, 0.02%)</title><rect x="956.1" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="959.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$315 (33 samples, 0.02%)</title><rect x="956.1" y="627.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="959.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1995250556.linkToTargetMethod (56 samples, 0.04%)</title><rect x="956.5" y="675.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="959.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (56 samples, 0.04%)</title><rect x="956.5" y="659.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="959.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$316/248695201.get$Lambda (56 samples, 0.04%)</title><rect x="956.5" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="959.5" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$316 (56 samples, 0.04%)</title><rect x="956.5" y="627.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="959.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (627 samples, 0.47%)</title><rect x="957.0" y="675.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="960.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$317/1029786317.accept (547 samples, 0.41%)</title><rect x="957.0" y="659.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (547 samples, 0.41%)</title><rect x="957.0" y="643.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="960.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (547 samples, 0.41%)</title><rect x="957.0" y="627.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (547 samples, 0.41%)</title><rect x="957.0" y="611.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="960.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (547 samples, 0.41%)</title><rect x="957.0" y="595.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (547 samples, 0.41%)</title><rect x="957.0" y="579.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="960.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (547 samples, 0.41%)</title><rect x="957.0" y="563.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="960.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (547 samples, 0.41%)</title><rect x="957.0" y="547.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (547 samples, 0.41%)</title><rect x="957.0" y="531.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="960.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (547 samples, 0.41%)</title><rect x="957.0" y="515.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="960.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$238/1293482513.run (547 samples, 0.41%)</title><rect x="957.0" y="499.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="960.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (547 samples, 0.41%)</title><rect x="957.0" y="483.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="960.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (104 samples, 0.08%)</title><rect x="957.0" y="467.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (104 samples, 0.08%)</title><rect x="957.0" y="451.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="960.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (104 samples, 0.08%)</title><rect x="957.0" y="435.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (52 samples, 0.04%)</title><rect x="957.0" y="419.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="960.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (52 samples, 0.04%)</title><rect x="957.0" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="960.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (52 samples, 0.04%)</title><rect x="957.0" y="387.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="960.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (52 samples, 0.04%)</title><rect x="957.0" y="371.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="960.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (52 samples, 0.04%)</title><rect x="957.0" y="355.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="960.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (52 samples, 0.04%)</title><rect x="957.4" y="419.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="960.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (52 samples, 0.04%)</title><rect x="957.4" y="403.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (52 samples, 0.04%)</title><rect x="957.4" y="387.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (52 samples, 0.04%)</title><rect x="957.4" y="371.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="960.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (52 samples, 0.04%)</title><rect x="957.4" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="960.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (52 samples, 0.04%)</title><rect x="957.4" y="339.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="960.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (33 samples, 0.02%)</title><rect x="957.9" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.02%)</title><rect x="957.9" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="960.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.02%)</title><rect x="957.9" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$328/562141945.get$Lambda (33 samples, 0.02%)</title><rect x="957.9" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="960.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$328 (33 samples, 0.02%)</title><rect x="957.9" y="403.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="960.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (405 samples, 0.31%)</title><rect x="958.2" y="467.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="961.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (163 samples, 0.12%)</title><rect x="958.2" y="451.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="961.2" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (104 samples, 0.08%)</title><rect x="958.2" y="435.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="961.2" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (104 samples, 0.08%)</title><rect x="958.2" y="419.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="961.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (59 samples, 0.04%)</title><rect x="959.2" y="435.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="962.2" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (59 samples, 0.04%)</title><rect x="959.2" y="419.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="962.2" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (59 samples, 0.04%)</title><rect x="959.2" y="403.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="962.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (242 samples, 0.18%)</title><rect x="959.7" y="451.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="962.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$235/1088281802.get (242 samples, 0.18%)</title><rect x="959.7" y="435.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="962.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (242 samples, 0.18%)</title><rect x="959.7" y="419.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="962.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (242 samples, 0.18%)</title><rect x="959.7" y="403.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="962.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (241 samples, 0.18%)</title><rect x="959.7" y="387.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="962.7" y="398.0"></text>
</g>
<g>
<title>byte[] (221 samples, 0.17%)</title><rect x="959.9" y="371.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="962.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$320/412918576.accept (80 samples, 0.06%)</title><rect x="961.8" y="659.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="964.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (80 samples, 0.06%)</title><rect x="961.8" y="643.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="964.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$316/248695201.run (80 samples, 0.06%)</title><rect x="961.8" y="627.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="964.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (80 samples, 0.06%)</title><rect x="961.8" y="611.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="964.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (80 samples, 0.06%)</title><rect x="961.8" y="595.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="964.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (80 samples, 0.06%)</title><rect x="961.8" y="579.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="964.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (80 samples, 0.06%)</title><rect x="961.8" y="563.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="964.8" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (80 samples, 0.06%)</title><rect x="961.8" y="547.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="964.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (146 samples, 0.11%)</title><rect x="962.6" y="675.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="965.6" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (146 samples, 0.11%)</title><rect x="962.6" y="659.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="965.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (114 samples, 0.09%)</title><rect x="963.9" y="675.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="966.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (62 samples, 0.05%)</title><rect x="963.9" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="966.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (62 samples, 0.05%)</title><rect x="963.9" y="643.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="966.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (62 samples, 0.05%)</title><rect x="963.9" y="627.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (62 samples, 0.05%)</title><rect x="963.9" y="611.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (62 samples, 0.05%)</title><rect x="963.9" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (62 samples, 0.05%)</title><rect x="963.9" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.9" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (62 samples, 0.05%)</title><rect x="963.9" y="563.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="966.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (52 samples, 0.04%)</title><rect x="964.4" y="659.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.4" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (52 samples, 0.04%)</title><rect x="964.4" y="643.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="967.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (365 samples, 0.28%)</title><rect x="964.9" y="675.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/108890628.run (184 samples, 0.14%)</title><rect x="964.9" y="659.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="967.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (184 samples, 0.14%)</title><rect x="964.9" y="643.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="967.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (184 samples, 0.14%)</title><rect x="964.9" y="627.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (184 samples, 0.14%)</title><rect x="964.9" y="611.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="967.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (184 samples, 0.14%)</title><rect x="964.9" y="595.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="967.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (184 samples, 0.14%)</title><rect x="964.9" y="579.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$238/1293482513.run (184 samples, 0.14%)</title><rect x="964.9" y="563.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (184 samples, 0.14%)</title><rect x="964.9" y="547.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (182 samples, 0.14%)</title><rect x="964.9" y="531.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (182 samples, 0.14%)</title><rect x="964.9" y="515.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="967.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (123 samples, 0.09%)</title><rect x="964.9" y="499.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="967.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (123 samples, 0.09%)</title><rect x="964.9" y="483.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (123 samples, 0.09%)</title><rect x="964.9" y="467.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="967.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/532087022.linkToTargetMethod (80 samples, 0.06%)</title><rect x="964.9" y="451.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1403704789.invoke (80 samples, 0.06%)</title><rect x="964.9" y="435.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.06%)</title><rect x="964.9" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="967.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (80 samples, 0.06%)</title><rect x="964.9" y="403.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (80 samples, 0.06%)</title><rect x="964.9" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="967.9" y="398.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.06%)</title><rect x="964.9" y="371.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="967.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (43 samples, 0.03%)</title><rect x="965.6" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="968.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.03%)</title><rect x="965.6" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.03%)</title><rect x="965.6" y="419.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$328/562141945.get$Lambda (43 samples, 0.03%)</title><rect x="965.6" y="403.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="968.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$328 (43 samples, 0.03%)</title><rect x="965.6" y="387.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="968.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (59 samples, 0.04%)</title><rect x="966.0" y="499.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="969.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (59 samples, 0.04%)</title><rect x="966.0" y="483.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="969.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (59 samples, 0.04%)</title><rect x="966.0" y="467.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="969.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (59 samples, 0.04%)</title><rect x="966.0" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="969.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (59 samples, 0.04%)</title><rect x="966.0" y="435.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (59 samples, 0.04%)</title><rect x="966.0" y="419.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="969.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (58 samples, 0.04%)</title><rect x="966.0" y="403.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="969.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$246/1261412757.run (181 samples, 0.14%)</title><rect x="966.5" y="659.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (181 samples, 0.14%)</title><rect x="966.5" y="643.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="969.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (84 samples, 0.06%)</title><rect x="966.5" y="627.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="969.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (84 samples, 0.06%)</title><rect x="966.5" y="611.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="969.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$324/1583117545.get$Lambda (84 samples, 0.06%)</title><rect x="966.5" y="595.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$324 (84 samples, 0.06%)</title><rect x="966.5" y="579.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="969.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (97 samples, 0.07%)</title><rect x="967.3" y="627.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="970.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (97 samples, 0.07%)</title><rect x="967.3" y="611.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="970.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (97 samples, 0.07%)</title><rect x="967.3" y="595.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (97 samples, 0.07%)</title><rect x="967.3" y="579.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="970.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (233 samples, 0.18%)</title><rect x="968.1" y="675.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.1" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (59 samples, 0.04%)</title><rect x="968.1" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="971.1" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (59 samples, 0.04%)</title><rect x="968.1" y="643.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="971.1" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (59 samples, 0.04%)</title><rect x="968.1" y="627.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.1" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (59 samples, 0.04%)</title><rect x="968.1" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="971.1" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (59 samples, 0.04%)</title><rect x="968.1" y="595.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="971.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (174 samples, 0.13%)</title><rect x="968.6" y="659.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="971.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.02%)</title><rect x="968.6" y="643.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="971.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.02%)</title><rect x="968.6" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$387/1694286803.get$Lambda (29 samples, 0.02%)</title><rect x="968.6" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$387 (29 samples, 0.02%)</title><rect x="968.6" y="595.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="971.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (145 samples, 0.11%)</title><rect x="968.9" y="643.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="971.9" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (50 samples, 0.04%)</title><rect x="968.9" y="627.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="971.9" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (95 samples, 0.07%)</title><rect x="969.3" y="627.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.3" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (95 samples, 0.07%)</title><rect x="969.3" y="611.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.3" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (95 samples, 0.07%)</title><rect x="969.3" y="595.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="972.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (363 samples, 0.27%)</title><rect x="970.2" y="675.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.03%)</title><rect x="970.2" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.03%)</title><rect x="970.2" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="973.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$314/437596836.get$Lambda (36 samples, 0.03%)</title><rect x="970.2" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="973.2" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$314 (36 samples, 0.03%)</title><rect x="970.2" y="611.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="973.2" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (209 samples, 0.16%)</title><rect x="970.5" y="659.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="973.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (84 samples, 0.06%)</title><rect x="970.5" y="643.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.5" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (84 samples, 0.06%)</title><rect x="970.5" y="627.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="973.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (125 samples, 0.09%)</title><rect x="971.3" y="643.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="974.3" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (125 samples, 0.09%)</title><rect x="971.3" y="627.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="974.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (118 samples, 0.09%)</title><rect x="972.4" y="659.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="975.4" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (118 samples, 0.09%)</title><rect x="972.4" y="643.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="975.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (112 samples, 0.08%)</title><rect x="973.4" y="675.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="976.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (112 samples, 0.08%)</title><rect x="973.4" y="659.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (112 samples, 0.08%)</title><rect x="973.4" y="643.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="976.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (112 samples, 0.08%)</title><rect x="973.4" y="627.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="976.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (45 samples, 0.03%)</title><rect x="973.4" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="976.4" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (45 samples, 0.03%)</title><rect x="973.4" y="595.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="976.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (67 samples, 0.05%)</title><rect x="973.8" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="976.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (67 samples, 0.05%)</title><rect x="973.8" y="595.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="976.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (67 samples, 0.05%)</title><rect x="973.8" y="579.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="976.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (67 samples, 0.05%)</title><rect x="973.8" y="563.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="976.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (67 samples, 0.05%)</title><rect x="973.8" y="547.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="976.8" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (67 samples, 0.05%)</title><rect x="973.8" y="531.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="976.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (41 samples, 0.03%)</title><rect x="974.4" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="977.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (41 samples, 0.03%)</title><rect x="974.4" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="977.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (41 samples, 0.03%)</title><rect x="974.4" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="977.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (41 samples, 0.03%)</title><rect x="974.4" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="977.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (32 samples, 0.02%)</title><rect x="974.4" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="977.4" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (32 samples, 0.02%)</title><rect x="974.4" y="595.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="977.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (38 samples, 0.03%)</title><rect x="974.8" y="675.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="977.8" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (38 samples, 0.03%)</title><rect x="974.8" y="659.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.8" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (38 samples, 0.03%)</title><rect x="974.8" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="977.8" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (38 samples, 0.03%)</title><rect x="974.8" y="627.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="977.8" y="638.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (47 samples, 0.04%)</title><rect x="975.1" y="691.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="978.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.createSession (35 samples, 0.03%)</title><rect x="975.2" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="978.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.createSession (35 samples, 0.03%)</title><rect x="975.2" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="978.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/StreamSession.&lt;init&gt; (35 samples, 0.03%)</title><rect x="975.2" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="978.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (35 samples, 0.03%)</title><rect x="975.2" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="978.2" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (24,086 samples, 18.17%)</title><rect x="975.5" y="691.0" width="214.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="978.5" y="702.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (3,062 samples, 2.31%)</title><rect x="975.5" y="675.0" width="27.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="978.5" y="686.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1,646 samples, 1.24%)</title><rect x="975.5" y="659.0" width="14.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="978.5" y="670.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (425 samples, 0.32%)</title><rect x="975.5" y="643.0" width="3.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="978.5" y="654.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (460 samples, 0.35%)</title><rect x="979.3" y="643.0" width="4.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="982.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (761 samples, 0.57%)</title><rect x="983.4" y="643.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="986.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (761 samples, 0.57%)</title><rect x="983.4" y="627.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (761 samples, 0.57%)</title><rect x="983.4" y="611.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="986.4" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (761 samples, 0.57%)</title><rect x="983.4" y="595.0" width="6.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="986.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1,412 samples, 1.07%)</title><rect x="990.2" y="659.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="993.2" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,412 samples, 1.07%)</title><rect x="990.2" y="643.0" width="12.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="993.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (1,412 samples, 1.07%)</title><rect x="990.2" y="627.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="993.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1,409 samples, 1.06%)</title><rect x="990.2" y="611.0" width="12.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="993.2" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (717 samples, 0.54%)</title><rect x="990.2" y="595.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="993.2" y="606.0"></text>
</g>
<g>
<title>java.lang.Integer (717 samples, 0.54%)</title><rect x="990.2" y="579.0" width="6.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="993.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (692 samples, 0.52%)</title><rect x="996.6" y="595.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="999.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.add (692 samples, 0.52%)</title><rect x="996.6" y="579.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="999.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.put (692 samples, 0.52%)</title><rect x="996.6" y="563.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (692 samples, 0.52%)</title><rect x="996.6" y="547.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="999.6" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (692 samples, 0.52%)</title><rect x="996.6" y="531.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.6" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (692 samples, 0.52%)</title><rect x="996.6" y="515.0" width="6.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="999.6" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (21,024 samples, 15.86%)</title><rect x="1002.8" y="675.0" width="187.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1005.8" y="686.0">one/nio/net/Session.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (21,024 samples, 15.86%)</title><rect x="1002.8" y="659.0" width="187.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1005.8" y="670.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (20,004 samples, 15.09%)</title><rect x="1002.8" y="643.0" width="178.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1005.8" y="654.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,297 samples, 3.24%)</title><rect x="1002.8" y="627.0" width="38.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1005.8" y="638.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,297 samples, 3.24%)</title><rect x="1002.8" y="611.0" width="38.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1005.8" y="622.0">one..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (3,127 samples, 2.36%)</title><rect x="1002.8" y="595.0" width="27.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1005.8" y="606.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (982 samples, 0.74%)</title><rect x="1002.8" y="579.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1005.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (982 samples, 0.74%)</title><rect x="1002.8" y="563.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1005.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (982 samples, 0.74%)</title><rect x="1002.8" y="547.0" width="8.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1005.8" y="558.0"></text>
</g>
<g>
<title>java.lang.String (487 samples, 0.37%)</title><rect x="1002.8" y="531.0" width="4.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1005.8" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (495 samples, 0.37%)</title><rect x="1007.2" y="531.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.2" y="542.0"></text>
</g>
<g>
<title>byte[] (495 samples, 0.37%)</title><rect x="1007.2" y="515.0" width="4.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1010.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.entity (2,145 samples, 1.62%)</title><rect x="1011.6" y="579.0" width="19.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1014.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2032090581.linkToTargetMethod (716 samples, 0.54%)</title><rect x="1011.6" y="563.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1014.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/2071961189.invokeStatic (716 samples, 0.54%)</title><rect x="1011.6" y="547.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1014.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$395/1741362108.get$Lambda (716 samples, 0.54%)</title><rect x="1011.6" y="531.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1014.6" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rubtsov.MyService$$Lambda$395 (716 samples, 0.54%)</title><rect x="1011.6" y="515.0" width="6.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1014.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.executeAsync (1,023 samples, 0.77%)</title><rect x="1017.9" y="563.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1020.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (451 samples, 0.34%)</title><rect x="1017.9" y="547.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (451 samples, 0.34%)</title><rect x="1017.9" y="531.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1020.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$115/356589445.get$Lambda (451 samples, 0.34%)</title><rect x="1017.9" y="515.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1020.9" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rubtsov.MyService$$Lambda$115 (451 samples, 0.34%)</title><rect x="1017.9" y="499.0" width="4.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1020.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (572 samples, 0.43%)</title><rect x="1021.9" y="547.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1024.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (572 samples, 0.43%)</title><rect x="1021.9" y="531.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1024.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (534 samples, 0.40%)</title><rect x="1021.9" y="515.0" width="4.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1024.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (34 samples, 0.03%)</title><rect x="1026.7" y="515.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1029.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (34 samples, 0.03%)</title><rect x="1026.7" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1029.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (34 samples, 0.03%)</title><rect x="1026.7" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1029.7" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (34 samples, 0.03%)</title><rect x="1026.7" y="467.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1029.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.isProxied (406 samples, 0.31%)</title><rect x="1027.0" y="563.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1030.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (406 samples, 0.31%)</title><rect x="1027.0" y="547.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1030.0" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (406 samples, 0.31%)</title><rect x="1027.0" y="531.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1030.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (406 samples, 0.31%)</title><rect x="1027.0" y="515.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1030.0" y="526.0"></text>
</g>
<g>
<title>java.lang.String (213 samples, 0.16%)</title><rect x="1027.0" y="499.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1030.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (193 samples, 0.15%)</title><rect x="1028.9" y="499.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1031.9" y="510.0"></text>
</g>
<g>
<title>byte[] (193 samples, 0.15%)</title><rect x="1028.9" y="483.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1031.9" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,170 samples, 0.88%)</title><rect x="1030.7" y="595.0" width="10.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1033.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,170 samples, 0.88%)</title><rect x="1030.7" y="579.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1033.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,170 samples, 0.88%)</title><rect x="1030.7" y="563.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1033.7" y="574.0"></text>
</g>
<g>
<title>java.lang.String (481 samples, 0.36%)</title><rect x="1030.7" y="547.0" width="4.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1033.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (689 samples, 0.52%)</title><rect x="1034.9" y="547.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1037.9" y="558.0"></text>
</g>
<g>
<title>byte[] (689 samples, 0.52%)</title><rect x="1034.9" y="531.0" width="6.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1037.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,852 samples, 3.66%)</title><rect x="1041.1" y="627.0" width="43.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1044.1" y="638.0">one/..</text>
</g>
<g>
<title>one.nio.http.Request (768 samples, 0.58%)</title><rect x="1041.1" y="611.0" width="6.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1044.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,568 samples, 1.18%)</title><rect x="1047.9" y="611.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1050.9" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (1,568 samples, 1.18%)</title><rect x="1047.9" y="595.0" width="14.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1050.9" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,516 samples, 1.90%)</title><rect x="1061.9" y="611.0" width="22.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1064.9" y="622.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,516 samples, 1.90%)</title><rect x="1061.9" y="595.0" width="22.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.9" y="606.0">o..</text>
</g>
<g>
<title>char[] (1,224 samples, 0.92%)</title><rect x="1061.9" y="579.0" width="10.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1064.9" y="590.0"></text>
</g>
<g>
<title>java.lang.String (472 samples, 0.36%)</title><rect x="1072.8" y="579.0" width="4.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1075.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (820 samples, 0.62%)</title><rect x="1077.0" y="579.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1080.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (820 samples, 0.62%)</title><rect x="1077.0" y="563.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1080.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (820 samples, 0.62%)</title><rect x="1077.0" y="547.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1080.0" y="558.0"></text>
</g>
<g>
<title>byte[] (820 samples, 0.62%)</title><rect x="1077.0" y="531.0" width="7.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1080.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (177 samples, 0.13%)</title><rect x="1084.3" y="627.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1087.3" y="638.0"></text>
</g>
<g>
<title>byte[] (177 samples, 0.13%)</title><rect x="1084.3" y="611.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1087.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (400 samples, 0.30%)</title><rect x="1085.9" y="627.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1088.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (400 samples, 0.30%)</title><rect x="1085.9" y="611.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1088.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (400 samples, 0.30%)</title><rect x="1085.9" y="595.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.9" y="606.0"></text>
</g>
<g>
<title>java.lang.String (198 samples, 0.15%)</title><rect x="1085.9" y="579.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1088.9" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (202 samples, 0.15%)</title><rect x="1087.6" y="579.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.6" y="590.0"></text>
</g>
<g>
<title>byte[] (202 samples, 0.15%)</title><rect x="1087.6" y="563.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1090.6" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10,278 samples, 7.76%)</title><rect x="1089.4" y="627.0" width="91.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1092.4" y="638.0">one/nio/uti..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (10,278 samples, 7.76%)</title><rect x="1089.4" y="611.0" width="91.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1092.4" y="622.0">one/nio/uti..</text>
</g>
<g>
<title>char[] (5,071 samples, 3.83%)</title><rect x="1089.4" y="595.0" width="45.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1092.4" y="606.0">char[]</text>
</g>
<g>
<title>java.lang.String (1,708 samples, 1.29%)</title><rect x="1134.6" y="595.0" width="15.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1137.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,499 samples, 2.64%)</title><rect x="1149.8" y="595.0" width="31.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1152.8" y="606.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,499 samples, 2.64%)</title><rect x="1149.8" y="579.0" width="31.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1152.8" y="590.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,499 samples, 2.64%)</title><rect x="1149.8" y="563.0" width="31.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1152.8" y="574.0">ja..</text>
</g>
<g>
<title>byte[] (3,499 samples, 2.64%)</title><rect x="1149.8" y="547.0" width="31.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1152.8" y="558.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.read (1,019 samples, 0.77%)</title><rect x="1180.9" y="643.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1183.9" y="654.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (1,019 samples, 0.77%)</title><rect x="1180.9" y="627.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.9" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (967 samples, 0.73%)</title><rect x="1180.9" y="611.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1183.9" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (967 samples, 0.73%)</title><rect x="1180.9" y="595.0" width="8.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1183.9" y="606.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (37 samples, 0.03%)</title><rect x="1189.7" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.7" y="622.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (37 samples, 0.03%)</title><rect x="1189.7" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.7" y="606.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (37 samples, 0.03%)</title><rect x="1189.7" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.7" y="590.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (37 samples, 0.03%)</title><rect x="1189.7" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.7" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (37 samples, 0.03%)</title><rect x="1189.7" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.7" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (37 samples, 0.03%)</title><rect x="1189.7" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1192.7" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (37 samples, 0.03%)</title><rect x="1189.7" y="515.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.7" y="526.0"></text>
</g>
</g>
</svg>
