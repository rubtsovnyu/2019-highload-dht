<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="726" onload="init(evt)" viewBox="0 0 1200 726" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="709"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="709"> </text>
<g id="frames">
<g>
<title>all (12,486 samples, 100.00%)</title><rect x="10.0" y="675.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="686.0">all</text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (4 samples, 0.03%)</title><rect x="10.0" y="659.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (4 samples, 0.03%)</title><rect x="10.4" y="659.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.4" y="670.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.03%)</title><rect x="10.4" y="643.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.4" y="654.0"></text>
</g>
<g>
<title>JavaCallWrapper::~JavaCallWrapper() (4 samples, 0.03%)</title><rect x="10.4" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.4" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.04%)</title><rect x="10.9" y="659.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.9" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (24 samples, 0.19%)</title><rect x="11.3" y="659.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.3" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (7 samples, 0.06%)</title><rect x="11.6" y="643.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.6" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.06%)</title><rect x="11.6" y="627.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.6" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.06%)</title><rect x="11.6" y="611.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.6" y="622.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (6 samples, 0.05%)</title><rect x="11.6" y="595.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="14.6" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.05%)</title><rect x="11.6" y="579.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.6" y="590.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (3 samples, 0.02%)</title><rect x="11.7" y="563.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.7" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (13 samples, 0.10%)</title><rect x="12.4" y="643.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.4" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (12 samples, 0.10%)</title><rect x="12.4" y="627.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.4" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (11 samples, 0.09%)</title><rect x="12.4" y="611.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.4" y="622.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (3 samples, 0.02%)</title><rect x="12.5" y="595.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="15.5" y="606.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (4 samples, 0.03%)</title><rect x="12.9" y="595.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.9" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.03%)</title><rect x="12.9" y="579.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="15.9" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (14 samples, 0.11%)</title><rect x="13.6" y="659.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="16.6" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (13 samples, 0.10%)</title><rect x="13.7" y="643.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.7" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (11 samples, 0.09%)</title><rect x="13.8" y="627.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.8" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (10 samples, 0.08%)</title><rect x="13.8" y="611.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="16.8" y="622.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (6 samples, 0.05%)</title><rect x="14.1" y="595.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.1" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.04%)</title><rect x="14.2" y="579.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.2" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (50 samples, 0.40%)</title><rect x="14.9" y="659.0" width="4.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.9" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (41 samples, 0.33%)</title><rect x="15.1" y="643.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="18.1" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (39 samples, 0.31%)</title><rect x="15.1" y="627.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.1" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (32 samples, 0.26%)</title><rect x="15.2" y="611.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.2" y="622.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (6 samples, 0.05%)</title><rect x="15.2" y="595.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="18.2" y="606.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_low_memory_detector() (3 samples, 0.02%)</title><rect x="15.5" y="579.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="18.5" y="590.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (22 samples, 0.18%)</title><rect x="16.0" y="595.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="19.0" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (21 samples, 0.17%)</title><rect x="16.0" y="579.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="19.0" y="590.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (3 samples, 0.02%)</title><rect x="16.3" y="563.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="19.3" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (7 samples, 0.06%)</title><rect x="16.6" y="563.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="19.6" y="574.0"></text>
</g>
<g>
<title>_platform_memset$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="17.0" y="547.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="20.0" y="558.0"></text>
</g>
<g>
<title>G1ContiguousSpace::free() const (3 samples, 0.02%)</title><rect x="17.3" y="563.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="20.3" y="574.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::make_parsable(bool, bool) (4 samples, 0.03%)</title><rect x="17.6" y="563.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="20.6" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_object(HeapWord*, unsigned long, bool) (3 samples, 0.02%)</title><rect x="17.7" y="547.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="20.7" y="558.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (4 samples, 0.03%)</title><rect x="18.2" y="611.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="21.2" y="622.0"></text>
</g>
<g>
<title>Klass::class_loader() const (3 samples, 0.02%)</title><rect x="19.2" y="643.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="22.2" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (841 samples, 6.74%)</title><rect x="19.6" y="659.0" width="79.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="22.6" y="670.0">SharedRun..</text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (3 samples, 0.02%)</title><rect x="20.2" y="643.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="23.2" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (820 samples, 6.57%)</title><rect x="20.7" y="643.0" width="77.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="23.7" y="654.0">ObjectMon..</text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (5 samples, 0.04%)</title><rect x="22.2" y="627.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="25.2" y="638.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::contended_enter_begin(JavaThread*) (3 samples, 0.02%)</title><rect x="22.2" y="611.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="25.2" y="622.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::~JavaThreadBlockedOnMonitorEnterState() (3 samples, 0.02%)</title><rect x="22.7" y="627.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="25.7" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (548 samples, 4.39%)</title><rect x="23.0" y="627.0" width="51.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="26.0" y="638.0">Objec..</text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (5 samples, 0.04%)</title><rect x="23.7" y="611.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="26.7" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (48 samples, 0.38%)</title><rect x="24.2" y="611.0" width="4.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="27.2" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (27 samples, 0.22%)</title><rect x="26.2" y="595.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="29.2" y="606.0"></text>
</g>
<g>
<title>SpinPause (13 samples, 0.10%)</title><rect x="28.7" y="611.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="31.7" y="622.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (97 samples, 0.78%)</title><rect x="30.1" y="611.0" width="9.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="33.1" y="622.0"></text>
</g>
<g>
<title>__psynch_cvwait (96 samples, 0.77%)</title><rect x="30.1" y="595.0" width="9.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="33.1" y="606.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (374 samples, 3.00%)</title><rect x="39.3" y="611.0" width="35.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="42.3" y="622.0">os:..</text>
</g>
<g>
<title>__gettimeofday (10 samples, 0.08%)</title><rect x="39.4" y="595.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="42.4" y="606.0"></text>
</g>
<g>
<title>__psynch_cvwait (351 samples, 2.81%)</title><rect x="40.3" y="595.0" width="33.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="43.3" y="606.0">__..</text>
</g>
<g>
<title>_pthread_cond_wait (6 samples, 0.05%)</title><rect x="73.5" y="595.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="76.5" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitSuspendEquivalent(JavaThread*) (6 samples, 0.05%)</title><rect x="74.8" y="627.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="77.8" y="638.0"></text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (5 samples, 0.04%)</title><rect x="74.8" y="611.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="77.8" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (7 samples, 0.06%)</title><rect x="75.4" y="627.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="78.4" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (206 samples, 1.65%)</title><rect x="76.1" y="627.0" width="19.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="79.1" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (75 samples, 0.60%)</title><rect x="88.4" y="611.0" width="7.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="91.4" y="622.0"></text>
</g>
<g>
<title>SpinPause (26 samples, 0.21%)</title><rect x="95.7" y="627.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="98.7" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_enter(Handle, BasicLock*, Thread*) (7 samples, 0.06%)</title><rect x="98.4" y="643.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="101.4" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (5 samples, 0.04%)</title><rect x="98.6" y="627.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="101.6" y="638.0"></text>
</g>
<g>
<title>[not_walkable] (34 samples, 0.27%)</title><rect x="99.4" y="659.0" width="3.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="102.4" y="670.0"></text>
</g>
<g>
<title>[not_walkable_Java] (20 samples, 0.16%)</title><rect x="102.6" y="659.0" width="1.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="105.6" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.06%)</title><rect x="102.9" y="643.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="105.9" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (7 samples, 0.06%)</title><rect x="102.9" y="627.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="105.9" y="638.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (7 samples, 0.06%)</title><rect x="102.9" y="611.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="105.9" y="622.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (7 samples, 0.06%)</title><rect x="102.9" y="595.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="105.9" y="606.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (3 samples, 0.02%)</title><rect x="103.2" y="579.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="106.2" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.04%)</title><rect x="103.6" y="643.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="106.6" y="654.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (5 samples, 0.04%)</title><rect x="103.6" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="106.6" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (3 samples, 0.02%)</title><rect x="104.2" y="643.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="107.2" y="654.0"></text>
</g>
<g>
<title>[unknown_Java] (34 samples, 0.27%)</title><rect x="104.5" y="659.0" width="3.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="107.5" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.02%)</title><rect x="107.2" y="643.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="110.2" y="654.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.02%)</title><rect x="107.4" y="643.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="110.4" y="654.0"></text>
</g>
<g>
<title>h_errno (3 samples, 0.02%)</title><rect x="107.4" y="627.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="110.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7,460 samples, 59.75%)</title><rect x="107.7" y="659.0" width="705.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.7" y="670.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,460 samples, 59.75%)</title><rect x="107.7" y="643.0" width="705.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.7" y="654.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,460 samples, 59.75%)</title><rect x="107.7" y="627.0" width="705.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.7" y="638.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,980 samples, 15.86%)</title><rect x="107.8" y="611.0" width="187.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.8" y="622.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,937 samples, 15.51%)</title><rect x="107.8" y="595.0" width="183.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.8" y="606.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>itable stub (5 samples, 0.04%)</title><rect x="108.5" y="579.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="111.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,917 samples, 15.35%)</title><rect x="108.9" y="579.0" width="181.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.9" y="590.0">java/util/concurrent/Co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (228 samples, 1.83%)</title><rect x="109.5" y="563.0" width="21.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.5" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (214 samples, 1.71%)</title><rect x="109.7" y="547.0" width="20.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (214 samples, 1.71%)</title><rect x="109.7" y="531.0" width="20.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (7 samples, 0.06%)</title><rect x="109.8" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (206 samples, 1.65%)</title><rect x="110.5" y="515.0" width="19.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (199 samples, 1.59%)</title><rect x="110.7" y="499.0" width="18.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="113.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (198 samples, 1.59%)</title><rect x="110.8" y="483.0" width="18.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (196 samples, 1.57%)</title><rect x="111.0" y="467.0" width="18.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.0" y="478.0"></text>
</g>
<g>
<title>Thread::current() (3 samples, 0.02%)</title><rect x="112.1" y="451.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="115.1" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (180 samples, 1.44%)</title><rect x="112.4" y="451.0" width="17.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="115.4" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.03%)</title><rect x="113.4" y="435.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="116.4" y="446.0"></text>
</g>
<g>
<title>__psynch_cvsignal (159 samples, 1.27%)</title><rect x="113.9" y="435.0" width="15.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="116.9" y="446.0"></text>
</g>
<g>
<title>pthread_cond_signal (3 samples, 0.02%)</title><rect x="128.9" y="435.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="131.9" y="446.0"></text>
</g>
<g>
<title>_pthread_cond_updateval (3 samples, 0.02%)</title><rect x="128.9" y="419.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="131.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.getProbe (4 samples, 0.03%)</title><rect x="129.5" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.09%)</title><rect x="130.0" y="547.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (7 samples, 0.06%)</title><rect x="130.3" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$171/210725587.apply (4 samples, 0.03%)</title><rect x="130.6" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$171/210725587.apply (1,683 samples, 13.48%)</title><rect x="131.1" y="563.0" width="159.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.1" y="574.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (1,680 samples, 13.46%)</title><rect x="131.2" y="547.0" width="158.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.2" y="558.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (1,680 samples, 13.46%)</title><rect x="131.2" y="531.0" width="158.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.2" y="542.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4 samples, 0.03%)</title><rect x="131.8" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.05%)</title><rect x="132.2" y="515.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.02%)</title><rect x="132.5" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="135.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (1,362 samples, 10.91%)</title><rect x="132.8" y="515.0" width="128.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.8" y="526.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (1,362 samples, 10.91%)</title><rect x="132.8" y="499.0" width="128.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.8" y="510.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (1,362 samples, 10.91%)</title><rect x="132.8" y="483.0" width="128.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="135.8" y="494.0">jdk/internal/net..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (612 samples, 4.90%)</title><rect x="132.9" y="467.0" width="57.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.9" y="478.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (611 samples, 4.89%)</title><rect x="133.0" y="451.0" width="57.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="136.0" y="462.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (602 samples, 4.82%)</title><rect x="133.0" y="435.0" width="56.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.0" y="446.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$274/1438378433.apply (602 samples, 4.82%)</title><rect x="133.0" y="419.0" width="56.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.0" y="430.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (602 samples, 4.82%)</title><rect x="133.0" y="403.0" width="56.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.0" y="414.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (602 samples, 4.82%)</title><rect x="133.0" y="387.0" width="56.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.0" y="398.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$203/670130308.apply (602 samples, 4.82%)</title><rect x="133.0" y="371.0" width="56.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.0" y="382.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (602 samples, 4.82%)</title><rect x="133.0" y="355.0" width="56.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.0" y="366.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (6 samples, 0.05%)</title><rect x="133.1" y="339.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5 samples, 0.04%)</title><rect x="133.2" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (5 samples, 0.04%)</title><rect x="133.2" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (13 samples, 0.10%)</title><rect x="133.7" y="339.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (12 samples, 0.10%)</title><rect x="133.7" y="323.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.07%)</title><rect x="134.0" y="307.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="137.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.07%)</title><rect x="134.0" y="291.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (581 samples, 4.65%)</title><rect x="134.9" y="339.0" width="54.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="137.9" y="350.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (7 samples, 0.06%)</title><rect x="135.3" y="323.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 0.06%)</title><rect x="135.3" y="307.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (484 samples, 3.88%)</title><rect x="136.0" y="323.0" width="45.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="139.0" y="334.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (481 samples, 3.85%)</title><rect x="136.3" y="307.0" width="45.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.3" y="318.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (12 samples, 0.10%)</title><rect x="136.4" y="291.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$298/1779330839.apply (464 samples, 3.72%)</title><rect x="137.5" y="291.0" width="43.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.5" y="302.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (463 samples, 3.71%)</title><rect x="137.6" y="275.0" width="43.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.6" y="286.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 0.05%)</title><rect x="138.3" y="259.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="141.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.03%)</title><rect x="138.5" y="243.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (14 samples, 0.11%)</title><rect x="138.9" y="259.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="141.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (14 samples, 0.11%)</title><rect x="138.9" y="243.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (14 samples, 0.11%)</title><rect x="138.9" y="227.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (14 samples, 0.11%)</title><rect x="138.9" y="211.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.05%)</title><rect x="139.7" y="195.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.05%)</title><rect x="139.7" y="179.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="142.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.03%)</title><rect x="139.8" y="163.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (3 samples, 0.02%)</title><rect x="139.9" y="147.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (92 samples, 0.74%)</title><rect x="140.2" y="259.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (89 samples, 0.71%)</title><rect x="140.5" y="243.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (20 samples, 0.16%)</title><rect x="140.8" y="227.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (66 samples, 0.53%)</title><rect x="142.7" y="227.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (66 samples, 0.53%)</title><rect x="142.7" y="211.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (44 samples, 0.35%)</title><rect x="143.3" y="195.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (44 samples, 0.35%)</title><rect x="143.3" y="179.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (44 samples, 0.35%)</title><rect x="143.3" y="163.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (42 samples, 0.34%)</title><rect x="143.5" y="147.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (28 samples, 0.22%)</title><rect x="144.9" y="131.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="147.9" y="142.0"></text>
</g>
<g>
<title>write (23 samples, 0.18%)</title><rect x="145.3" y="115.0" width="2.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="148.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (14 samples, 0.11%)</title><rect x="147.6" y="195.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="150.6" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.10%)</title><rect x="147.8" y="179.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="150.8" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (12 samples, 0.10%)</title><rect x="147.8" y="163.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="150.8" y="174.0"></text>
</g>
<g>
<title>__psynch_cvsignal (8 samples, 0.06%)</title><rect x="147.9" y="147.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="150.9" y="158.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (3 samples, 0.02%)</title><rect x="148.6" y="147.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="151.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (342 samples, 2.74%)</title><rect x="148.9" y="259.0" width="32.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.9" y="270.0">jd..</text>
</g>
<g>
<title>java/lang/String.getBytes (31 samples, 0.25%)</title><rect x="149.9" y="243.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.9" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (31 samples, 0.25%)</title><rect x="149.9" y="227.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="152.9" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (31 samples, 0.25%)</title><rect x="149.9" y="211.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.9" y="222.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="152.4" y="195.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="155.4" y="206.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="152.8" y="243.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="155.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (238 samples, 1.91%)</title><rect x="153.2" y="243.0" width="22.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="156.2" y="254.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (6 samples, 0.05%)</title><rect x="153.4" y="227.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.4" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.05%)</title><rect x="153.4" y="211.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.4" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.03%)</title><rect x="153.6" y="195.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.6" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.03%)</title><rect x="153.6" y="179.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.6" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.03%)</title><rect x="153.6" y="163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.6" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.03%)</title><rect x="153.6" y="147.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (103 samples, 0.82%)</title><rect x="153.9" y="227.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.9" y="238.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (7 samples, 0.06%)</title><rect x="155.7" y="211.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.7" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (7 samples, 0.06%)</title><rect x="155.7" y="195.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.7" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (7 samples, 0.06%)</title><rect x="155.7" y="179.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="158.7" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (7 samples, 0.06%)</title><rect x="155.7" y="163.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="158.7" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (7 samples, 0.06%)</title><rect x="155.7" y="147.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="158.7" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (7 samples, 0.06%)</title><rect x="155.7" y="131.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.7" y="142.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (7 samples, 0.06%)</title><rect x="156.4" y="211.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.4" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (7 samples, 0.06%)</title><rect x="156.4" y="195.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.4" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (7 samples, 0.06%)</title><rect x="156.4" y="179.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="159.4" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (7 samples, 0.06%)</title><rect x="156.4" y="163.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.4" y="174.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$325/1191925351.test (61 samples, 0.49%)</title><rect x="157.1" y="211.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.1" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (61 samples, 0.49%)</title><rect x="157.1" y="195.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$250/791679953.test (5 samples, 0.04%)</title><rect x="157.1" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="160.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$static$0 (5 samples, 0.04%)</title><rect x="157.1" y="163.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1610702581.test (56 samples, 0.45%)</title><rect x="157.5" y="179.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (56 samples, 0.45%)</title><rect x="157.5" y="163.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.5" y="174.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$75/1212772528.test (56 samples, 0.45%)</title><rect x="157.5" y="147.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.5" y="158.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (56 samples, 0.45%)</title><rect x="157.5" y="131.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$74/896644936.test (56 samples, 0.45%)</title><rect x="157.5" y="115.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (56 samples, 0.45%)</title><rect x="157.5" y="99.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="160.5" y="110.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (22 samples, 0.18%)</title><rect x="157.5" y="83.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.5" y="94.0"></text>
</g>
<g>
<title>java/lang/String.length (10 samples, 0.08%)</title><rect x="157.5" y="67.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.5" y="78.0"></text>
</g>
<g>
<title>java/lang/String.coder (6 samples, 0.05%)</title><rect x="157.9" y="51.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.9" y="62.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.10%)</title><rect x="158.5" y="67.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.5" y="78.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.06%)</title><rect x="158.8" y="51.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="161.8" y="62.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 0.25%)</title><rect x="159.6" y="83.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.6" y="94.0"></text>
</g>
<g>
<title>java/lang/String.length (18 samples, 0.14%)</title><rect x="159.6" y="67.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.6" y="78.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.10%)</title><rect x="161.3" y="67.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="164.3" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.09%)</title><rect x="161.5" y="51.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="164.5" y="62.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.04%)</title><rect x="162.1" y="35.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="165.1" y="46.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.02%)</title><rect x="162.5" y="83.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.5" y="94.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.06%)</title><rect x="163.0" y="211.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="166.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (7 samples, 0.06%)</title><rect x="163.7" y="227.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (5 samples, 0.04%)</title><rect x="163.9" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.04%)</title><rect x="163.9" y="195.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.9" y="206.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.04%)</title><rect x="163.9" y="179.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.04%)</title><rect x="163.9" y="163.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (120 samples, 0.96%)</title><rect x="164.3" y="227.0" width="11.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="167.3" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (120 samples, 0.96%)</title><rect x="164.3" y="211.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="167.3" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (117 samples, 0.94%)</title><rect x="164.6" y="195.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.6" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (109 samples, 0.87%)</title><rect x="165.4" y="179.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="168.4" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.accept (100 samples, 0.80%)</title><rect x="165.7" y="163.0" width="9.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.7" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (97 samples, 0.78%)</title><rect x="166.0" y="147.0" width="9.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.0" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (25 samples, 0.20%)</title><rect x="166.8" y="131.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.8" y="142.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.05%)</title><rect x="167.9" y="115.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="170.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/848363848.test (7 samples, 0.06%)</title><rect x="168.5" y="115.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.5" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (25 samples, 0.20%)</title><rect x="169.1" y="131.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.1" y="142.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.accept (10 samples, 0.08%)</title><rect x="170.6" y="115.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="173.6" y="126.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (10 samples, 0.08%)</title><rect x="170.6" y="99.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="173.6" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (35 samples, 0.28%)</title><rect x="171.5" y="131.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (9 samples, 0.07%)</title><rect x="172.9" y="115.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.9" y="126.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (9 samples, 0.07%)</title><rect x="172.9" y="99.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (9 samples, 0.07%)</title><rect x="172.9" y="83.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.9" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (11 samples, 0.09%)</title><rect x="173.8" y="115.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="176.8" y="126.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="174.8" y="131.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="177.8" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (5 samples, 0.04%)</title><rect x="175.2" y="163.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="178.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (12 samples, 0.10%)</title><rect x="175.7" y="243.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.7" y="254.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (12 samples, 0.10%)</title><rect x="175.7" y="227.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="178.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (17 samples, 0.14%)</title><rect x="176.8" y="243.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="179.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (11 samples, 0.09%)</title><rect x="177.4" y="227.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="180.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (10 samples, 0.08%)</title><rect x="177.5" y="211.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.5" y="222.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="178.0" y="195.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="181.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (30 samples, 0.24%)</title><rect x="178.4" y="243.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="181.4" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (28 samples, 0.22%)</title><rect x="178.6" y="227.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (11 samples, 0.09%)</title><rect x="179.6" y="211.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (11 samples, 0.09%)</title><rect x="179.6" y="195.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="182.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (11 samples, 0.09%)</title><rect x="179.6" y="179.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="182.6" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (6 samples, 0.05%)</title><rect x="180.7" y="211.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="183.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.03%)</title><rect x="181.3" y="291.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="184.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.03%)</title><rect x="181.3" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (84 samples, 0.67%)</title><rect x="181.9" y="323.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="184.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (84 samples, 0.67%)</title><rect x="181.9" y="307.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="184.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (77 samples, 0.62%)</title><rect x="182.6" y="291.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (54 samples, 0.43%)</title><rect x="184.7" y="275.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.08%)</title><rect x="184.8" y="259.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.8" y="270.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.02%)</title><rect x="184.8" y="243.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="187.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.04%)</title><rect x="185.1" y="243.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="188.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (43 samples, 0.34%)</title><rect x="185.8" y="259.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (43 samples, 0.34%)</title><rect x="185.8" y="243.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="188.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (35 samples, 0.28%)</title><rect x="186.0" y="227.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$259/1643973216.run (30 samples, 0.24%)</title><rect x="186.4" y="211.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (28 samples, 0.22%)</title><rect x="186.6" y="195.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (22 samples, 0.18%)</title><rect x="187.1" y="179.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="190.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.02%)</title><rect x="187.2" y="163.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="190.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (7 samples, 0.06%)</title><rect x="187.5" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="190.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (11 samples, 0.09%)</title><rect x="188.1" y="163.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (4 samples, 0.03%)</title><rect x="188.8" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (6 samples, 0.05%)</title><rect x="189.3" y="227.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.04%)</title><rect x="189.4" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.03%)</title><rect x="189.5" y="195.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$259/1643973216.run (3 samples, 0.02%)</title><rect x="189.6" y="179.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.02%)</title><rect x="189.6" y="163.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.06%)</title><rect x="189.9" y="435.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.06%)</title><rect x="189.9" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.9" y="430.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="190.1" y="403.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="193.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (17 samples, 0.14%)</title><rect x="190.7" y="467.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (16 samples, 0.13%)</title><rect x="190.8" y="451.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (16 samples, 0.13%)</title><rect x="190.8" y="435.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.8" y="446.0"></text>
</g>
<g>
<title>itable stub (11 samples, 0.09%)</title><rect x="190.9" y="419.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="193.9" y="430.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$36/557023567.apply (4 samples, 0.03%)</title><rect x="191.9" y="419.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (731 samples, 5.85%)</title><rect x="192.3" y="467.0" width="69.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="195.3" y="478.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (20 samples, 0.16%)</title><rect x="192.4" y="451.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (19 samples, 0.15%)</title><rect x="192.5" y="435.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (10 samples, 0.08%)</title><rect x="192.7" y="419.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.7" y="430.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="192.7" y="403.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="195.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$273/1434040749.apply (6 samples, 0.05%)</title><rect x="193.1" y="403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="196.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$273/1434040749.apply (6 samples, 0.05%)</title><rect x="193.6" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="196.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (6 samples, 0.05%)</title><rect x="193.6" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="196.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (6 samples, 0.05%)</title><rect x="193.6" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="196.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.05%)</title><rect x="193.6" y="371.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.05%)</title><rect x="193.6" y="355.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (19 samples, 0.15%)</title><rect x="194.3" y="451.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="197.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (11 samples, 0.09%)</title><rect x="195.0" y="435.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.08%)</title><rect x="195.1" y="419.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.04%)</title><rect x="195.2" y="403.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.04%)</title><rect x="195.2" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.04%)</title><rect x="195.2" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.04%)</title><rect x="195.2" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.04%)</title><rect x="195.2" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.04%)</title><rect x="195.2" y="323.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.04%)</title><rect x="195.2" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (5 samples, 0.04%)</title><rect x="195.2" y="291.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (5 samples, 0.04%)</title><rect x="195.2" y="275.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (5 samples, 0.04%)</title><rect x="195.2" y="259.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (5 samples, 0.04%)</title><rect x="195.2" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="198.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (5 samples, 0.04%)</title><rect x="195.2" y="227.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$271/74074948.accept (3 samples, 0.02%)</title><rect x="195.4" y="211.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$271/74074948.accept (4 samples, 0.03%)</title><rect x="195.7" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="198.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (691 samples, 5.53%)</title><rect x="196.1" y="451.0" width="65.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.1" y="462.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (656 samples, 5.25%)</title><rect x="196.1" y="435.0" width="62.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="199.1" y="446.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (652 samples, 5.22%)</title><rect x="196.5" y="419.0" width="61.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.5" y="430.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (648 samples, 5.19%)</title><rect x="196.5" y="403.0" width="61.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="199.5" y="414.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$215/923038470.apply (648 samples, 5.19%)</title><rect x="196.5" y="387.0" width="61.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.5" y="398.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (648 samples, 5.19%)</title><rect x="196.5" y="371.0" width="61.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="199.5" y="382.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (648 samples, 5.19%)</title><rect x="196.5" y="355.0" width="61.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.5" y="366.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (324 samples, 2.59%)</title><rect x="196.5" y="339.0" width="30.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="199.5" y="350.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (323 samples, 2.59%)</title><rect x="196.6" y="323.0" width="30.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.6" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (320 samples, 2.56%)</title><rect x="196.6" y="307.0" width="30.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.6" y="318.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$264/1092418694.apply (315 samples, 2.52%)</title><rect x="196.7" y="291.0" width="29.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.7" y="302.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (315 samples, 2.52%)</title><rect x="196.7" y="275.0" width="29.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="199.7" y="286.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (315 samples, 2.52%)</title><rect x="196.7" y="259.0" width="29.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="199.7" y="270.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (315 samples, 2.52%)</title><rect x="196.7" y="243.0" width="29.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.7" y="254.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (275 samples, 2.20%)</title><rect x="196.7" y="227.0" width="26.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.7" y="238.0">j..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (9 samples, 0.07%)</title><rect x="196.7" y="211.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.7" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (9 samples, 0.07%)</title><rect x="196.7" y="195.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="199.7" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (3 samples, 0.02%)</title><rect x="197.3" y="179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="200.3" y="190.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeBlock (3 samples, 0.02%)</title><rect x="197.3" y="163.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="200.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (251 samples, 2.01%)</title><rect x="197.6" y="211.0" width="23.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.6" y="222.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (251 samples, 2.01%)</title><rect x="197.6" y="195.0" width="23.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="200.6" y="206.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (251 samples, 2.01%)</title><rect x="197.6" y="179.0" width="23.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="200.6" y="190.0">j..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (239 samples, 1.91%)</title><rect x="198.7" y="163.0" width="22.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.7" y="174.0">j..</text>
</g>
<g>
<title>JVM_DoPrivileged (183 samples, 1.47%)</title><rect x="199.3" y="147.0" width="17.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="202.3" y="158.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (6 samples, 0.05%)</title><rect x="201.5" y="131.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="204.5" y="142.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (5 samples, 0.04%)</title><rect x="201.6" y="115.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="204.6" y="126.0"></text>
</g>
<g>
<title>binary_search(Array&lt;Method*&gt; const*, Symbol const*) (4 samples, 0.03%)</title><rect x="201.7" y="99.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="204.7" y="110.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (31 samples, 0.25%)</title><rect x="202.5" y="131.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="205.5" y="142.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (10 samples, 0.08%)</title><rect x="203.8" y="115.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="206.8" y="126.0"></text>
</g>
<g>
<title>OrderAccess::fence() (3 samples, 0.02%)</title><rect x="204.3" y="99.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="207.3" y="110.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (4 samples, 0.03%)</title><rect x="205.1" y="115.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="208.1" y="126.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (16 samples, 0.13%)</title><rect x="205.5" y="131.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="208.5" y="142.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (13 samples, 0.10%)</title><rect x="205.6" y="115.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="208.6" y="126.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (8 samples, 0.06%)</title><rect x="205.6" y="99.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="208.6" y="110.0"></text>
</g>
<g>
<title>CodeCache::get_code_heap_containing(void*) (4 samples, 0.03%)</title><rect x="206.0" y="83.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="209.0" y="94.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.03%)</title><rect x="206.4" y="99.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="209.4" y="110.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (3 samples, 0.02%)</title><rect x="206.5" y="83.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="209.5" y="94.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (10 samples, 0.08%)</title><rect x="207.4" y="131.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="210.4" y="142.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (6 samples, 0.05%)</title><rect x="207.8" y="115.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="210.8" y="126.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (6 samples, 0.05%)</title><rect x="207.8" y="99.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="210.8" y="110.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (5 samples, 0.04%)</title><rect x="207.9" y="83.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="210.9" y="94.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (4 samples, 0.03%)</title><rect x="208.0" y="67.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="211.0" y="78.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::ordered_load&lt;void volatile*, (ScopedFenceType)0&gt;(void volatile* const volatile*) (4 samples, 0.03%)</title><rect x="208.0" y="51.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="211.0" y="62.0"></text>
</g>
<g>
<title>void volatile* Atomic::load&lt;void volatile*&gt;(void volatile* const volatile*) (4 samples, 0.03%)</title><rect x="208.0" y="35.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="211.0" y="46.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (16 samples, 0.13%)</title><rect x="208.4" y="131.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="211.4" y="142.0"></text>
</g>
<g>
<title>SafepointMechanism::poll(Thread*) (10 samples, 0.08%)</title><rect x="208.8" y="115.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="211.8" y="126.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll(Thread*) (10 samples, 0.08%)</title><rect x="208.8" y="99.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="211.8" y="110.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (9 samples, 0.07%)</title><rect x="208.9" y="83.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="211.9" y="94.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (9 samples, 0.07%)</title><rect x="208.9" y="67.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="211.9" y="78.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (9 samples, 0.07%)</title><rect x="208.9" y="51.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="211.9" y="62.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::ordered_load&lt;void volatile*, (ScopedFenceType)0&gt;(void volatile* const volatile*) (5 samples, 0.04%)</title><rect x="209.3" y="35.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="212.3" y="46.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (65 samples, 0.52%)</title><rect x="210.4" y="131.0" width="6.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="213.4" y="142.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (17 samples, 0.14%)</title><rect x="210.6" y="115.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="213.6" y="126.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (6 samples, 0.05%)</title><rect x="211.7" y="99.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="214.7" y="110.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (46 samples, 0.37%)</title><rect x="212.2" y="115.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="215.2" y="126.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (12 samples, 0.10%)</title><rect x="212.4" y="99.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="215.4" y="110.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (11 samples, 0.09%)</title><rect x="212.5" y="83.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="215.5" y="94.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (10 samples, 0.08%)</title><rect x="212.6" y="67.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="215.6" y="78.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (7 samples, 0.06%)</title><rect x="212.8" y="51.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="215.8" y="62.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (6 samples, 0.05%)</title><rect x="212.9" y="35.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="215.9" y="46.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (32 samples, 0.26%)</title><rect x="213.6" y="99.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="216.6" y="110.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int() (8 samples, 0.06%)</title><rect x="214.4" y="83.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="217.4" y="94.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (12 samples, 0.10%)</title><rect x="215.3" y="83.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="218.3" y="94.0"></text>
</g>
<g>
<title>PcDescCache::find_pc_desc(int, bool) (5 samples, 0.04%)</title><rect x="215.9" y="67.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="218.9" y="78.0"></text>
</g>
<g>
<title>call_stub (4 samples, 0.03%)</title><rect x="217.3" y="147.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="220.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/961160488.run (37 samples, 0.30%)</title><rect x="217.7" y="147.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (33 samples, 0.26%)</title><rect x="218.1" y="131.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.1" y="142.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (33 samples, 0.26%)</title><rect x="218.1" y="115.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.1" y="126.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (5 samples, 0.04%)</title><rect x="218.6" y="99.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="221.6" y="110.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (16 samples, 0.13%)</title><rect x="219.0" y="99.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.0" y="110.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (16 samples, 0.13%)</title><rect x="219.0" y="83.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.0" y="94.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (13 samples, 0.10%)</title><rect x="219.3" y="67.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.3" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (12 samples, 0.10%)</title><rect x="219.4" y="51.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.4" y="62.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (7 samples, 0.06%)</title><rect x="220.6" y="99.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="223.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (7 samples, 0.06%)</title><rect x="220.6" y="83.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="223.6" y="94.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.04%)</title><rect x="220.7" y="67.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.7" y="78.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.04%)</title><rect x="220.7" y="51.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.7" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (15 samples, 0.12%)</title><rect x="221.3" y="211.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.07%)</title><rect x="221.3" y="195.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.3" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.07%)</title><rect x="221.3" y="179.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.3" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.07%)</title><rect x="221.3" y="163.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="224.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.07%)</title><rect x="221.3" y="147.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="224.3" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.07%)</title><rect x="221.3" y="131.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="224.3" y="142.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.02%)</title><rect x="221.6" y="115.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.02%)</title><rect x="221.9" y="115.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteBuffer (6 samples, 0.05%)</title><rect x="222.2" y="195.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.2" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putInt (6 samples, 0.05%)</title><rect x="222.2" y="179.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.2" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextPutIndex (6 samples, 0.05%)</title><rect x="222.2" y="163.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.02%)</title><rect x="222.4" y="147.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="225.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (40 samples, 0.32%)</title><rect x="222.7" y="227.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (31 samples, 0.25%)</title><rect x="223.6" y="211.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="226.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.05%)</title><rect x="224.6" y="195.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.05%)</title><rect x="224.6" y="179.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="227.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.05%)</title><rect x="224.6" y="163.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="227.6" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (14 samples, 0.11%)</title><rect x="225.2" y="195.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="228.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.02%)</title><rect x="226.5" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.02%)</title><rect x="226.8" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.02%)</title><rect x="226.8" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="229.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (324 samples, 2.59%)</title><rect x="227.1" y="339.0" width="30.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.1" y="350.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.02%)</title><rect x="227.3" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="230.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (303 samples, 2.43%)</title><rect x="227.6" y="323.0" width="28.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.6" y="334.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (5 samples, 0.04%)</title><rect x="227.6" y="307.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.04%)</title><rect x="227.6" y="291.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.04%)</title><rect x="227.6" y="275.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (5 samples, 0.04%)</title><rect x="227.6" y="259.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="230.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (5 samples, 0.04%)</title><rect x="227.6" y="243.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.6" y="254.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (5 samples, 0.04%)</title><rect x="227.6" y="227.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (8 samples, 0.06%)</title><rect x="228.1" y="307.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (8 samples, 0.06%)</title><rect x="228.1" y="291.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (8 samples, 0.06%)</title><rect x="228.1" y="275.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="231.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (8 samples, 0.06%)</title><rect x="228.1" y="259.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (8 samples, 0.06%)</title><rect x="228.1" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="231.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (8 samples, 0.06%)</title><rect x="228.1" y="227.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (10 samples, 0.08%)</title><rect x="228.9" y="307.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="231.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (10 samples, 0.08%)</title><rect x="228.9" y="291.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (10 samples, 0.08%)</title><rect x="228.9" y="275.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (10 samples, 0.08%)</title><rect x="228.9" y="259.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="231.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (10 samples, 0.08%)</title><rect x="228.9" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.9" y="254.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (10 samples, 0.08%)</title><rect x="228.9" y="227.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (93 samples, 0.74%)</title><rect x="229.8" y="307.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="232.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (90 samples, 0.72%)</title><rect x="229.8" y="291.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="232.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (78 samples, 0.62%)</title><rect x="231.0" y="275.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.0" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.get (19 samples, 0.15%)</title><rect x="231.0" y="259.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.0" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (18 samples, 0.14%)</title><rect x="231.0" y="243.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="234.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (12 samples, 0.10%)</title><rect x="231.5" y="227.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.5" y="238.0"></text>
</g>
<g>
<title>java/util/Objects.equals (12 samples, 0.10%)</title><rect x="231.5" y="211.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="234.5" y="222.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (12 samples, 0.10%)</title><rect x="231.5" y="195.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="234.5" y="206.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (12 samples, 0.10%)</title><rect x="231.5" y="179.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="234.5" y="190.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlink (3 samples, 0.02%)</title><rect x="232.4" y="163.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="235.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (59 samples, 0.47%)</title><rect x="232.8" y="259.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="235.8" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.remove (59 samples, 0.47%)</title><rect x="232.8" y="243.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.8" y="254.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlink (3 samples, 0.02%)</title><rect x="238.0" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (3 samples, 0.02%)</title><rect x="238.3" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (186 samples, 1.49%)</title><rect x="238.6" y="307.0" width="17.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="241.6" y="318.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (169 samples, 1.35%)</title><rect x="240.0" y="291.0" width="16.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="243.0" y="302.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (109 samples, 0.87%)</title><rect x="240.7" y="275.0" width="10.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="243.7" y="286.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ull&gt;::oop_access_barrier(void*, oopDesc*) (3 samples, 0.02%)</title><rect x="242.2" y="259.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="245.2" y="270.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.02%)</title><rect x="242.5" y="259.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="245.5" y="270.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (10 samples, 0.08%)</title><rect x="243.1" y="259.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="246.1" y="270.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (10 samples, 0.08%)</title><rect x="243.1" y="243.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="246.1" y="254.0"></text>
</g>
<g>
<title>binary_search(Array&lt;Method*&gt; const*, Symbol const*) (8 samples, 0.06%)</title><rect x="243.1" y="227.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="246.1" y="238.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (18 samples, 0.14%)</title><rect x="244.2" y="259.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="247.2" y="270.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (8 samples, 0.06%)</title><rect x="244.8" y="243.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="247.8" y="254.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (4 samples, 0.03%)</title><rect x="244.9" y="227.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="247.9" y="238.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (13 samples, 0.10%)</title><rect x="245.9" y="259.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="248.9" y="270.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (9 samples, 0.07%)</title><rect x="246.0" y="243.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="249.0" y="254.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (6 samples, 0.05%)</title><rect x="246.0" y="227.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="249.0" y="238.0"></text>
</g>
<g>
<title>CodeCache::get_code_heap_containing(void*) (4 samples, 0.03%)</title><rect x="246.2" y="211.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="249.2" y="222.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.02%)</title><rect x="246.5" y="227.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="249.5" y="238.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (4 samples, 0.03%)</title><rect x="247.4" y="259.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="250.4" y="270.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (3 samples, 0.02%)</title><rect x="247.4" y="243.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="250.4" y="254.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (5 samples, 0.04%)</title><rect x="247.8" y="259.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="250.8" y="270.0"></text>
</g>
<g>
<title>SafepointMechanism::poll(Thread*) (3 samples, 0.02%)</title><rect x="248.0" y="243.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="251.0" y="254.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (27 samples, 0.22%)</title><rect x="248.4" y="259.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="251.4" y="270.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (11 samples, 0.09%)</title><rect x="248.6" y="243.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="251.6" y="254.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (6 samples, 0.05%)</title><rect x="249.1" y="227.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="252.1" y="238.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (14 samples, 0.11%)</title><rect x="249.7" y="243.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="252.7" y="254.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (6 samples, 0.05%)</title><rect x="249.8" y="227.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="252.8" y="238.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (5 samples, 0.04%)</title><rect x="249.9" y="211.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="252.9" y="222.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.03%)</title><rect x="250.0" y="195.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="253.0" y="206.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.03%)</title><rect x="250.0" y="179.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="253.0" y="190.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (4 samples, 0.03%)</title><rect x="250.0" y="163.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="253.0" y="174.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (7 samples, 0.06%)</title><rect x="250.3" y="227.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="253.3" y="238.0"></text>
</g>
<g>
<title>call_stub (3 samples, 0.02%)</title><rect x="251.5" y="275.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="254.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$220/1680543885.run (42 samples, 0.34%)</title><rect x="251.7" y="275.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (34 samples, 0.27%)</title><rect x="252.5" y="259.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.5" y="270.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (28 samples, 0.22%)</title><rect x="253.1" y="243.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.1" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (28 samples, 0.22%)</title><rect x="253.1" y="227.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.1" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (28 samples, 0.22%)</title><rect x="253.1" y="211.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.1" y="222.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (25 samples, 0.20%)</title><rect x="253.4" y="195.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.4" y="206.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (23 samples, 0.18%)</title><rect x="253.5" y="179.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (7 samples, 0.06%)</title><rect x="254.3" y="163.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.03%)</title><rect x="254.6" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.6" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.03%)</title><rect x="254.6" y="131.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.6" y="142.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (6 samples, 0.05%)</title><rect x="255.0" y="163.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="258.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (16 samples, 0.13%)</title><rect x="256.2" y="323.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (16 samples, 0.13%)</title><rect x="256.2" y="307.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="259.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (16 samples, 0.13%)</title><rect x="256.2" y="291.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.02%)</title><rect x="257.8" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="260.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.02%)</title><rect x="257.8" y="387.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (14 samples, 0.11%)</title><rect x="258.1" y="435.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (14 samples, 0.11%)</title><rect x="258.1" y="419.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (10 samples, 0.08%)</title><rect x="258.3" y="403.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="261.3" y="414.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.05%)</title><rect x="258.3" y="387.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="261.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$267/1911969705.apply (4 samples, 0.03%)</title><rect x="258.8" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (21 samples, 0.17%)</title><rect x="259.4" y="435.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (15 samples, 0.12%)</title><rect x="260.0" y="419.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="263.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (15 samples, 0.12%)</title><rect x="260.0" y="403.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (15 samples, 0.12%)</title><rect x="260.0" y="387.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.0" y="398.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="261.0" y="371.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="264.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (123 samples, 0.99%)</title><rect x="261.5" y="515.0" width="11.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="264.5" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (29 samples, 0.23%)</title><rect x="262.0" y="499.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="265.0" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (21 samples, 0.17%)</title><rect x="262.8" y="483.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="265.8" y="494.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.02%)</title><rect x="263.2" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="266.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.02%)</title><rect x="263.2" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.02%)</title><rect x="263.2" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="266.2" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (8 samples, 0.06%)</title><rect x="263.7" y="467.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="266.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (4 samples, 0.03%)</title><rect x="264.4" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="267.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (88 samples, 0.70%)</title><rect x="264.8" y="499.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (88 samples, 0.70%)</title><rect x="264.8" y="483.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="267.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (82 samples, 0.66%)</title><rect x="265.4" y="467.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="268.4" y="478.0"></text>
</g>
<g>
<title>write (73 samples, 0.58%)</title><rect x="266.2" y="451.0" width="6.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="269.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (71 samples, 0.57%)</title><rect x="273.1" y="515.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="276.1" y="526.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (68 samples, 0.54%)</title><rect x="273.4" y="499.0" width="6.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="276.4" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (63 samples, 0.50%)</title><rect x="273.5" y="483.0" width="5.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="276.5" y="494.0"></text>
</g>
<g>
<title>__psynch_cvsignal (38 samples, 0.30%)</title><rect x="273.7" y="467.0" width="3.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="276.7" y="478.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (18 samples, 0.14%)</title><rect x="277.3" y="467.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="280.3" y="478.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (18 samples, 0.14%)</title><rect x="277.3" y="451.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="280.3" y="462.0"></text>
</g>
<g>
<title>__psynch_mutexwait (18 samples, 0.14%)</title><rect x="277.3" y="435.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="280.3" y="446.0"></text>
</g>
<g>
<title>pthread_cond_signal (4 samples, 0.03%)</title><rect x="279.0" y="467.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="282.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (66 samples, 0.53%)</title><rect x="279.8" y="515.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (55 samples, 0.44%)</title><rect x="280.3" y="499.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.3" y="510.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.03%)</title><rect x="280.4" y="483.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="283.4" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (3 samples, 0.02%)</title><rect x="280.4" y="467.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="283.4" y="478.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.02%)</title><rect x="280.4" y="451.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="283.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (8 samples, 0.06%)</title><rect x="280.8" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="283.8" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (5 samples, 0.04%)</title><rect x="281.0" y="467.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.0" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (5 samples, 0.04%)</title><rect x="281.0" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.0" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (5 samples, 0.04%)</title><rect x="281.0" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.0" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (5 samples, 0.04%)</title><rect x="281.0" y="419.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="284.0" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (5 samples, 0.04%)</title><rect x="281.0" y="403.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.0" y="414.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (5 samples, 0.04%)</title><rect x="281.0" y="387.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (42 samples, 0.34%)</title><rect x="281.5" y="483.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.5" y="494.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (37 samples, 0.30%)</title><rect x="282.0" y="467.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.0" y="478.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (7 samples, 0.06%)</title><rect x="282.0" y="451.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="285.0" y="462.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (3 samples, 0.02%)</title><rect x="282.4" y="435.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="285.4" y="446.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (3 samples, 0.02%)</title><rect x="282.4" y="419.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="285.4" y="430.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (3 samples, 0.02%)</title><rect x="282.4" y="403.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.4" y="414.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (30 samples, 0.24%)</title><rect x="282.6" y="451.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.6" y="462.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (29 samples, 0.23%)</title><rect x="282.7" y="435.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.7" y="446.0"></text>
</g>
<g>
<title>JVM_IHashCode (19 samples, 0.15%)</title><rect x="283.4" y="419.0" width="1.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="286.4" y="430.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (5 samples, 0.04%)</title><rect x="283.8" y="403.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="286.8" y="414.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (5 samples, 0.04%)</title><rect x="284.4" y="403.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="287.4" y="414.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (3 samples, 0.02%)</title><rect x="284.5" y="387.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="287.5" y="398.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (3 samples, 0.02%)</title><rect x="284.5" y="371.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="287.5" y="382.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (3 samples, 0.02%)</title><rect x="284.5" y="355.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="287.5" y="366.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (3 samples, 0.02%)</title><rect x="284.5" y="339.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="287.5" y="350.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (4 samples, 0.03%)</title><rect x="284.8" y="403.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="287.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (6 samples, 0.05%)</title><rect x="285.5" y="499.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.5" y="510.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (4 samples, 0.03%)</title><rect x="285.7" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (41 samples, 0.33%)</title><rect x="286.1" y="515.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (40 samples, 0.32%)</title><rect x="286.1" y="499.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (40 samples, 0.32%)</title><rect x="286.1" y="483.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="289.1" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.now (26 samples, 0.21%)</title><rect x="286.1" y="467.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.1" y="478.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (26 samples, 0.21%)</title><rect x="286.1" y="451.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="289.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (18 samples, 0.14%)</title><rect x="286.8" y="435.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.8" y="446.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (14 samples, 0.11%)</title><rect x="287.1" y="419.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="290.1" y="430.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.02%)</title><rect x="287.6" y="403.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="290.6" y="414.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (6 samples, 0.05%)</title><rect x="287.8" y="403.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="290.8" y="414.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.03%)</title><rect x="287.8" y="387.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="290.8" y="398.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (3 samples, 0.02%)</title><rect x="287.8" y="371.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="290.8" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.plus (14 samples, 0.11%)</title><rect x="288.5" y="467.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="291.5" y="478.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (14 samples, 0.11%)</title><rect x="288.5" y="451.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.5" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plus (14 samples, 0.11%)</title><rect x="288.5" y="435.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.5" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (14 samples, 0.11%)</title><rect x="288.5" y="419.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.5" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (12 samples, 0.10%)</title><rect x="288.5" y="403.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.5" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.10%)</title><rect x="288.5" y="387.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.5" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (9 samples, 0.07%)</title><rect x="288.8" y="371.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="291.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/8386456.get (3 samples, 0.02%)</title><rect x="290.1" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="293.1" y="590.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.02%)</title><rect x="290.6" y="579.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="293.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$407/608496021.get (43 samples, 0.34%)</title><rect x="290.9" y="595.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="293.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$get$3 (43 samples, 0.34%)</title><rect x="290.9" y="579.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.9" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.08%)</title><rect x="290.9" y="563.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="293.9" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.08%)</title><rect x="290.9" y="547.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="293.9" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.08%)</title><rect x="290.9" y="531.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="293.9" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.08%)</title><rect x="290.9" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="293.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.07%)</title><rect x="291.0" y="499.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="294.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.contains (5 samples, 0.04%)</title><rect x="291.8" y="563.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="294.8" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOf (5 samples, 0.04%)</title><rect x="291.8" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOfRange (5 samples, 0.04%)</title><rect x="291.8" y="531.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="294.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ValueUtils.from (28 samples, 0.22%)</title><rect x="292.3" y="563.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="295.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (22 samples, 0.18%)</title><rect x="292.5" y="547.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (17 samples, 0.14%)</title><rect x="292.6" y="531.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (14 samples, 0.11%)</title><rect x="292.8" y="515.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="295.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (13 samples, 0.10%)</title><rect x="292.9" y="499.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (4 samples, 0.03%)</title><rect x="293.7" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.7" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.02%)</title><rect x="293.7" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="296.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/Value.present (4 samples, 0.03%)</title><rect x="294.6" y="547.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (35 samples, 0.28%)</title><rect x="295.0" y="611.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (34 samples, 0.27%)</title><rect x="295.1" y="595.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="298.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (34 samples, 0.27%)</title><rect x="295.1" y="579.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (34 samples, 0.27%)</title><rect x="295.1" y="563.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="298.1" y="574.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.04%)</title><rect x="295.9" y="547.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="298.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4 samples, 0.03%)</title><rect x="296.4" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="299.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$324/1583117545.run (6 samples, 0.05%)</title><rect x="296.7" y="547.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="299.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.05%)</title><rect x="297.3" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$115/356589445.run (5 samples, 0.04%)</title><rect x="297.9" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,811 samples, 30.52%)</title><rect x="298.3" y="611.0" width="360.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.3" y="622.0">java/util/concurrent/ThreadPoolExecutor.getTask</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3,787 samples, 30.33%)</title><rect x="300.6" y="595.0" width="357.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.6" y="606.0">java/util/concurrent/LinkedBlockingQueue.take</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3,002 samples, 24.04%)</title><rect x="301.1" y="579.0" width="283.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.1" y="590.0">java/util/concurrent/locks/AbstractQue..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (3 samples, 0.02%)</title><rect x="301.6" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.02%)</title><rect x="301.6" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="304.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.02%)</title><rect x="301.6" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="304.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (17 samples, 0.14%)</title><rect x="301.9" y="563.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (17 samples, 0.14%)</title><rect x="301.9" y="547.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="304.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (17 samples, 0.14%)</title><rect x="301.9" y="531.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.10%)</title><rect x="302.4" y="515.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.4" y="526.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (11 samples, 0.09%)</title><rect x="302.5" y="499.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="305.5" y="510.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (11 samples, 0.09%)</title><rect x="302.5" y="483.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="305.5" y="494.0"></text>
</g>
<g>
<title>__psynch_cvwait (11 samples, 0.09%)</title><rect x="302.5" y="467.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="305.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (238 samples, 1.91%)</title><rect x="303.5" y="563.0" width="22.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="306.5" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (238 samples, 1.91%)</title><rect x="303.5" y="547.0" width="22.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.5" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (224 samples, 1.79%)</title><rect x="304.8" y="531.0" width="21.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.8" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (224 samples, 1.79%)</title><rect x="304.8" y="515.0" width="21.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.8" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (220 samples, 1.76%)</title><rect x="305.1" y="499.0" width="20.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.1" y="510.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (205 samples, 1.64%)</title><rect x="306.6" y="483.0" width="19.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="309.6" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (4 samples, 0.03%)</title><rect x="307.5" y="467.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="310.5" y="478.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (4 samples, 0.03%)</title><rect x="307.5" y="451.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="310.5" y="462.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (4 samples, 0.03%)</title><rect x="307.5" y="435.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="310.5" y="446.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (4 samples, 0.03%)</title><rect x="307.5" y="419.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="310.5" y="430.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (4 samples, 0.03%)</title><rect x="307.5" y="403.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="310.5" y="414.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::ordered_load&lt;void volatile*, (ScopedFenceType)0&gt;(void volatile* const volatile*) (3 samples, 0.02%)</title><rect x="307.6" y="387.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="310.6" y="398.0"></text>
</g>
<g>
<title>void volatile* Atomic::load&lt;void volatile*&gt;(void volatile* const volatile*) (3 samples, 0.02%)</title><rect x="307.6" y="371.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="310.6" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (5 samples, 0.04%)</title><rect x="307.9" y="467.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="310.9" y="478.0"></text>
</g>
<g>
<title>SafepointMechanism::poll(Thread*) (4 samples, 0.03%)</title><rect x="308.0" y="451.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="311.0" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.02%)</title><rect x="308.4" y="467.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="311.4" y="478.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.04%)</title><rect x="308.6" y="467.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="311.6" y="478.0"></text>
</g>
<g>
<title>__psynch_cvsignal (169 samples, 1.35%)</title><rect x="309.2" y="467.0" width="16.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="312.2" y="478.0"></text>
</g>
<g>
<title>pthread_cond_signal (3 samples, 0.02%)</title><rect x="325.4" y="467.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="328.4" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.02%)</title><rect x="325.6" y="467.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="328.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,734 samples, 21.90%)</title><rect x="326.2" y="563.0" width="258.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.2" y="574.0">java/util/concurrent/locks/LockSup..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,727 samples, 21.84%)</title><rect x="326.9" y="547.0" width="257.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.9" y="558.0">jdk/internal/misc/Unsafe.park</text>
</g>
<g>
<title>JavaThreadParkedState::~JavaThreadParkedState() (3 samples, 0.02%)</title><rect x="337.1" y="531.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="340.1" y="542.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (2,612 samples, 20.92%)</title><rect x="337.7" y="531.0" width="246.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="340.7" y="542.0">Unsafe_Park(JNIEnv_*, _jobject*, ..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (6 samples, 0.05%)</title><rect x="338.3" y="515.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="341.3" y="526.0"></text>
</g>
<g>
<title>Chunk::next() const (3 samples, 0.02%)</title><rect x="338.6" y="499.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="341.6" y="510.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (3 samples, 0.02%)</title><rect x="339.4" y="515.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="342.4" y="526.0"></text>
</g>
<g>
<title>JavaThread::is_terminated() const (3 samples, 0.02%)</title><rect x="339.4" y="499.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="342.4" y="510.0"></text>
</g>
<g>
<title>int OrderAccess::load_acquire&lt;int&gt;(int const volatile*) (3 samples, 0.02%)</title><rect x="339.4" y="483.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="342.4" y="494.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;int, OrderAccess::PlatformOrderedLoad&lt;4ul, (ScopedFenceType)0&gt;, void&gt;::operator()(int const volatile*) const (3 samples, 0.02%)</title><rect x="339.4" y="467.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="342.4" y="478.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (15 samples, 0.12%)</title><rect x="339.6" y="515.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="342.6" y="526.0"></text>
</g>
<g>
<title>JavaThreadStatusChanger::JavaThreadStatusChanger(JavaThread*, java_lang_Thread::ThreadStatus) (6 samples, 0.05%)</title><rect x="339.7" y="499.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="342.7" y="510.0"></text>
</g>
<g>
<title>JavaThreadStatusChanger::save_old_state(JavaThread*) (3 samples, 0.02%)</title><rect x="339.8" y="483.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="342.8" y="494.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (3 samples, 0.02%)</title><rect x="339.8" y="467.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="342.8" y="478.0"></text>
</g>
<g>
<title>ThreadStatistics::monitor_wait() (5 samples, 0.04%)</title><rect x="340.6" y="499.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="343.6" y="510.0"></text>
</g>
<g>
<title>ThreadStatistics::check_and_reset_count() (4 samples, 0.03%)</title><rect x="340.7" y="483.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="343.7" y="494.0"></text>
</g>
<g>
<title>JavaThreadStatusChanger::set_thread_status(JavaThread*, java_lang_Thread::ThreadStatus) (5 samples, 0.04%)</title><rect x="341.2" y="515.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="344.2" y="526.0"></text>
</g>
<g>
<title>JavaThread::threadObj() const (5 samples, 0.04%)</title><rect x="341.2" y="499.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="344.2" y="510.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (3 samples, 0.02%)</title><rect x="341.7" y="515.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="344.7" y="526.0"></text>
</g>
<g>
<title>OrderAccess::fence() (3 samples, 0.02%)</title><rect x="342.4" y="515.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="345.4" y="526.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2,527 samples, 20.24%)</title><rect x="342.7" y="515.0" width="238.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="345.7" y="526.0">Parker::park(bool, long)</text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (3 samples, 0.02%)</title><rect x="343.5" y="499.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="346.5" y="510.0"></text>
</g>
<g>
<title>os::is_MP() (3 samples, 0.02%)</title><rect x="343.5" y="483.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="346.5" y="494.0"></text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (18 samples, 0.14%)</title><rect x="343.8" y="499.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="346.8" y="510.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (6 samples, 0.05%)</title><rect x="344.6" y="483.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="347.6" y="494.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (4 samples, 0.03%)</title><rect x="345.1" y="483.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="348.1" y="494.0"></text>
</g>
<g>
<title>ThreadBlockInVM::ThreadBlockInVM(JavaThread*) (5 samples, 0.04%)</title><rect x="345.5" y="499.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="348.5" y="510.0"></text>
</g>
<g>
<title>OrderAccess::fence() (3 samples, 0.02%)</title><rect x="345.7" y="483.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="348.7" y="494.0"></text>
</g>
<g>
<title>__psynch_cvwait (2,438 samples, 19.53%)</title><rect x="346.0" y="499.0" width="230.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="349.0" y="510.0">__psynch_cvwait</text>
</g>
<g>
<title>_pthread_cond_wait (34 samples, 0.27%)</title><rect x="576.4" y="499.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="579.4" y="510.0"></text>
</g>
<g>
<title>_pthread_mutex_droplock (8 samples, 0.06%)</title><rect x="578.8" y="483.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="581.8" y="494.0"></text>
</g>
<g>
<title>_pthread_testcancel (14 samples, 0.11%)</title><rect x="579.6" y="499.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="582.6" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.05%)</title><rect x="580.9" y="499.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="583.9" y="510.0"></text>
</g>
<g>
<title>ThreadBlockInVM::ThreadBlockInVM(JavaThread*) (3 samples, 0.02%)</title><rect x="581.7" y="515.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="584.7" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (5 samples, 0.04%)</title><rect x="582.2" y="515.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="585.2" y="526.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (3 samples, 0.02%)</title><rect x="582.4" y="499.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="585.4" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (7 samples, 0.06%)</title><rect x="582.7" y="515.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="585.7" y="526.0"></text>
</g>
<g>
<title>SafepointMechanism::poll(Thread*) (3 samples, 0.02%)</title><rect x="583.0" y="499.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="586.0" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (4 samples, 0.03%)</title><rect x="584.2" y="515.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="587.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.02%)</title><rect x="584.8" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="587.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.02%)</title><rect x="584.8" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="587.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.02%)</title><rect x="584.8" y="547.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (3 samples, 0.02%)</title><rect x="584.8" y="531.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (232 samples, 1.86%)</title><rect x="585.1" y="579.0" width="21.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.1" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (229 samples, 1.83%)</title><rect x="585.4" y="563.0" width="21.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="588.4" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (229 samples, 1.83%)</title><rect x="585.4" y="547.0" width="21.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="588.4" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (211 samples, 1.69%)</title><rect x="587.0" y="531.0" width="19.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="590.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (211 samples, 1.69%)</title><rect x="587.0" y="515.0" width="19.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (211 samples, 1.69%)</title><rect x="587.0" y="499.0" width="19.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.0" y="510.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (208 samples, 1.67%)</title><rect x="587.2" y="483.0" width="19.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="590.2" y="494.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (201 samples, 1.61%)</title><rect x="587.8" y="467.0" width="19.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="590.8" y="478.0"></text>
</g>
<g>
<title>__psynch_cvwait (194 samples, 1.55%)</title><rect x="588.0" y="451.0" width="18.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="591.0" y="462.0"></text>
</g>
<g>
<title>_pthread_cond_wait (3 samples, 0.02%)</title><rect x="606.3" y="451.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="609.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (545 samples, 4.36%)</title><rect x="607.0" y="579.0" width="51.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.0" y="590.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (545 samples, 4.36%)</title><rect x="607.0" y="563.0" width="51.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.0" y="574.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (545 samples, 4.36%)</title><rect x="607.0" y="547.0" width="51.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.0" y="558.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (545 samples, 4.36%)</title><rect x="607.0" y="531.0" width="51.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.0" y="542.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (509 samples, 4.08%)</title><rect x="610.4" y="515.0" width="48.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="613.4" y="526.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (473 samples, 3.79%)</title><rect x="613.8" y="499.0" width="44.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="616.8" y="510.0">Unsa..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ull&gt;::oop_access_barrier(void*) (3 samples, 0.02%)</title><rect x="613.9" y="483.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="616.9" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (5 samples, 0.04%)</title><rect x="615.2" y="483.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="618.2" y="494.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (4 samples, 0.03%)</title><rect x="615.3" y="467.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="618.3" y="478.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (3 samples, 0.02%)</title><rect x="615.3" y="451.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="618.3" y="462.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (3 samples, 0.02%)</title><rect x="615.3" y="435.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="618.3" y="446.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (3 samples, 0.02%)</title><rect x="615.3" y="419.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="618.3" y="430.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (6 samples, 0.05%)</title><rect x="615.7" y="483.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="618.7" y="494.0"></text>
</g>
<g>
<title>SafepointMechanism::poll(Thread*) (4 samples, 0.03%)</title><rect x="615.9" y="467.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="618.9" y="478.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (4 samples, 0.03%)</title><rect x="615.9" y="451.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="618.9" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (10 samples, 0.08%)</title><rect x="616.4" y="483.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="619.4" y="494.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (5 samples, 0.04%)</title><rect x="616.9" y="467.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="619.9" y="478.0"></text>
</g>
<g>
<title>__psynch_cvsignal (410 samples, 3.28%)</title><rect x="617.5" y="483.0" width="38.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="620.5" y="494.0">__p..</text>
</g>
<g>
<title>pthread_cond_signal (11 samples, 0.09%)</title><rect x="656.4" y="483.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="659.4" y="494.0"></text>
</g>
<g>
<title>_pthread_cond_updateval (5 samples, 0.04%)</title><rect x="657.0" y="467.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="660.0" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_lock (9 samples, 0.07%)</title><rect x="657.6" y="483.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="660.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$324/1583117545.run (383 samples, 3.07%)</title><rect x="658.5" y="611.0" width="36.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.5" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (383 samples, 3.07%)</title><rect x="658.5" y="595.0" width="36.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.5" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (383 samples, 3.07%)</title><rect x="658.5" y="579.0" width="36.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.5" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (375 samples, 3.00%)</title><rect x="659.2" y="563.0" width="35.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="662.2" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (375 samples, 3.00%)</title><rect x="659.2" y="547.0" width="35.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.2" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (374 samples, 3.00%)</title><rect x="659.3" y="531.0" width="35.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.3" y="542.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (374 samples, 3.00%)</title><rect x="659.3" y="515.0" width="35.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.3" y="526.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (374 samples, 3.00%)</title><rect x="659.3" y="499.0" width="35.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="662.3" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (372 samples, 2.98%)</title><rect x="659.4" y="483.0" width="35.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.4" y="494.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (370 samples, 2.96%)</title><rect x="659.6" y="467.0" width="35.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.6" y="478.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (369 samples, 2.96%)</title><rect x="659.7" y="451.0" width="34.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.7" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (68 samples, 0.54%)</title><rect x="659.8" y="435.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="662.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (48 samples, 0.38%)</title><rect x="659.9" y="419.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (48 samples, 0.38%)</title><rect x="659.9" y="403.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (47 samples, 0.38%)</title><rect x="660.0" y="387.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (47 samples, 0.38%)</title><rect x="660.0" y="371.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (13 samples, 0.10%)</title><rect x="660.2" y="355.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.06%)</title><rect x="660.3" y="339.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.02%)</title><rect x="660.4" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.02%)</title><rect x="660.4" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.02%)</title><rect x="660.4" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.getProbe (3 samples, 0.02%)</title><rect x="660.4" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="663.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$334/1364128704.apply (5 samples, 0.04%)</title><rect x="661.0" y="339.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (5 samples, 0.04%)</title><rect x="661.0" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="664.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (5 samples, 0.04%)</title><rect x="661.0" y="307.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="664.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (4 samples, 0.03%)</title><rect x="661.1" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (3 samples, 0.02%)</title><rect x="661.1" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="664.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (25 samples, 0.20%)</title><rect x="661.4" y="355.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="664.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (24 samples, 0.19%)</title><rect x="661.5" y="339.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="664.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.05%)</title><rect x="661.6" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="664.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.05%)</title><rect x="661.6" y="307.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.05%)</title><rect x="661.6" y="291.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="664.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (6 samples, 0.05%)</title><rect x="661.6" y="275.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.05%)</title><rect x="661.6" y="259.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="664.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.05%)</title><rect x="661.6" y="243.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.6" y="254.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="661.6" y="227.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="664.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/2063345593.apply (17 samples, 0.14%)</title><rect x="662.2" y="323.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (17 samples, 0.14%)</title><rect x="662.2" y="307.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="665.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (17 samples, 0.14%)</title><rect x="662.2" y="291.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="665.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/1124124731.apply (17 samples, 0.14%)</title><rect x="662.2" y="275.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (17 samples, 0.14%)</title><rect x="662.2" y="259.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.02%)</title><rect x="662.5" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (3 samples, 0.02%)</title><rect x="662.8" y="243.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="665.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.02%)</title><rect x="662.8" y="227.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (8 samples, 0.06%)</title><rect x="663.0" y="243.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (5 samples, 0.04%)</title><rect x="663.0" y="227.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (5 samples, 0.04%)</title><rect x="663.0" y="211.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (5 samples, 0.04%)</title><rect x="663.0" y="195.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="666.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$330/222913769.accept (5 samples, 0.04%)</title><rect x="663.0" y="179.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (3 samples, 0.02%)</title><rect x="663.8" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.8" y="366.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.03%)</title><rect x="664.1" y="355.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="667.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (12 samples, 0.10%)</title><rect x="664.5" y="419.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="667.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (7 samples, 0.06%)</title><rect x="664.9" y="403.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (3 samples, 0.02%)</title><rect x="664.9" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="667.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (4 samples, 0.03%)</title><rect x="665.2" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="668.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.06%)</title><rect x="665.6" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$338/990201068.run (7 samples, 0.06%)</title><rect x="665.6" y="403.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (7 samples, 0.06%)</title><rect x="665.6" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (7 samples, 0.06%)</title><rect x="665.6" y="371.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (298 samples, 2.39%)</title><rect x="666.4" y="435.0" width="28.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="669.4" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (298 samples, 2.39%)</title><rect x="666.4" y="419.0" width="28.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.4" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (298 samples, 2.39%)</title><rect x="666.4" y="403.0" width="28.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.4" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (294 samples, 2.35%)</title><rect x="666.8" y="387.0" width="27.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.8" y="398.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$336/192053093.run (5 samples, 0.04%)</title><rect x="667.0" y="371.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="670.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (5 samples, 0.04%)</title><rect x="667.0" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (5 samples, 0.04%)</title><rect x="667.0" y="339.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (287 samples, 2.30%)</title><rect x="667.5" y="371.0" width="27.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.5" y="382.0">j..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (279 samples, 2.23%)</title><rect x="667.5" y="355.0" width="26.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.5" y="366.0">j..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (279 samples, 2.23%)</title><rect x="667.5" y="339.0" width="26.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="670.5" y="350.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (277 samples, 2.22%)</title><rect x="667.7" y="323.0" width="26.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.7" y="334.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (275 samples, 2.20%)</title><rect x="667.9" y="307.0" width="25.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="670.9" y="318.0">s..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (15 samples, 0.12%)</title><rect x="667.9" y="291.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="670.9" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (15 samples, 0.12%)</title><rect x="667.9" y="275.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (15 samples, 0.12%)</title><rect x="667.9" y="259.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (260 samples, 2.08%)</title><rect x="669.3" y="291.0" width="24.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.3" y="302.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (257 samples, 2.06%)</title><rect x="669.6" y="275.0" width="24.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="672.6" y="286.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (6 samples, 0.05%)</title><rect x="669.9" y="259.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="672.9" y="270.0"></text>
</g>
<g>
<title>writev (247 samples, 1.98%)</title><rect x="670.5" y="259.0" width="23.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="673.5" y="270.0">w..</text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (5 samples, 0.04%)</title><rect x="693.8" y="355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="696.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (3 samples, 0.02%)</title><rect x="694.3" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (562 samples, 4.50%)</title><rect x="694.7" y="611.0" width="53.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.7" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (560 samples, 4.49%)</title><rect x="694.9" y="595.0" width="52.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.9" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (315 samples, 2.52%)</title><rect x="695.3" y="579.0" width="29.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.3" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$259/1643973216.run (315 samples, 2.52%)</title><rect x="695.3" y="563.0" width="29.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.3" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (313 samples, 2.51%)</title><rect x="695.5" y="547.0" width="29.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.5" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (4 samples, 0.03%)</title><rect x="695.5" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="698.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (72 samples, 0.58%)</title><rect x="695.8" y="531.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="698.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (72 samples, 0.58%)</title><rect x="695.8" y="515.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="698.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (72 samples, 0.58%)</title><rect x="695.8" y="499.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (71 samples, 0.57%)</title><rect x="695.9" y="483.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (70 samples, 0.56%)</title><rect x="696.0" y="467.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.05%)</title><rect x="696.0" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="699.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.05%)</title><rect x="696.0" y="435.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$328/562141945.get$Lambda (6 samples, 0.05%)</title><rect x="696.0" y="419.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (64 samples, 0.51%)</title><rect x="696.6" y="451.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (62 samples, 0.50%)</title><rect x="696.8" y="435.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="699.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (60 samples, 0.48%)</title><rect x="697.0" y="419.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.0" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.04%)</title><rect x="697.7" y="403.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="700.7" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (3 samples, 0.02%)</title><rect x="697.7" y="387.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="700.7" y="398.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.02%)</title><rect x="697.7" y="371.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="700.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (46 samples, 0.37%)</title><rect x="698.3" y="403.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.3" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (43 samples, 0.34%)</title><rect x="698.6" y="387.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.6" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (38 samples, 0.30%)</title><rect x="699.0" y="371.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.0" y="382.0"></text>
</g>
<g>
<title>write (33 samples, 0.26%)</title><rect x="699.5" y="355.0" width="3.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="702.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.02%)</title><rect x="702.6" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (234 samples, 1.87%)</title><rect x="702.9" y="531.0" width="22.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.9" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (234 samples, 1.87%)</title><rect x="702.9" y="515.0" width="22.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.9" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (234 samples, 1.87%)</title><rect x="702.9" y="499.0" width="22.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.9" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (234 samples, 1.87%)</title><rect x="702.9" y="483.0" width="22.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.9" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (110 samples, 0.88%)</title><rect x="703.0" y="467.0" width="10.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="706.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (110 samples, 0.88%)</title><rect x="703.0" y="451.0" width="10.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="706.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (110 samples, 0.88%)</title><rect x="703.0" y="435.0" width="10.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (110 samples, 0.88%)</title><rect x="703.0" y="419.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="706.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (109 samples, 0.87%)</title><rect x="703.1" y="403.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (109 samples, 0.87%)</title><rect x="703.1" y="387.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="706.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (109 samples, 0.87%)</title><rect x="703.1" y="371.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="706.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.05%)</title><rect x="703.1" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.03%)</title><rect x="703.1" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.03%)</title><rect x="703.1" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (4 samples, 0.03%)</title><rect x="703.1" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="706.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.03%)</title><rect x="703.1" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="706.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.03%)</title><rect x="703.1" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (98 samples, 0.78%)</title><rect x="703.7" y="355.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="706.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (98 samples, 0.78%)</title><rect x="703.7" y="339.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="706.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (82 samples, 0.66%)</title><rect x="703.7" y="323.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="706.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.06%)</title><rect x="703.9" y="307.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.05%)</title><rect x="703.9" y="291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.05%)</title><rect x="703.9" y="275.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="706.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (6 samples, 0.05%)</title><rect x="703.9" y="259.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="706.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.getProbe (5 samples, 0.04%)</title><rect x="704.0" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.0" y="254.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="704.0" y="227.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="707.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$175/71332808.apply (46 samples, 0.37%)</title><rect x="704.6" y="307.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="707.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (46 samples, 0.37%)</title><rect x="704.6" y="291.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (3 samples, 0.02%)</title><rect x="704.6" y="275.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="707.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.02%)</title><rect x="704.6" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="707.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (3 samples, 0.02%)</title><rect x="704.6" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="707.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (42 samples, 0.34%)</title><rect x="704.9" y="275.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="707.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (40 samples, 0.32%)</title><rect x="705.1" y="259.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (40 samples, 0.32%)</title><rect x="705.1" y="243.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.1" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (14 samples, 0.11%)</title><rect x="705.1" y="227.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (9 samples, 0.07%)</title><rect x="705.4" y="211.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.07%)</title><rect x="705.4" y="195.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (9 samples, 0.07%)</title><rect x="705.4" y="179.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.06%)</title><rect x="705.5" y="163.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (7 samples, 0.06%)</title><rect x="705.5" y="147.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (5 samples, 0.04%)</title><rect x="705.5" y="131.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.03%)</title><rect x="705.5" y="115.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="708.5" y="126.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (4 samples, 0.03%)</title><rect x="705.5" y="99.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.5" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (4 samples, 0.03%)</title><rect x="705.5" y="83.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="708.5" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (24 samples, 0.19%)</title><rect x="706.6" y="227.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$361/1529121028.run (23 samples, 0.18%)</title><rect x="706.7" y="211.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (23 samples, 0.18%)</title><rect x="706.7" y="195.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (7 samples, 0.06%)</title><rect x="706.8" y="179.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="709.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.02%)</title><rect x="706.8" y="163.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="709.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.02%)</title><rect x="706.8" y="147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.03%)</title><rect x="707.1" y="163.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="710.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (7 samples, 0.06%)</title><rect x="707.6" y="179.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (7 samples, 0.06%)</title><rect x="707.6" y="163.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.6" y="174.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (7 samples, 0.06%)</title><rect x="707.6" y="147.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.6" y="158.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (6 samples, 0.05%)</title><rect x="707.7" y="131.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.7" y="142.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (6 samples, 0.05%)</title><rect x="707.7" y="115.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.7" y="126.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.04%)</title><rect x="707.7" y="99.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="710.7" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (6 samples, 0.05%)</title><rect x="708.3" y="179.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (4 samples, 0.03%)</title><rect x="708.5" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="711.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="708.5" y="147.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.5" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2141817446.invoke (4 samples, 0.03%)</title><rect x="708.5" y="131.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="711.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.03%)</title><rect x="708.5" y="115.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 0.03%)</title><rect x="708.5" y="99.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="711.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 0.03%)</title><rect x="708.5" y="83.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.5" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$307/724253840.apply (26 samples, 0.21%)</title><rect x="709.0" y="307.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (26 samples, 0.21%)</title><rect x="709.0" y="291.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="712.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (24 samples, 0.19%)</title><rect x="709.1" y="275.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (16 samples, 0.13%)</title><rect x="709.8" y="259.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (16 samples, 0.13%)</title><rect x="709.8" y="243.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.8" y="254.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (14 samples, 0.11%)</title><rect x="710.0" y="227.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="713.0" y="238.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (9 samples, 0.07%)</title><rect x="710.5" y="211.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="713.5" y="222.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (9 samples, 0.07%)</title><rect x="710.5" y="195.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.5" y="206.0"></text>
</g>
<g>
<title>JVM_IHashCode (7 samples, 0.06%)</title><rect x="710.6" y="179.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="713.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (8 samples, 0.06%)</title><rect x="711.4" y="323.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6 samples, 0.05%)</title><rect x="711.6" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="714.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$310/278934779.apply (5 samples, 0.04%)</title><rect x="711.7" y="291.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="714.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (5 samples, 0.04%)</title><rect x="711.7" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="714.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (5 samples, 0.04%)</title><rect x="711.7" y="259.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="714.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (5 samples, 0.04%)</title><rect x="711.7" y="243.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="714.7" y="254.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (3 samples, 0.02%)</title><rect x="711.9" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (3 samples, 0.02%)</title><rect x="711.9" y="211.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="714.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (6 samples, 0.05%)</title><rect x="712.2" y="323.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="715.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.02%)</title><rect x="712.5" y="307.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.02%)</title><rect x="712.5" y="291.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$342/1623830039.apply (5 samples, 0.04%)</title><rect x="712.9" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="715.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (5 samples, 0.04%)</title><rect x="712.9" y="339.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="715.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.02%)</title><rect x="713.1" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (116 samples, 0.93%)</title><rect x="713.5" y="467.0" width="11.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="716.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (9 samples, 0.07%)</title><rect x="714.7" y="451.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="717.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (13 samples, 0.10%)</title><rect x="715.6" y="451.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="718.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.08%)</title><rect x="715.9" y="435.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.9" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (10 samples, 0.08%)</title><rect x="715.9" y="419.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (20 samples, 0.16%)</title><rect x="717.0" y="451.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (20 samples, 0.16%)</title><rect x="717.0" y="435.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (19 samples, 0.15%)</title><rect x="717.1" y="419.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.1" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (17 samples, 0.14%)</title><rect x="717.3" y="403.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="720.3" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.accept (14 samples, 0.11%)</title><rect x="717.6" y="387.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12 samples, 0.10%)</title><rect x="717.8" y="371.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="720.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (6 samples, 0.05%)</title><rect x="717.8" y="355.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.8" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.03%)</title><rect x="718.5" y="355.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="721.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (58 samples, 0.46%)</title><rect x="718.9" y="451.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="721.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (55 samples, 0.44%)</title><rect x="719.2" y="435.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="722.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.07%)</title><rect x="719.2" y="419.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.07%)</title><rect x="719.2" y="403.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.07%)</title><rect x="719.2" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.2" y="398.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.02%)</title><rect x="719.7" y="371.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="722.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (22 samples, 0.18%)</title><rect x="720.1" y="419.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="723.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (8 samples, 0.06%)</title><rect x="721.3" y="403.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.3" y="414.0"></text>
</g>
<g>
<title>java/lang/String.trim (6 samples, 0.05%)</title><rect x="722.2" y="419.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (6 samples, 0.05%)</title><rect x="722.2" y="403.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="725.2" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (16 samples, 0.13%)</title><rect x="722.9" y="419.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="725.9" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.03%)</title><rect x="723.4" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="726.4" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (4 samples, 0.03%)</title><rect x="723.8" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="726.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$280/1821321863.accept (6 samples, 0.05%)</title><rect x="724.5" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (6 samples, 0.05%)</title><rect x="724.5" y="451.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (241 samples, 1.93%)</title><rect x="725.0" y="579.0" width="22.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="728.0" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (241 samples, 1.93%)</title><rect x="725.0" y="563.0" width="22.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="728.0" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (240 samples, 1.92%)</title><rect x="725.0" y="547.0" width="22.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.0" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$259/1643973216.run (240 samples, 1.92%)</title><rect x="725.0" y="531.0" width="22.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="728.0" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (240 samples, 1.92%)</title><rect x="725.0" y="515.0" width="22.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.0" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.04%)</title><rect x="725.1" y="499.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="728.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (4 samples, 0.03%)</title><rect x="725.1" y="483.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="728.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (233 samples, 1.87%)</title><rect x="725.6" y="499.0" width="22.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="728.6" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (233 samples, 1.87%)</title><rect x="725.6" y="483.0" width="22.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.6" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (233 samples, 1.87%)</title><rect x="725.6" y="467.0" width="22.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="728.6" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (232 samples, 1.86%)</title><rect x="725.7" y="451.0" width="21.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="728.7" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (232 samples, 1.86%)</title><rect x="725.7" y="435.0" width="21.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="728.7" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (232 samples, 1.86%)</title><rect x="725.7" y="419.0" width="21.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.7" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$362/413808019.run (158 samples, 1.27%)</title><rect x="725.8" y="403.0" width="14.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (158 samples, 1.27%)</title><rect x="725.8" y="387.0" width="14.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="728.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (157 samples, 1.26%)</title><rect x="725.9" y="371.0" width="14.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (8 samples, 0.06%)</title><rect x="725.9" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.9" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.05%)</title><rect x="725.9" y="339.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.9" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.03%)</title><rect x="726.1" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.1" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.03%)</title><rect x="726.1" y="307.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="729.1" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.03%)</title><rect x="726.1" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.1" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.02%)</title><rect x="726.2" y="275.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="729.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (148 samples, 1.19%)</title><rect x="726.6" y="355.0" width="14.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (147 samples, 1.18%)</title><rect x="726.7" y="339.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="729.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (101 samples, 0.81%)</title><rect x="726.8" y="323.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (5 samples, 0.04%)</title><rect x="736.4" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.4" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.03%)</title><rect x="736.5" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.5" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.03%)</title><rect x="736.5" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="739.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (4 samples, 0.03%)</title><rect x="736.5" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.5" y="286.0"></text>
</g>
<g>
<title>java/util/Objects.equals (4 samples, 0.03%)</title><rect x="736.5" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="739.5" y="270.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (4 samples, 0.03%)</title><rect x="736.5" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="739.5" y="254.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (4 samples, 0.03%)</title><rect x="736.5" y="227.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="739.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (39 samples, 0.31%)</title><rect x="736.8" y="323.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (39 samples, 0.31%)</title><rect x="736.8" y="307.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="739.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (5 samples, 0.04%)</title><rect x="736.8" y="291.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="739.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (34 samples, 0.27%)</title><rect x="737.3" y="291.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (34 samples, 0.27%)</title><rect x="737.3" y="275.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="740.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (23 samples, 0.18%)</title><rect x="737.3" y="259.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (23 samples, 0.18%)</title><rect x="737.3" y="243.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (23 samples, 0.18%)</title><rect x="737.3" y="227.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.3" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (22 samples, 0.18%)</title><rect x="737.4" y="211.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (20 samples, 0.16%)</title><rect x="737.6" y="195.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.6" y="206.0"></text>
</g>
<g>
<title>write (18 samples, 0.14%)</title><rect x="737.8" y="179.0" width="1.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="740.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (11 samples, 0.09%)</title><rect x="739.5" y="259.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="742.5" y="270.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.08%)</title><rect x="739.6" y="243.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="742.6" y="254.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (8 samples, 0.06%)</title><rect x="739.7" y="227.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="742.7" y="238.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.03%)</title><rect x="739.7" y="211.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="742.7" y="222.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (4 samples, 0.03%)</title><rect x="740.1" y="211.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="743.1" y="222.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (4 samples, 0.03%)</title><rect x="740.1" y="195.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="743.1" y="206.0"></text>
</g>
<g>
<title>__psynch_mutexwait (4 samples, 0.03%)</title><rect x="740.1" y="179.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="743.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$363/625315377.accept (8 samples, 0.06%)</title><rect x="740.7" y="403.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (8 samples, 0.06%)</title><rect x="740.7" y="387.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (8 samples, 0.06%)</title><rect x="740.7" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="743.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.04%)</title><rect x="740.7" y="355.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.04%)</title><rect x="740.7" y="339.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.04%)</title><rect x="740.7" y="323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$282/1146859669.accept (3 samples, 0.02%)</title><rect x="741.2" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="744.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (64 samples, 0.51%)</title><rect x="741.5" y="403.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="744.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (64 samples, 0.51%)</title><rect x="741.5" y="387.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (64 samples, 0.51%)</title><rect x="741.5" y="371.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="744.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (61 samples, 0.49%)</title><rect x="741.6" y="355.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (61 samples, 0.49%)</title><rect x="741.6" y="339.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (61 samples, 0.49%)</title><rect x="741.6" y="323.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (59 samples, 0.47%)</title><rect x="741.8" y="307.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$373/624900171.accept (58 samples, 0.46%)</title><rect x="741.9" y="291.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (55 samples, 0.44%)</title><rect x="742.1" y="275.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="745.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (55 samples, 0.44%)</title><rect x="742.1" y="259.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (55 samples, 0.44%)</title><rect x="742.1" y="243.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.02%)</title><rect x="742.1" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (52 samples, 0.42%)</title><rect x="742.4" y="227.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.03%)</title><rect x="742.5" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.03%)</title><rect x="742.5" y="195.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.5" y="206.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="742.5" y="179.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="745.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (47 samples, 0.38%)</title><rect x="742.9" y="211.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (45 samples, 0.36%)</title><rect x="742.9" y="195.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (44 samples, 0.35%)</title><rect x="742.9" y="179.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="745.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (44 samples, 0.35%)</title><rect x="742.9" y="163.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (44 samples, 0.35%)</title><rect x="742.9" y="147.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="745.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (44 samples, 0.35%)</title><rect x="742.9" y="131.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (44 samples, 0.35%)</title><rect x="742.9" y="115.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (41 samples, 0.33%)</title><rect x="743.2" y="99.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="746.2" y="110.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (41 samples, 0.33%)</title><rect x="743.2" y="83.0" width="3.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="746.2" y="94.0"></text>
</g>
<g>
<title>__psynch_cvsignal (35 samples, 0.28%)</title><rect x="743.6" y="67.0" width="3.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="746.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$115/356589445.run (687 samples, 5.50%)</title><rect x="747.8" y="611.0" width="64.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.8" y="622.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$17 (687 samples, 5.50%)</title><rect x="747.8" y="595.0" width="64.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.8" y="606.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$112/1705978347.act (8 samples, 0.06%)</title><rect x="748.2" y="579.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="751.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$1 (8 samples, 0.06%)</title><rect x="748.2" y="563.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="751.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.upsert (8 samples, 0.06%)</title><rect x="748.2" y="547.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (5 samples, 0.04%)</title><rect x="748.2" y="531.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (5 samples, 0.04%)</title><rect x="748.2" y="515.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="751.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$395/1741362108.act (3 samples, 0.02%)</title><rect x="748.4" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="751.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/BasicTopology.replicas (3 samples, 0.02%)</title><rect x="748.7" y="531.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$395/1741362108.act (675 samples, 5.41%)</title><rect x="748.9" y="579.0" width="63.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.9" y="590.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$0 (675 samples, 5.41%)</title><rect x="748.9" y="563.0" width="63.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.9" y="574.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.get (675 samples, 5.41%)</title><rect x="748.9" y="547.0" width="63.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="751.9" y="558.0">ru/mail..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (3 samples, 0.02%)</title><rect x="749.4" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (159 samples, 1.27%)</title><rect x="750.1" y="531.0" width="15.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (153 samples, 1.23%)</title><rect x="750.3" y="515.0" width="14.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.3" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.11%)</title><rect x="750.4" y="499.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.4" y="510.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.06%)</title><rect x="751.0" y="483.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.0" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.06%)</title><rect x="751.0" y="467.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="754.0" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.06%)</title><rect x="751.0" y="451.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.06%)</title><rect x="751.0" y="435.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.0" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (138 samples, 1.11%)</title><rect x="751.7" y="499.0" width="13.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.7" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (137 samples, 1.10%)</title><rect x="751.8" y="483.0" width="12.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="754.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (137 samples, 1.10%)</title><rect x="751.8" y="467.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.8" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (137 samples, 1.10%)</title><rect x="751.8" y="451.0" width="12.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="754.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (137 samples, 1.10%)</title><rect x="751.8" y="435.0" width="12.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.8" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (134 samples, 1.07%)</title><rect x="752.1" y="419.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="755.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (134 samples, 1.07%)</title><rect x="752.1" y="403.0" width="12.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.1" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (122 samples, 0.98%)</title><rect x="752.2" y="387.0" width="11.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.2" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (122 samples, 0.98%)</title><rect x="752.2" y="371.0" width="11.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (120 samples, 0.96%)</title><rect x="752.2" y="355.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.2" y="366.0"></text>
</g>
<g>
<title>write (116 samples, 0.93%)</title><rect x="752.6" y="339.0" width="11.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="755.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (10 samples, 0.08%)</title><rect x="763.8" y="387.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.8" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (10 samples, 0.08%)</title><rect x="763.8" y="371.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="766.8" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (10 samples, 0.08%)</title><rect x="763.8" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (10 samples, 0.08%)</title><rect x="763.8" y="339.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="766.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (10 samples, 0.08%)</title><rect x="763.8" y="323.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="766.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.03%)</title><rect x="764.7" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="767.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.latestIterator (111 samples, 0.89%)</title><rect x="765.1" y="531.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransformWithRemoved (6 samples, 0.05%)</title><rect x="765.2" y="515.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="768.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.05%)</title><rect x="765.2" y="499.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="768.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.05%)</title><rect x="765.2" y="483.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.05%)</title><rect x="765.2" y="467.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (5 samples, 0.04%)</title><rect x="765.2" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="768.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.03%)</title><rect x="765.3" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (3 samples, 0.02%)</title><rect x="765.4" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="768.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.collectItems (104 samples, 0.83%)</title><rect x="765.8" y="515.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="768.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.latestIterator (99 samples, 0.79%)</title><rect x="766.0" y="499.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransformWithRemoved (14 samples, 0.11%)</title><rect x="766.0" y="483.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.0" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (9 samples, 0.07%)</title><rect x="766.0" y="467.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.0" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8 samples, 0.06%)</title><rect x="766.0" y="451.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.hasNext (3 samples, 0.02%)</title><rect x="766.5" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.04%)</title><rect x="766.8" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="769.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.02%)</title><rect x="767.0" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="770.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.02%)</title><rect x="767.0" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.collectIters (85 samples, 0.68%)</title><rect x="767.3" y="483.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTable.iterator (77 samples, 0.62%)</title><rect x="768.0" y="467.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (75 samples, 0.60%)</title><rect x="768.2" y="451.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (75 samples, 0.60%)</title><rect x="768.2" y="435.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="771.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (75 samples, 0.60%)</title><rect x="768.2" y="419.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (74 samples, 0.59%)</title><rect x="768.3" y="403.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="771.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (74 samples, 0.59%)</title><rect x="768.3" y="387.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="771.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (72 samples, 0.58%)</title><rect x="768.5" y="371.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (70 samples, 0.56%)</title><rect x="768.7" y="355.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 0.12%)</title><rect x="773.9" y="339.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 0.12%)</title><rect x="773.9" y="323.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.9" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (15 samples, 0.12%)</title><rect x="773.9" y="307.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.size (3 samples, 0.02%)</title><rect x="775.3" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.size (3 samples, 0.02%)</title><rect x="775.3" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="778.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.sendRequestsAndCollect (278 samples, 2.23%)</title><rect x="775.6" y="531.0" width="26.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.6" y="542.0">r..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (278 samples, 2.23%)</title><rect x="775.6" y="515.0" width="26.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.6" y="526.0">j..</text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (3 samples, 0.02%)</title><rect x="775.6" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (3 samples, 0.02%)</title><rect x="775.6" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="778.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (275 samples, 2.20%)</title><rect x="775.9" y="499.0" width="26.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="778.9" y="510.0">j..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (270 samples, 2.16%)</title><rect x="776.3" y="483.0" width="25.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.3" y="494.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (270 samples, 2.16%)</title><rect x="776.3" y="467.0" width="25.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.3" y="478.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (270 samples, 2.16%)</title><rect x="776.3" y="451.0" width="25.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="779.3" y="462.0">j..</text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (261 samples, 2.09%)</title><rect x="776.3" y="435.0" width="24.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="779.3" y="446.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (259 samples, 2.07%)</title><rect x="776.5" y="419.0" width="24.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.5" y="430.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.04%)</title><rect x="776.5" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="779.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$158/1188038743.apply (254 samples, 2.03%)</title><rect x="777.0" y="403.0" width="24.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.0" y="414.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$sendRequestsAndCollect$7 (254 samples, 2.03%)</title><rect x="777.0" y="387.0" width="24.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="780.0" y="398.0">r..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (254 samples, 2.03%)</title><rect x="777.0" y="371.0" width="24.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.0" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (254 samples, 2.03%)</title><rect x="777.0" y="355.0" width="24.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.0" y="366.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (254 samples, 2.03%)</title><rect x="777.0" y="339.0" width="24.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="780.0" y="350.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (254 samples, 2.03%)</title><rect x="777.0" y="323.0" width="24.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.0" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.02%)</title><rect x="777.4" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="780.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (153 samples, 1.23%)</title><rect x="777.7" y="307.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.03%)</title><rect x="778.0" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.0" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (13 samples, 0.10%)</title><rect x="778.4" y="291.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.4" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.03%)</title><rect x="778.4" y="275.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.4" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.02%)</title><rect x="778.5" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.5" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.02%)</title><rect x="778.5" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.5" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.02%)</title><rect x="778.5" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (7 samples, 0.06%)</title><rect x="779.0" y="275.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.05%)</title><rect x="779.1" y="259.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.05%)</title><rect x="779.1" y="243.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="782.1" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (17 samples, 0.14%)</title><rect x="779.7" y="291.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.7" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (16 samples, 0.13%)</title><rect x="779.8" y="275.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="782.8" y="286.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.02%)</title><rect x="779.8" y="259.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="782.8" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (13 samples, 0.10%)</title><rect x="780.0" y="259.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="783.0" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (12 samples, 0.10%)</title><rect x="780.1" y="243.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.1" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.accept (11 samples, 0.09%)</title><rect x="780.2" y="227.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="783.2" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (11 samples, 0.09%)</title><rect x="780.2" y="211.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.2" y="222.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.04%)</title><rect x="780.2" y="195.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="783.2" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.accept (4 samples, 0.03%)</title><rect x="780.3" y="179.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.3" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.03%)</title><rect x="780.3" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.3" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.02%)</title><rect x="780.7" y="195.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (110 samples, 0.88%)</title><rect x="781.4" y="291.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="784.4" y="302.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (110 samples, 0.88%)</title><rect x="781.4" y="275.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="784.4" y="286.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (6 samples, 0.05%)</title><rect x="781.6" y="259.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.6" y="270.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (6 samples, 0.05%)</title><rect x="781.6" y="243.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="784.6" y="254.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (101 samples, 0.81%)</title><rect x="782.2" y="259.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="785.2" y="270.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (58 samples, 0.46%)</title><rect x="782.5" y="243.0" width="5.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="785.5" y="254.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (3 samples, 0.02%)</title><rect x="783.2" y="227.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="786.2" y="238.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (5 samples, 0.04%)</title><rect x="783.7" y="227.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="786.7" y="238.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (3 samples, 0.02%)</title><rect x="783.7" y="211.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="786.7" y="222.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (10 samples, 0.08%)</title><rect x="784.3" y="227.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="787.3" y="238.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.02%)</title><rect x="784.8" y="211.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="787.8" y="222.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (7 samples, 0.06%)</title><rect x="785.2" y="227.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="788.2" y="238.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.04%)</title><rect x="785.2" y="211.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="788.2" y="222.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (4 samples, 0.03%)</title><rect x="785.2" y="195.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="788.2" y="206.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (16 samples, 0.13%)</title><rect x="786.5" y="227.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="789.5" y="238.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.03%)</title><rect x="786.6" y="211.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="789.6" y="222.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (10 samples, 0.08%)</title><rect x="787.0" y="211.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="790.0" y="222.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.02%)</title><rect x="787.0" y="195.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="790.0" y="206.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (7 samples, 0.06%)</title><rect x="787.3" y="195.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="790.3" y="206.0"></text>
</g>
<g>
<title>call_stub (5 samples, 0.04%)</title><rect x="788.4" y="243.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="791.4" y="254.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (30 samples, 0.24%)</title><rect x="788.9" y="243.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.9" y="254.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (28 samples, 0.22%)</title><rect x="789.1" y="227.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="792.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.04%)</title><rect x="789.6" y="211.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.04%)</title><rect x="789.6" y="195.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.04%)</title><rect x="789.6" y="179.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.6" y="190.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (18 samples, 0.14%)</title><rect x="790.1" y="211.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.1" y="222.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (9 samples, 0.07%)</title><rect x="790.1" y="195.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="793.1" y="206.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (9 samples, 0.07%)</title><rect x="790.1" y="179.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="793.1" y="190.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (6 samples, 0.05%)</title><rect x="790.4" y="163.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="793.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.05%)</title><rect x="790.4" y="147.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.4" y="158.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (8 samples, 0.06%)</title><rect x="791.0" y="195.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="794.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (8 samples, 0.06%)</title><rect x="791.0" y="179.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="794.0" y="190.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.02%)</title><rect x="791.5" y="163.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.5" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.02%)</title><rect x="791.5" y="147.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="794.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (3 samples, 0.02%)</title><rect x="791.8" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="794.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (41 samples, 0.33%)</title><rect x="792.1" y="307.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="795.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (5 samples, 0.04%)</title><rect x="792.1" y="291.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.04%)</title><rect x="792.1" y="275.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="795.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.04%)</title><rect x="792.1" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (5 samples, 0.04%)</title><rect x="792.1" y="243.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (3 samples, 0.02%)</title><rect x="792.3" y="227.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.3" y="238.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (3 samples, 0.02%)</title><rect x="792.3" y="211.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.3" y="222.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (3 samples, 0.02%)</title><rect x="792.3" y="195.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="795.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (36 samples, 0.29%)</title><rect x="792.6" y="291.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (36 samples, 0.29%)</title><rect x="792.6" y="275.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.6" y="286.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (11 samples, 0.09%)</title><rect x="792.8" y="259.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="795.8" y="270.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (8 samples, 0.06%)</title><rect x="792.8" y="243.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="795.8" y="254.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (3 samples, 0.02%)</title><rect x="793.2" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="796.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (3 samples, 0.02%)</title><rect x="793.5" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="796.5" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (3 samples, 0.02%)</title><rect x="793.8" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.8" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (4 samples, 0.03%)</title><rect x="794.1" y="259.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="797.1" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (4 samples, 0.03%)</title><rect x="794.1" y="243.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="797.1" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (3 samples, 0.02%)</title><rect x="794.2" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="797.2" y="238.0"></text>
</g>
<g>
<title>java/util/LinkedList.&lt;init&gt; (6 samples, 0.05%)</title><rect x="794.6" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="797.6" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.&lt;init&gt; (6 samples, 0.05%)</title><rect x="794.6" y="243.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="797.6" y="254.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (8 samples, 0.06%)</title><rect x="795.2" y="259.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.2" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (8 samples, 0.06%)</title><rect x="795.2" y="243.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (3 samples, 0.02%)</title><rect x="795.4" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (53 samples, 0.42%)</title><rect x="796.0" y="307.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="799.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (48 samples, 0.38%)</title><rect x="796.0" y="291.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (48 samples, 0.38%)</title><rect x="796.0" y="275.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (48 samples, 0.38%)</title><rect x="796.0" y="259.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (44 samples, 0.35%)</title><rect x="796.0" y="243.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="799.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.05%)</title><rect x="796.0" y="227.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.05%)</title><rect x="796.0" y="211.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.05%)</title><rect x="796.0" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="799.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (38 samples, 0.30%)</title><rect x="796.6" y="227.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (38 samples, 0.30%)</title><rect x="796.6" y="211.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (38 samples, 0.30%)</title><rect x="796.6" y="195.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (38 samples, 0.30%)</title><rect x="796.6" y="179.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (38 samples, 0.30%)</title><rect x="796.6" y="163.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.6" y="174.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (35 samples, 0.28%)</title><rect x="796.9" y="147.0" width="3.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="799.9" y="158.0"></text>
</g>
<g>
<title>__psynch_cvsignal (31 samples, 0.25%)</title><rect x="797.0" y="131.0" width="3.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="800.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (5 samples, 0.04%)</title><rect x="800.5" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="803.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.04%)</title><rect x="800.5" y="275.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="803.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.02%)</title><rect x="800.7" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="803.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.03%)</title><rect x="801.2" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.from (3 samples, 0.02%)</title><rect x="801.9" y="531.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.getHttpRequests (107 samples, 0.86%)</title><rect x="802.1" y="531.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="805.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (106 samples, 0.85%)</title><rect x="802.1" y="515.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="805.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (104 samples, 0.83%)</title><rect x="802.3" y="499.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="805.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (95 samples, 0.76%)</title><rect x="803.2" y="483.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.2" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (95 samples, 0.76%)</title><rect x="803.2" y="467.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (93 samples, 0.74%)</title><rect x="803.2" y="451.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.2" y="462.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (4 samples, 0.03%)</title><rect x="803.4" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="806.4" y="446.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.forEachRemaining (76 samples, 0.61%)</title><rect x="803.8" y="435.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.8" y="446.0"></text>
</g>
<g>
<title>java/util/Iterator.forEachRemaining (76 samples, 0.61%)</title><rect x="803.8" y="419.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.8" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (76 samples, 0.61%)</title><rect x="803.8" y="403.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="806.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (4 samples, 0.03%)</title><rect x="803.8" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (72 samples, 0.58%)</title><rect x="804.1" y="387.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (70 samples, 0.56%)</title><rect x="804.1" y="371.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.1" y="382.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="804.1" y="355.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="807.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (35 samples, 0.28%)</title><rect x="804.5" y="355.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="807.5" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (32 samples, 0.26%)</title><rect x="804.5" y="339.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="807.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (26 samples, 0.21%)</title><rect x="804.6" y="323.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils$$Lambda$129/283467809.apply (23 samples, 0.18%)</title><rect x="804.9" y="307.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.lambda$getHttpRequests$2 (23 samples, 0.18%)</title><rect x="804.9" y="291.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (16 samples, 0.13%)</title><rect x="804.9" y="275.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (16 samples, 0.13%)</title><rect x="804.9" y="259.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (15 samples, 0.12%)</title><rect x="804.9" y="243.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="807.9" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (15 samples, 0.12%)</title><rect x="804.9" y="227.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="807.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (14 samples, 0.11%)</title><rect x="805.0" y="211.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="808.0" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.accept (14 samples, 0.11%)</title><rect x="805.0" y="195.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.0" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (14 samples, 0.11%)</title><rect x="805.0" y="179.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.0" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (6 samples, 0.05%)</title><rect x="805.2" y="163.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$72/1062635358.test (3 samples, 0.02%)</title><rect x="805.5" y="147.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="808.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6 samples, 0.05%)</title><rect x="805.7" y="163.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.7" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.accept (3 samples, 0.02%)</title><rect x="806.0" y="147.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.0" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.02%)</title><rect x="806.0" y="131.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="809.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (7 samples, 0.06%)</title><rect x="806.4" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (7 samples, 0.06%)</title><rect x="806.4" y="259.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (4 samples, 0.03%)</title><rect x="806.4" y="243.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="809.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$72/1062635358.test (4 samples, 0.03%)</title><rect x="806.4" y="227.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="809.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (4 samples, 0.03%)</title><rect x="806.4" y="211.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="809.4" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (4 samples, 0.03%)</title><rect x="806.4" y="195.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.4" y="206.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (3 samples, 0.02%)</title><rect x="806.5" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.5" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 0.02%)</title><rect x="806.5" y="163.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.5" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.02%)</title><rect x="806.5" y="147.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="809.5" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.02%)</title><rect x="806.5" y="131.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="809.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (3 samples, 0.02%)</title><rect x="806.8" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="809.8" y="254.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (3 samples, 0.02%)</title><rect x="806.8" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils$$Lambda$127/562995202.apply (3 samples, 0.02%)</title><rect x="807.3" y="323.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="810.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils$$Lambda$127/562995202.apply (3 samples, 0.02%)</title><rect x="807.5" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="810.5" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (3 samples, 0.02%)</title><rect x="807.5" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (3 samples, 0.02%)</title><rect x="807.5" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="810.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils$$Lambda$124/1622387257.apply (30 samples, 0.24%)</title><rect x="807.9" y="355.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="810.9" y="366.0"></text>
</g>
<g>
<title>java/net/URI.create (28 samples, 0.22%)</title><rect x="808.1" y="339.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="811.1" y="350.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (28 samples, 0.22%)</title><rect x="808.1" y="323.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="811.1" y="334.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (28 samples, 0.22%)</title><rect x="808.1" y="307.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="811.1" y="318.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (24 samples, 0.19%)</title><rect x="808.5" y="291.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.5" y="302.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (7 samples, 0.06%)</title><rect x="808.5" y="275.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="811.5" y="286.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.06%)</title><rect x="808.5" y="259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="811.5" y="270.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (17 samples, 0.14%)</title><rect x="809.1" y="275.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.1" y="286.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (8 samples, 0.06%)</title><rect x="809.3" y="259.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="812.3" y="270.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (4 samples, 0.03%)</title><rect x="809.3" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.3" y="254.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.03%)</title><rect x="809.3" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.3" y="238.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (3 samples, 0.02%)</title><rect x="809.7" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="812.7" y="254.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.06%)</title><rect x="810.1" y="259.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (3 samples, 0.02%)</title><rect x="810.9" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (3 samples, 0.02%)</title><rect x="810.9" y="419.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="813.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (3 samples, 0.02%)</title><rect x="810.9" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="813.9" y="414.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (3 samples, 0.02%)</title><rect x="810.9" y="387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="813.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (3 samples, 0.02%)</title><rect x="810.9" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.9" y="382.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (3 samples, 0.02%)</title><rect x="810.9" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (4 samples, 0.03%)</title><rect x="811.3" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="814.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ValueUtils.from (5 samples, 0.04%)</title><rect x="812.3" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.02%)</title><rect x="812.4" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="815.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,229 samples, 9.84%)</title><rect x="812.7" y="659.0" width="116.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="815.7" y="670.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,229 samples, 9.84%)</title><rect x="812.7" y="643.0" width="116.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.7" y="654.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (125 samples, 1.00%)</title><rect x="813.3" y="627.0" width="11.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="816.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (108 samples, 0.86%)</title><rect x="813.3" y="611.0" width="10.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (3 samples, 0.02%)</title><rect x="813.7" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="816.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (101 samples, 0.81%)</title><rect x="814.0" y="595.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (99 samples, 0.79%)</title><rect x="814.2" y="579.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (14 samples, 0.11%)</title><rect x="814.2" y="563.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="817.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.02%)</title><rect x="814.2" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="817.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$409/939600287.apply (10 samples, 0.08%)</title><rect x="814.5" y="547.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="817.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/FutureUtils.getFutureResponses (3 samples, 0.02%)</title><rect x="814.5" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="817.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$get$4 (7 samples, 0.06%)</title><rect x="814.8" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="817.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/FutureUtils.getFutureResponses (7 samples, 0.06%)</title><rect x="814.8" y="515.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="817.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (3 samples, 0.02%)</title><rect x="815.2" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="818.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (85 samples, 0.68%)</title><rect x="815.5" y="563.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (14 samples, 0.11%)</title><rect x="815.5" y="547.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="818.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (14 samples, 0.11%)</title><rect x="815.5" y="531.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (12 samples, 0.10%)</title><rect x="815.7" y="515.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (12 samples, 0.10%)</title><rect x="815.7" y="499.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="818.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (12 samples, 0.10%)</title><rect x="815.7" y="483.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (12 samples, 0.10%)</title><rect x="815.7" y="467.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (12 samples, 0.10%)</title><rect x="815.7" y="451.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (12 samples, 0.10%)</title><rect x="815.7" y="435.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="818.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (12 samples, 0.10%)</title><rect x="815.7" y="419.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="818.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.10%)</title><rect x="815.7" y="403.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="818.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.08%)</title><rect x="815.9" y="387.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="818.9" y="398.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (10 samples, 0.08%)</title><rect x="815.9" y="371.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="818.9" y="382.0"></text>
</g>
<g>
<title>__psynch_cvsignal (9 samples, 0.07%)</title><rect x="815.9" y="355.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="818.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (71 samples, 0.57%)</title><rect x="816.8" y="547.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$411/1690616023.accept (68 samples, 0.54%)</title><rect x="817.1" y="531.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="820.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$get$5 (68 samples, 0.54%)</title><rect x="817.1" y="515.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="820.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.handleGetResponses (67 samples, 0.54%)</title><rect x="817.2" y="499.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="820.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (59 samples, 0.47%)</title><rect x="817.3" y="483.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (57 samples, 0.46%)</title><rect x="817.4" y="467.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="820.4" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (56 samples, 0.45%)</title><rect x="817.5" y="451.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="820.5" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (56 samples, 0.45%)</title><rect x="817.5" y="435.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="820.5" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (55 samples, 0.44%)</title><rect x="817.6" y="419.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.6" y="430.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (55 samples, 0.44%)</title><rect x="817.6" y="403.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.6" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (55 samples, 0.44%)</title><rect x="817.6" y="387.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="820.6" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (55 samples, 0.44%)</title><rect x="817.6" y="371.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (55 samples, 0.44%)</title><rect x="817.6" y="355.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (51 samples, 0.41%)</title><rect x="817.6" y="339.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (51 samples, 0.41%)</title><rect x="817.6" y="323.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (51 samples, 0.41%)</title><rect x="817.6" y="307.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="820.6" y="318.0"></text>
</g>
<g>
<title>write (47 samples, 0.38%)</title><rect x="817.9" y="291.0" width="4.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="820.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.03%)</title><rect x="822.4" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="825.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.03%)</title><rect x="822.4" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.4" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (4 samples, 0.03%)</title><rect x="822.4" y="307.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.4" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (4 samples, 0.03%)</title><rect x="822.4" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (4 samples, 0.03%)</title><rect x="822.4" y="275.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ValueUtils.merge (5 samples, 0.04%)</title><rect x="823.0" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="826.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (5 samples, 0.04%)</title><rect x="823.0" y="467.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (5 samples, 0.04%)</title><rect x="823.0" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="826.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.04%)</title><rect x="823.0" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="826.0" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (3 samples, 0.02%)</title><rect x="823.1" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="826.1" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.02%)</title><rect x="823.1" y="403.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="826.1" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.02%)</title><rect x="823.1" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (17 samples, 0.14%)</title><rect x="823.5" y="611.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.14%)</title><rect x="823.5" y="595.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.14%)</title><rect x="823.5" y="579.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.5" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (16 samples, 0.13%)</title><rect x="823.6" y="563.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="826.6" y="574.0"></text>
</g>
<g>
<title>__psynch_cvsignal (15 samples, 0.12%)</title><rect x="823.6" y="547.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="826.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (605 samples, 4.85%)</title><rect x="825.1" y="627.0" width="57.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.1" y="638.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (6 samples, 0.05%)</title><rect x="825.3" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (596 samples, 4.77%)</title><rect x="825.9" y="611.0" width="56.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.9" y="622.0">jdk/in..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (588 samples, 4.71%)</title><rect x="826.6" y="595.0" width="55.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="829.6" y="606.0">Unsaf..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.02%)</title><rect x="826.7" y="579.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="829.7" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (576 samples, 4.61%)</title><rect x="827.1" y="579.0" width="54.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="830.1" y="590.0">Parke..</text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (4 samples, 0.03%)</title><rect x="827.3" y="563.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="830.3" y="574.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.02%)</title><rect x="827.4" y="547.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="830.4" y="558.0"></text>
</g>
<g>
<title>__psynch_cvwait (564 samples, 4.52%)</title><rect x="827.7" y="563.0" width="53.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="830.7" y="574.0">__psy..</text>
</g>
<g>
<title>_pthread_cond_wait (3 samples, 0.02%)</title><rect x="881.0" y="563.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="884.0" y="574.0"></text>
</g>
<g>
<title>_pthread_testcancel (3 samples, 0.02%)</title><rect x="881.2" y="563.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="884.2" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (3 samples, 0.02%)</title><rect x="881.7" y="579.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="884.7" y="590.0"></text>
</g>
<g>
<title>SafepointMechanism::poll(Thread*) (3 samples, 0.02%)</title><rect x="881.7" y="563.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="884.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (493 samples, 3.95%)</title><rect x="882.3" y="627.0" width="46.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="885.3" y="638.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (491 samples, 3.93%)</title><rect x="882.5" y="611.0" width="46.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="885.5" y="622.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (486 samples, 3.89%)</title><rect x="883.0" y="595.0" width="45.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="886.0" y="606.0">Unsa..</text>
</g>
<g>
<title>Parker::park(bool, long) (477 samples, 3.82%)</title><rect x="883.4" y="579.0" width="45.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="886.4" y="590.0">Park..</text>
</g>
<g>
<title>__gettimeofday (15 samples, 0.12%)</title><rect x="883.6" y="563.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="886.6" y="574.0"></text>
</g>
<g>
<title>__psynch_cvwait (456 samples, 3.65%)</title><rect x="885.0" y="563.0" width="43.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="888.0" y="574.0">__ps..</text>
</g>
<g>
<title>_pthread_cond_wait (3 samples, 0.02%)</title><rect x="928.1" y="563.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="931.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,713 samples, 13.72%)</title><rect x="928.9" y="659.0" width="161.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="931.9" y="670.0">jdk/internal/net/http..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.04%)</title><rect x="933.3" y="643.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="936.3" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (5 samples, 0.04%)</title><rect x="933.3" y="627.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="936.3" y="638.0"></text>
</g>
<g>
<title>__psynch_cvsignal (5 samples, 0.04%)</title><rect x="933.3" y="611.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="936.3" y="622.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.05%)</title><rect x="933.8" y="643.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="936.8" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.02%)</title><rect x="934.4" y="643.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="937.4" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (11 samples, 0.09%)</title><rect x="934.8" y="643.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.8" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (344 samples, 2.76%)</title><rect x="935.9" y="643.0" width="32.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="938.9" y="654.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$317/1029786317.accept (312 samples, 2.50%)</title><rect x="936.2" y="627.0" width="29.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="939.2" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (312 samples, 2.50%)</title><rect x="936.2" y="611.0" width="29.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="939.2" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (312 samples, 2.50%)</title><rect x="936.2" y="595.0" width="29.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="939.2" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (307 samples, 2.46%)</title><rect x="936.6" y="579.0" width="29.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="939.6" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (307 samples, 2.46%)</title><rect x="936.6" y="563.0" width="29.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="939.6" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (12 samples, 0.10%)</title><rect x="936.6" y="547.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="939.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (6 samples, 0.05%)</title><rect x="937.2" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="940.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (5 samples, 0.04%)</title><rect x="937.3" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="940.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.02%)</title><rect x="937.5" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="940.5" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.02%)</title><rect x="937.5" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="940.5" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.02%)</title><rect x="937.5" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="940.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (295 samples, 2.36%)</title><rect x="937.8" y="547.0" width="27.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="940.8" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (295 samples, 2.36%)</title><rect x="937.8" y="531.0" width="27.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="940.8" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (295 samples, 2.36%)</title><rect x="937.8" y="515.0" width="27.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="940.8" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.05%)</title><rect x="937.8" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="940.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (4 samples, 0.03%)</title><rect x="938.0" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="941.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (289 samples, 2.31%)</title><rect x="938.3" y="499.0" width="27.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="941.3" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (287 samples, 2.30%)</title><rect x="938.5" y="483.0" width="27.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="941.5" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$238/1293482513.run (283 samples, 2.27%)</title><rect x="938.8" y="467.0" width="26.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="941.8" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (283 samples, 2.27%)</title><rect x="938.8" y="451.0" width="26.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="941.8" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (122 samples, 0.98%)</title><rect x="939.1" y="435.0" width="11.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="942.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (122 samples, 0.98%)</title><rect x="939.1" y="419.0" width="11.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="942.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (121 samples, 0.97%)</title><rect x="939.2" y="403.0" width="11.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="942.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (120 samples, 0.96%)</title><rect x="939.3" y="387.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="942.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (120 samples, 0.96%)</title><rect x="939.3" y="371.0" width="11.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="942.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (118 samples, 0.95%)</title><rect x="939.5" y="355.0" width="11.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="942.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (118 samples, 0.95%)</title><rect x="939.5" y="339.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="942.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (118 samples, 0.95%)</title><rect x="939.5" y="323.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="942.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (117 samples, 0.94%)</title><rect x="939.5" y="307.0" width="11.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="942.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (12 samples, 0.10%)</title><rect x="939.5" y="291.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="942.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (12 samples, 0.10%)</title><rect x="939.5" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="942.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (12 samples, 0.10%)</title><rect x="939.5" y="259.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="942.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (104 samples, 0.83%)</title><rect x="940.7" y="291.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (104 samples, 0.83%)</title><rect x="940.7" y="275.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="943.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (104 samples, 0.83%)</title><rect x="940.7" y="259.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="943.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (104 samples, 0.83%)</title><rect x="940.7" y="243.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="943.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (104 samples, 0.83%)</title><rect x="940.7" y="227.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="943.7" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (98 samples, 0.78%)</title><rect x="941.3" y="211.0" width="9.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="944.3" y="222.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.02%)</title><rect x="941.4" y="195.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="944.4" y="206.0"></text>
</g>
<g>
<title>Chunk::next() const (3 samples, 0.02%)</title><rect x="941.4" y="179.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="944.4" y="190.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.02%)</title><rect x="941.9" y="195.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="944.9" y="206.0"></text>
</g>
<g>
<title>__psynch_cvsignal (84 samples, 0.67%)</title><rect x="942.2" y="195.0" width="7.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="945.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (8 samples, 0.06%)</title><rect x="950.6" y="435.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="953.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (3 samples, 0.02%)</title><rect x="951.1" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="954.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (3 samples, 0.02%)</title><rect x="951.1" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="954.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.02%)</title><rect x="951.1" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="954.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.02%)</title><rect x="951.1" y="371.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="954.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.02%)</title><rect x="951.1" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="954.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (8 samples, 0.06%)</title><rect x="951.4" y="435.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="954.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (8 samples, 0.06%)</title><rect x="951.4" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="954.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (8 samples, 0.06%)</title><rect x="951.4" y="403.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="954.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.03%)</title><rect x="951.8" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.02%)</title><rect x="951.8" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="954.8" y="382.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.02%)</title><rect x="951.8" y="355.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="954.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.02%)</title><rect x="951.8" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="954.8" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.02%)</title><rect x="951.8" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (141 samples, 1.13%)</title><rect x="952.2" y="435.0" width="13.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="955.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (130 samples, 1.04%)</title><rect x="953.3" y="419.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="956.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.02%)</title><rect x="953.3" y="403.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="956.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.02%)</title><rect x="953.3" y="387.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="956.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.02%)</title><rect x="953.3" y="371.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="956.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.02%)</title><rect x="953.3" y="355.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="956.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (127 samples, 1.02%)</title><rect x="953.5" y="403.0" width="12.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="956.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (126 samples, 1.01%)</title><rect x="953.6" y="387.0" width="11.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="956.6" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.06%)</title><rect x="953.6" y="371.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="956.6" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (7 samples, 0.06%)</title><rect x="953.6" y="355.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="956.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (7 samples, 0.06%)</title><rect x="953.6" y="339.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="956.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (119 samples, 0.95%)</title><rect x="954.3" y="371.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="957.3" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (119 samples, 0.95%)</title><rect x="954.3" y="355.0" width="11.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (114 samples, 0.91%)</title><rect x="954.8" y="339.0" width="10.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="957.8" y="350.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (5 samples, 0.04%)</title><rect x="955.5" y="323.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="958.5" y="334.0"></text>
</g>
<g>
<title>read (101 samples, 0.81%)</title><rect x="956.0" y="323.0" width="9.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="959.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$320/412918576.accept (29 samples, 0.23%)</title><rect x="965.6" y="627.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="968.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (19 samples, 0.15%)</title><rect x="966.6" y="611.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="969.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$316/248695201.run (16 samples, 0.13%)</title><rect x="966.9" y="595.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (16 samples, 0.13%)</title><rect x="966.9" y="579.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (16 samples, 0.13%)</title><rect x="966.9" y="563.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.9" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (6 samples, 0.05%)</title><rect x="967.2" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="970.2" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (4 samples, 0.03%)</title><rect x="967.4" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="970.4" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (3 samples, 0.02%)</title><rect x="967.8" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="970.8" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (3 samples, 0.02%)</title><rect x="967.8" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.8" y="542.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.02%)</title><rect x="968.1" y="547.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="971.1" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3 samples, 0.02%)</title><rect x="968.1" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="971.1" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (3 samples, 0.02%)</title><rect x="968.1" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="971.1" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (3 samples, 0.02%)</title><rect x="968.1" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="971.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (20 samples, 0.16%)</title><rect x="968.4" y="643.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (20 samples, 0.16%)</title><rect x="968.4" y="627.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (16 samples, 0.13%)</title><rect x="968.8" y="611.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (16 samples, 0.13%)</title><rect x="968.8" y="595.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="971.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (16 samples, 0.13%)</title><rect x="968.8" y="579.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="971.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (15 samples, 0.12%)</title><rect x="968.8" y="563.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (6 samples, 0.05%)</title><rect x="968.8" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (166 samples, 1.33%)</title><rect x="970.3" y="643.0" width="15.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="973.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/108890628.run (89 samples, 0.71%)</title><rect x="970.5" y="627.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="973.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (89 samples, 0.71%)</title><rect x="970.5" y="611.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (89 samples, 0.71%)</title><rect x="970.5" y="595.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (80 samples, 0.64%)</title><rect x="971.3" y="579.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="974.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.04%)</title><rect x="971.3" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (75 samples, 0.60%)</title><rect x="971.8" y="563.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="974.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (75 samples, 0.60%)</title><rect x="971.8" y="547.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$238/1293482513.run (72 samples, 0.58%)</title><rect x="971.9" y="531.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="974.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (72 samples, 0.58%)</title><rect x="971.9" y="515.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="974.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (68 samples, 0.54%)</title><rect x="972.0" y="499.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="975.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (55 samples, 0.44%)</title><rect x="973.2" y="483.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="976.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (11 samples, 0.09%)</title><rect x="973.3" y="467.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (11 samples, 0.09%)</title><rect x="973.3" y="451.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="976.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (11 samples, 0.09%)</title><rect x="973.3" y="435.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="976.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (8 samples, 0.06%)</title><rect x="973.6" y="419.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="976.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (7 samples, 0.06%)</title><rect x="973.7" y="403.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="976.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.04%)</title><rect x="973.9" y="387.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="976.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.03%)</title><rect x="974.0" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.02%)</title><rect x="974.1" y="355.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="977.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (43 samples, 0.34%)</title><rect x="974.3" y="467.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="977.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (33 samples, 0.26%)</title><rect x="975.3" y="451.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="978.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (32 samples, 0.26%)</title><rect x="975.4" y="435.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="978.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (32 samples, 0.26%)</title><rect x="975.4" y="419.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="978.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (31 samples, 0.25%)</title><rect x="975.5" y="403.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="978.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (31 samples, 0.25%)</title><rect x="975.5" y="387.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="978.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (30 samples, 0.24%)</title><rect x="975.5" y="371.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="978.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.05%)</title><rect x="975.5" y="355.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="978.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.05%)</title><rect x="975.5" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="978.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.05%)</title><rect x="975.5" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="978.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (23 samples, 0.18%)</title><rect x="976.1" y="355.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="979.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (23 samples, 0.18%)</title><rect x="976.1" y="339.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="979.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (23 samples, 0.18%)</title><rect x="976.1" y="323.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="979.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (23 samples, 0.18%)</title><rect x="976.1" y="307.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="979.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (23 samples, 0.18%)</title><rect x="976.1" y="291.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="979.1" y="302.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (22 samples, 0.18%)</title><rect x="976.2" y="275.0" width="2.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="979.2" y="286.0"></text>
</g>
<g>
<title>__psynch_cvsignal (19 samples, 0.15%)</title><rect x="976.3" y="259.0" width="1.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="979.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$246/1261412757.run (75 samples, 0.60%)</title><rect x="978.9" y="627.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (75 samples, 0.60%)</title><rect x="978.9" y="611.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="981.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (74 samples, 0.59%)</title><rect x="978.9" y="595.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="981.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (70 samples, 0.56%)</title><rect x="979.0" y="579.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="982.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (70 samples, 0.56%)</title><rect x="979.0" y="563.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="982.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (69 samples, 0.55%)</title><rect x="979.0" y="547.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="982.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (10 samples, 0.08%)</title><rect x="979.0" y="531.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="982.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (10 samples, 0.08%)</title><rect x="979.0" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="982.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (10 samples, 0.08%)</title><rect x="979.0" y="499.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="982.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (59 samples, 0.47%)</title><rect x="979.9" y="531.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="982.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (59 samples, 0.47%)</title><rect x="979.9" y="515.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="982.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (59 samples, 0.47%)</title><rect x="979.9" y="499.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="982.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (59 samples, 0.47%)</title><rect x="979.9" y="483.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="982.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (59 samples, 0.47%)</title><rect x="979.9" y="467.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="982.9" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (51 samples, 0.41%)</title><rect x="980.7" y="451.0" width="4.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="983.7" y="462.0"></text>
</g>
<g>
<title>__psynch_cvsignal (46 samples, 0.37%)</title><rect x="981.0" y="435.0" width="4.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="984.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$324/1583117545.run (3 samples, 0.02%)</title><rect x="985.6" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="988.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3 samples, 0.02%)</title><rect x="985.6" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="988.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (15 samples, 0.12%)</title><rect x="986.0" y="643.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="989.0" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.03%)</title><rect x="986.1" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="989.1" y="638.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.03%)</title><rect x="986.1" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="989.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.03%)</title><rect x="986.1" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="989.1" y="606.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.02%)</title><rect x="986.2" y="579.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="989.2" y="590.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.02%)</title><rect x="986.2" y="563.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="989.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (10 samples, 0.08%)</title><rect x="986.4" y="627.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="989.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (7 samples, 0.06%)</title><rect x="986.6" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="989.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (10 samples, 0.08%)</title><rect x="987.4" y="643.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="990.4" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (10 samples, 0.08%)</title><rect x="987.4" y="627.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (10 samples, 0.08%)</title><rect x="987.4" y="611.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="990.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (10 samples, 0.08%)</title><rect x="987.4" y="595.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (6 samples, 0.05%)</title><rect x="988.3" y="643.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="991.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.02%)</title><rect x="988.6" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="991.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.02%)</title><rect x="988.6" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="991.6" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.02%)</title><rect x="988.6" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="991.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (41 samples, 0.33%)</title><rect x="988.9" y="643.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="991.9" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.now (24 samples, 0.19%)</title><rect x="989.2" y="627.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="992.2" y="638.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (24 samples, 0.19%)</title><rect x="989.2" y="611.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="992.2" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.02%)</title><rect x="989.6" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="992.6" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.create (3 samples, 0.02%)</title><rect x="989.6" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="992.6" y="590.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.02%)</title><rect x="989.6" y="563.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="992.6" y="574.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (3 samples, 0.02%)</title><rect x="989.6" y="547.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="992.6" y="558.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.02%)</title><rect x="989.6" y="531.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="992.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (16 samples, 0.13%)</title><rect x="989.9" y="595.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="992.9" y="606.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (9 samples, 0.07%)</title><rect x="990.6" y="579.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="993.6" y="590.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (7 samples, 0.06%)</title><rect x="990.8" y="563.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="993.8" y="574.0"></text>
</g>
<g>
<title>__chk_fail_overlap.cold.1 (3 samples, 0.02%)</title><rect x="990.9" y="547.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="993.9" y="558.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.02%)</title><rect x="991.2" y="547.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="994.2" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (10 samples, 0.08%)</title><rect x="991.4" y="627.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="994.4" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (10 samples, 0.08%)</title><rect x="991.4" y="611.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="994.4" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (10 samples, 0.08%)</title><rect x="991.4" y="595.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="994.4" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (4 samples, 0.03%)</title><rect x="992.4" y="627.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="995.4" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (4 samples, 0.03%)</title><rect x="992.4" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="995.4" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (4 samples, 0.03%)</title><rect x="992.4" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="995.4" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (4 samples, 0.03%)</title><rect x="992.4" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="995.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/108890628.run (6 samples, 0.05%)</title><rect x="992.8" y="643.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="995.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (969 samples, 7.76%)</title><rect x="993.3" y="643.0" width="91.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="996.3" y="654.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (968 samples, 7.75%)</title><rect x="993.4" y="627.0" width="91.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="996.4" y="638.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (961 samples, 7.70%)</title><rect x="993.9" y="611.0" width="90.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="996.9" y="622.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (808 samples, 6.47%)</title><rect x="994.5" y="595.0" width="76.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.5" y="606.0">sun/nio/..</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (3 samples, 0.02%)</title><rect x="997.7" y="579.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1000.7" y="590.0"></text>
</g>
<g>
<title>kevent (771 samples, 6.17%)</title><rect x="998.0" y="579.0" width="72.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1001.0" y="590.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (115 samples, 0.92%)</title><rect x="1070.8" y="595.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1073.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.get (10 samples, 0.08%)</title><rect x="1070.8" y="579.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1073.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (10 samples, 0.08%)</title><rect x="1070.8" y="563.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1073.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.clearInterrupt (84 samples, 0.67%)</title><rect x="1071.8" y="579.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1074.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (83 samples, 0.66%)</title><rect x="1071.9" y="563.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1074.9" y="574.0"></text>
</g>
<g>
<title>read (75 samples, 0.60%)</title><rect x="1072.6" y="547.0" width="7.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1075.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (21 samples, 0.17%)</title><rect x="1079.7" y="579.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1082.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (15 samples, 0.12%)</title><rect x="1080.0" y="563.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (15 samples, 0.12%)</title><rect x="1080.0" y="547.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1083.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (15 samples, 0.12%)</title><rect x="1080.0" y="531.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1083.0" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.08%)</title><rect x="1080.5" y="515.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1083.5" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (10 samples, 0.08%)</title><rect x="1080.5" y="499.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1083.5" y="510.0"></text>
</g>
<g>
<title>__psynch_cvsignal (8 samples, 0.06%)</title><rect x="1080.5" y="483.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1083.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (3 samples, 0.02%)</title><rect x="1081.4" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1084.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndUpdateReadyOps (3 samples, 0.02%)</title><rect x="1081.4" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1084.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (7 samples, 0.06%)</title><rect x="1081.7" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1084.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (13 samples, 0.10%)</title><rect x="1082.4" y="595.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1085.4" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (12 samples, 0.10%)</title><rect x="1082.4" y="579.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1085.4" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (12 samples, 0.10%)</title><rect x="1082.4" y="563.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1085.4" y="574.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (12 samples, 0.10%)</title><rect x="1082.4" y="547.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1085.4" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (12 samples, 0.10%)</title><rect x="1082.4" y="531.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (10 samples, 0.08%)</title><rect x="1083.6" y="595.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1086.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (9 samples, 0.07%)</title><rect x="1083.7" y="579.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1086.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (9 samples, 0.07%)</title><rect x="1083.7" y="563.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1086.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (9 samples, 0.07%)</title><rect x="1083.7" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1086.7" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (9 samples, 0.07%)</title><rect x="1083.7" y="531.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1086.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (42 samples, 0.34%)</title><rect x="1084.9" y="643.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (39 samples, 0.31%)</title><rect x="1085.2" y="627.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1088.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (35 samples, 0.28%)</title><rect x="1085.4" y="611.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1088.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (23 samples, 0.18%)</title><rect x="1085.4" y="595.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1088.4" y="606.0"></text>
</g>
<g>
<title>kevent (21 samples, 0.17%)</title><rect x="1085.6" y="579.0" width="2.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1088.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (6 samples, 0.05%)</title><rect x="1087.6" y="595.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1090.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.03%)</title><rect x="1087.6" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1090.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.03%)</title><rect x="1087.6" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (3 samples, 0.02%)</title><rect x="1088.1" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1091.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (7 samples, 0.06%)</title><rect x="1088.9" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1091.9" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (5 samples, 0.04%)</title><rect x="1089.1" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1092.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (5 samples, 0.04%)</title><rect x="1089.1" y="611.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1092.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (13 samples, 0.10%)</title><rect x="1089.5" y="643.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.5" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (8 samples, 0.06%)</title><rect x="1089.9" y="627.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.9" y="638.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (3 samples, 0.02%)</title><rect x="1090.8" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.8" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (3 samples, 0.02%)</title><rect x="1090.8" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1093.8" y="654.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (3 samples, 0.02%)</title><rect x="1090.8" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1093.8" y="638.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (3 samples, 0.02%)</title><rect x="1090.8" y="611.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.8" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (3 samples, 0.02%)</title><rect x="1090.8" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1093.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (3 samples, 0.02%)</title><rect x="1090.8" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1093.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (3 samples, 0.02%)</title><rect x="1090.8" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1093.8" y="574.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_ServerSocketChannelImpl_accept0 (3 samples, 0.02%)</title><rect x="1090.8" y="547.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1093.8" y="558.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (3 samples, 0.02%)</title><rect x="1090.8" y="531.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1093.8" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (980 samples, 7.85%)</title><rect x="1091.1" y="659.0" width="92.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1094.1" y="670.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (705 samples, 5.65%)</title><rect x="1091.2" y="643.0" width="66.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1094.2" y="654.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (13 samples, 0.10%)</title><rect x="1091.4" y="627.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1094.4" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (4 samples, 0.03%)</title><rect x="1092.2" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.2" y="622.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (7 samples, 0.06%)</title><rect x="1092.7" y="627.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1095.7" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (7 samples, 0.06%)</title><rect x="1092.7" y="611.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1095.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (673 samples, 5.39%)</title><rect x="1093.5" y="627.0" width="63.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1096.5" y="638.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (672 samples, 5.38%)</title><rect x="1093.6" y="611.0" width="63.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1096.6" y="622.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (670 samples, 5.37%)</title><rect x="1093.8" y="595.0" width="63.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1096.8" y="606.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (642 samples, 5.14%)</title><rect x="1093.9" y="579.0" width="60.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1096.9" y="590.0">sun/ni..</text>
</g>
<g>
<title>kevent (627 samples, 5.02%)</title><rect x="1095.3" y="563.0" width="59.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1098.3" y="574.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (18 samples, 0.14%)</title><rect x="1154.6" y="579.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1157.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.05%)</title><rect x="1154.6" y="563.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1157.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.05%)</title><rect x="1154.6" y="547.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1157.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.clearInterrupt (3 samples, 0.02%)</title><rect x="1155.1" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1158.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (9 samples, 0.07%)</title><rect x="1155.4" y="563.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.03%)</title><rect x="1155.4" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1158.4" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.03%)</title><rect x="1155.4" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1158.4" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.03%)</title><rect x="1155.4" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1158.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (5 samples, 0.04%)</title><rect x="1155.8" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1158.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndUpdateReadyOps (5 samples, 0.04%)</title><rect x="1155.8" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1158.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (5 samples, 0.04%)</title><rect x="1156.3" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1159.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (3 samples, 0.02%)</title><rect x="1156.8" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1159.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (6 samples, 0.05%)</title><rect x="1157.1" y="627.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1160.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (5 samples, 0.04%)</title><rect x="1157.1" y="611.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1160.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (5 samples, 0.04%)</title><rect x="1157.1" y="595.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.1" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (273 samples, 2.19%)</title><rect x="1157.9" y="643.0" width="25.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1160.9" y="654.0">o..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.02%)</title><rect x="1158.1" y="627.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1161.1" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (3 samples, 0.02%)</title><rect x="1158.1" y="611.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.1" y="622.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.02%)</title><rect x="1158.1" y="595.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1161.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (268 samples, 2.15%)</title><rect x="1158.3" y="627.0" width="25.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1161.3" y="638.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (158 samples, 1.27%)</title><rect x="1158.3" y="611.0" width="15.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1161.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (130 samples, 1.04%)</title><rect x="1158.4" y="595.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (130 samples, 1.04%)</title><rect x="1158.4" y="579.0" width="12.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1161.4" y="590.0"></text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (116 samples, 0.93%)</title><rect x="1158.7" y="563.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1161.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.07%)</title><rect x="1158.7" y="547.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1161.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.03%)</title><rect x="1158.9" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1161.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.03%)</title><rect x="1158.9" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1161.9" y="526.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.03%)</title><rect x="1158.9" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1161.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.entity (107 samples, 0.86%)</title><rect x="1159.6" y="547.0" width="10.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1162.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.executeAsync (103 samples, 0.82%)</title><rect x="1159.7" y="531.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1162.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (99 samples, 0.79%)</title><rect x="1160.0" y="515.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1163.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (99 samples, 0.79%)</title><rect x="1160.0" y="499.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1163.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (97 samples, 0.78%)</title><rect x="1160.0" y="483.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1163.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.02%)</title><rect x="1160.0" y="467.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1163.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.02%)</title><rect x="1160.0" y="451.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1163.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.02%)</title><rect x="1160.0" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1163.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (93 samples, 0.74%)</title><rect x="1160.4" y="467.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1163.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (93 samples, 0.74%)</title><rect x="1160.4" y="451.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1163.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (93 samples, 0.74%)</title><rect x="1160.4" y="435.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1163.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (93 samples, 0.74%)</title><rect x="1160.4" y="419.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1163.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (91 samples, 0.73%)</title><rect x="1160.6" y="403.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1163.6" y="414.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (85 samples, 0.68%)</title><rect x="1161.2" y="387.0" width="8.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1164.2" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (3 samples, 0.02%)</title><rect x="1161.6" y="371.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.6" y="382.0"></text>
</g>
<g>
<title>SafepointMechanism::poll(Thread*) (3 samples, 0.02%)</title><rect x="1161.6" y="355.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1164.6" y="366.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.03%)</title><rect x="1161.9" y="371.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.9" y="382.0"></text>
</g>
<g>
<title>__psynch_cvsignal (69 samples, 0.55%)</title><rect x="1162.3" y="371.0" width="6.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1165.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.isProxied (3 samples, 0.02%)</title><rect x="1169.4" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1172.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.02%)</title><rect x="1169.4" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1172.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.02%)</title><rect x="1169.4" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1172.4" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.02%)</title><rect x="1169.4" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1172.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.02%)</title><rect x="1170.2" y="563.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1173.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.02%)</title><rect x="1170.4" y="563.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1173.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.05%)</title><rect x="1170.7" y="595.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1173.7" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.02%)</title><rect x="1170.9" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1173.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.02%)</title><rect x="1170.9" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1173.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.02%)</title><rect x="1171.3" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1174.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.02%)</title><rect x="1171.3" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1174.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.02%)</title><rect x="1171.3" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1174.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.14%)</title><rect x="1171.6" y="595.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1174.6" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.03%)</title><rect x="1172.9" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1175.9" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (110 samples, 0.88%)</title><rect x="1173.3" y="611.0" width="10.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1176.3" y="622.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (110 samples, 0.88%)</title><rect x="1173.3" y="595.0" width="10.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1176.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (104 samples, 0.83%)</title><rect x="1173.8" y="579.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1176.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (104 samples, 0.83%)</title><rect x="1173.8" y="563.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (104 samples, 0.83%)</title><rect x="1173.8" y="547.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1176.8" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (11 samples, 0.09%)</title><rect x="1173.8" y="531.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1176.8" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (11 samples, 0.09%)</title><rect x="1173.8" y="515.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1176.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (11 samples, 0.09%)</title><rect x="1173.8" y="499.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (93 samples, 0.74%)</title><rect x="1174.9" y="531.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1177.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (93 samples, 0.74%)</title><rect x="1174.9" y="515.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1177.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (92 samples, 0.74%)</title><rect x="1175.0" y="499.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1178.0" y="510.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (4 samples, 0.03%)</title><rect x="1175.6" y="483.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1178.6" y="494.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.02%)</title><rect x="1175.7" y="467.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1178.7" y="478.0"></text>
</g>
<g>
<title>read (81 samples, 0.65%)</title><rect x="1176.0" y="483.0" width="7.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1179.0" y="494.0"></text>
</g>
<g>
<title>thread_start (66 samples, 0.53%)</title><rect x="1183.8" y="659.0" width="6.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1186.8" y="670.0"></text>
</g>
<g>
<title>_pthread_start (66 samples, 0.53%)</title><rect x="1183.8" y="643.0" width="6.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1186.8" y="654.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (66 samples, 0.53%)</title><rect x="1183.8" y="627.0" width="6.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1186.8" y="638.0"></text>
</g>
<g>
<title>Thread::call_run() (66 samples, 0.53%)</title><rect x="1183.8" y="611.0" width="6.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.8" y="622.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (5 samples, 0.04%)</title><rect x="1183.8" y="595.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.8" y="606.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (5 samples, 0.04%)</title><rect x="1183.8" y="579.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.8" y="590.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sample_young_list_rs_lengths() (3 samples, 0.02%)</title><rect x="1183.8" y="563.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.8" y="574.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (3 samples, 0.02%)</title><rect x="1183.8" y="547.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.8" y="558.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (3 samples, 0.02%)</title><rect x="1183.8" y="531.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.8" y="542.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (3 samples, 0.02%)</title><rect x="1183.8" y="515.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.8" y="526.0"></text>
</g>
<g>
<title>GangWorker::loop() (27 samples, 0.22%)</title><rect x="1184.2" y="595.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.2" y="606.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (3 samples, 0.02%)</title><rect x="1184.2" y="579.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.2" y="590.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (3 samples, 0.02%)</title><rect x="1184.2" y="563.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.2" y="574.0"></text>
</g>
<g>
<title>G1CMBitMap::iterate(G1CMBitMapClosure*, MemRegion) (3 samples, 0.02%)</title><rect x="1184.2" y="547.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.2" y="558.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (16 samples, 0.13%)</title><rect x="1184.6" y="579.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.6" y="590.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (11 samples, 0.09%)</title><rect x="1184.7" y="563.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.7" y="574.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (11 samples, 0.09%)</title><rect x="1184.7" y="547.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.7" y="558.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (11 samples, 0.09%)</title><rect x="1184.7" y="531.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.7" y="542.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (11 samples, 0.09%)</title><rect x="1184.7" y="515.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.7" y="526.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (11 samples, 0.09%)</title><rect x="1184.7" y="499.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.7" y="510.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (10 samples, 0.08%)</title><rect x="1184.8" y="483.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.8" y="494.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (9 samples, 0.07%)</title><rect x="1184.9" y="467.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.9" y="478.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.03%)</title><rect x="1185.7" y="563.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.7" y="574.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (4 samples, 0.03%)</title><rect x="1185.7" y="547.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.7" y="558.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (4 samples, 0.03%)</title><rect x="1185.7" y="531.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.7" y="542.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (4 samples, 0.03%)</title><rect x="1185.7" y="515.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.7" y="526.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (4 samples, 0.03%)</title><rect x="1185.7" y="499.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.7" y="510.0"></text>
</g>
<g>
<title>frame::oops_code_blob_do(OopClosure*, CodeBlobClosure*, RegisterMap const*) (4 samples, 0.03%)</title><rect x="1185.7" y="483.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.7" y="494.0"></text>
</g>
<g>
<title>OopMapSet::all_do(frame const*, RegisterMap const*, OopClosure*, void (*)(oopDesc**, oopDesc**), OopClosure*) (3 samples, 0.02%)</title><rect x="1185.8" y="467.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.8" y="478.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (3 samples, 0.02%)</title><rect x="1186.3" y="579.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.3" y="590.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (3 samples, 0.02%)</title><rect x="1186.3" y="563.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.3" y="574.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (3 samples, 0.02%)</title><rect x="1186.3" y="547.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.3" y="558.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.02%)</title><rect x="1186.3" y="531.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.3" y="542.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (15 samples, 0.12%)</title><rect x="1186.8" y="595.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.8" y="606.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (14 samples, 0.11%)</title><rect x="1186.8" y="579.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.8" y="590.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (13 samples, 0.10%)</title><rect x="1186.8" y="563.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.8" y="574.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (12 samples, 0.10%)</title><rect x="1186.8" y="547.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.8" y="558.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (12 samples, 0.10%)</title><rect x="1186.8" y="531.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.8" y="542.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (12 samples, 0.10%)</title><rect x="1186.8" y="515.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.8" y="526.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (6 samples, 0.05%)</title><rect x="1186.8" y="499.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.8" y="510.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (4 samples, 0.03%)</title><rect x="1187.0" y="483.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.0" y="494.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 0.03%)</title><rect x="1187.4" y="499.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.4" y="510.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (4 samples, 0.03%)</title><rect x="1187.4" y="483.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.4" y="494.0"></text>
</g>
<g>
<title>VMThread::run() (17 samples, 0.14%)</title><rect x="1188.2" y="595.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.2" y="606.0"></text>
</g>
<g>
<title>VMThread::loop() (17 samples, 0.14%)</title><rect x="1188.2" y="579.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.2" y="590.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (10 samples, 0.08%)</title><rect x="1188.2" y="563.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.2" y="574.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (10 samples, 0.08%)</title><rect x="1188.2" y="547.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.2" y="558.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (10 samples, 0.08%)</title><rect x="1188.2" y="531.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.2" y="542.0"></text>
</g>
<g>
<title>__psynch_cvwait (9 samples, 0.07%)</title><rect x="1188.3" y="515.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1191.3" y="526.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (5 samples, 0.04%)</title><rect x="1189.3" y="563.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.3" y="574.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (5 samples, 0.04%)</title><rect x="1189.3" y="547.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.3" y="558.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (5 samples, 0.04%)</title><rect x="1189.3" y="531.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.3" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (5 samples, 0.04%)</title><rect x="1189.3" y="515.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.3" y="526.0"></text>
</g>
</g>
</svg>
