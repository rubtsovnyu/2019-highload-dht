<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (11,966 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.05%)</title><rect x="10.5" y="691.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.5" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (4 samples, 0.03%)</title><rect x="10.5" y="675.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.5" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.03%)</title><rect x="10.5" y="659.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.5" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="10.5" y="643.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.5" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (11 samples, 0.09%)</title><rect x="11.1" y="691.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.1" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.08%)</title><rect x="11.3" y="675.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.3" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (8 samples, 0.07%)</title><rect x="11.4" y="659.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="14.4" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.05%)</title><rect x="11.4" y="643.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.4" y="654.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (5 samples, 0.04%)</title><rect x="11.5" y="627.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.5" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.03%)</title><rect x="11.6" y="611.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="14.6" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (39 samples, 0.33%)</title><rect x="12.2" y="691.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="15.2" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (32 samples, 0.27%)</title><rect x="12.4" y="675.0" width="3.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="15.4" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (29 samples, 0.24%)</title><rect x="12.5" y="659.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="15.5" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (25 samples, 0.21%)</title><rect x="12.5" y="643.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.5" y="654.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (4 samples, 0.03%)</title><rect x="12.5" y="627.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.5" y="638.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_low_memory_detector() (3 samples, 0.03%)</title><rect x="12.6" y="611.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.6" y="622.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (14 samples, 0.12%)</title><rect x="13.1" y="627.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="16.1" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (12 samples, 0.10%)</title><rect x="13.3" y="611.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.3" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (3 samples, 0.03%)</title><rect x="13.5" y="595.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="16.5" y="606.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::make_parsable(bool, bool) (6 samples, 0.05%)</title><rect x="13.8" y="595.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.8" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_object(HeapWord*, unsigned long, bool) (4 samples, 0.03%)</title><rect x="14.0" y="579.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="17.0" y="590.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (3 samples, 0.03%)</title><rect x="14.6" y="627.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="17.6" y="638.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (4 samples, 0.03%)</title><rect x="14.9" y="643.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.9" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (746 samples, 6.23%)</title><rect x="16.0" y="691.0" width="73.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="19.0" y="702.0">SharedRu..</text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (735 samples, 6.14%)</title><rect x="16.4" y="675.0" width="72.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="19.4" y="686.0">ObjectMo..</text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (4 samples, 0.03%)</title><rect x="17.0" y="659.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="20.0" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (496 samples, 4.15%)</title><rect x="17.8" y="659.0" width="48.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.8" y="670.0">Obje..</text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (5 samples, 0.04%)</title><rect x="18.2" y="643.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="21.2" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (77 samples, 0.64%)</title><rect x="18.7" y="643.0" width="7.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="21.7" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (32 samples, 0.27%)</title><rect x="23.1" y="627.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="26.1" y="638.0"></text>
</g>
<g>
<title>SpinPause (10 samples, 0.08%)</title><rect x="26.3" y="643.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="29.3" y="654.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (93 samples, 0.78%)</title><rect x="27.3" y="643.0" width="9.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="30.3" y="654.0"></text>
</g>
<g>
<title>__psynch_cvwait (92 samples, 0.77%)</title><rect x="27.4" y="627.0" width="9.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="30.4" y="638.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (306 samples, 2.56%)</title><rect x="36.4" y="643.0" width="30.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="39.4" y="654.0">os..</text>
</g>
<g>
<title>__gettimeofday (7 samples, 0.06%)</title><rect x="36.4" y="627.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="39.4" y="638.0"></text>
</g>
<g>
<title>__psynch_cvwait (294 samples, 2.46%)</title><rect x="37.1" y="627.0" width="29.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="40.1" y="638.0">__..</text>
</g>
<g>
<title>_pthread_cond_wait (5 samples, 0.04%)</title><rect x="66.1" y="627.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="69.1" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (16 samples, 0.13%)</title><rect x="66.8" y="659.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="69.8" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (183 samples, 1.53%)</title><rect x="68.4" y="659.0" width="18.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="71.4" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (75 samples, 0.63%)</title><rect x="79.0" y="643.0" width="7.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="82.0" y="654.0"></text>
</g>
<g>
<title>SpinPause (24 samples, 0.20%)</title><rect x="86.5" y="659.0" width="2.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="89.5" y="670.0"></text>
</g>
<g>
<title>[not_walkable] (40 samples, 0.33%)</title><rect x="89.7" y="691.0" width="3.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="92.7" y="702.0"></text>
</g>
<g>
<title>[not_walkable_Java] (9 samples, 0.08%)</title><rect x="93.6" y="691.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="96.6" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.03%)</title><rect x="94.0" y="675.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="97.0" y="686.0"></text>
</g>
<g>
<title>[unknown_Java] (31 samples, 0.26%)</title><rect x="94.5" y="691.0" width="3.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="97.5" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.03%)</title><rect x="96.9" y="675.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="99.9" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (4 samples, 0.03%)</title><rect x="96.9" y="659.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="99.9" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6,861 samples, 57.34%)</title><rect x="97.6" y="691.0" width="676.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.6" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,861 samples, 57.34%)</title><rect x="97.6" y="675.0" width="676.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.6" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,861 samples, 57.34%)</title><rect x="97.6" y="659.0" width="676.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.6" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,800 samples, 15.04%)</title><rect x="97.7" y="643.0" width="177.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.7" y="654.0">java/util/concurrent/Co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,696 samples, 14.17%)</title><rect x="97.9" y="627.0" width="167.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.9" y="638.0">java/util/concurrent/..</text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="98.6" y="611.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="101.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,679 samples, 14.03%)</title><rect x="98.9" y="611.0" width="165.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.9" y="622.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (205 samples, 1.71%)</title><rect x="98.9" y="595.0" width="20.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (199 samples, 1.66%)</title><rect x="98.9" y="579.0" width="19.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (199 samples, 1.66%)</title><rect x="98.9" y="563.0" width="19.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (5 samples, 0.04%)</title><rect x="99.4" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (189 samples, 1.58%)</title><rect x="99.9" y="547.0" width="18.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (185 samples, 1.55%)</title><rect x="100.0" y="531.0" width="18.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (185 samples, 1.55%)</title><rect x="100.0" y="515.0" width="18.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (184 samples, 1.54%)</title><rect x="100.1" y="499.0" width="18.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.1" y="510.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (3 samples, 0.03%)</title><rect x="101.0" y="483.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="104.0" y="494.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (170 samples, 1.42%)</title><rect x="101.4" y="483.0" width="16.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="104.4" y="494.0"></text>
</g>
<g>
<title>Parker::unpark() (6 samples, 0.05%)</title><rect x="101.7" y="467.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="104.7" y="478.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (6 samples, 0.05%)</title><rect x="101.7" y="451.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="104.7" y="462.0"></text>
</g>
<g>
<title>__psynch_mutexwait (6 samples, 0.05%)</title><rect x="101.7" y="435.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="104.7" y="446.0"></text>
</g>
<g>
<title>Thread::current() (3 samples, 0.03%)</title><rect x="102.3" y="467.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="105.3" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (3 samples, 0.03%)</title><rect x="102.7" y="467.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="105.7" y="478.0"></text>
</g>
<g>
<title>__psynch_cvsignal (136 samples, 1.14%)</title><rect x="103.4" y="467.0" width="13.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="106.4" y="478.0"></text>
</g>
<g>
<title>pthread_cond_signal (9 samples, 0.08%)</title><rect x="117.1" y="467.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="120.1" y="478.0"></text>
</g>
<g>
<title>_pthread_cond_updateval (4 samples, 0.03%)</title><rect x="117.6" y="451.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="120.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.getProbe (3 samples, 0.03%)</title><rect x="118.3" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.03%)</title><rect x="118.8" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="121.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$171/210725587.apply (1,474 samples, 12.32%)</title><rect x="119.1" y="595.0" width="145.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.1" y="606.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (1,473 samples, 12.31%)</title><rect x="119.1" y="579.0" width="145.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="122.1" y="590.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (1,473 samples, 12.31%)</title><rect x="119.1" y="563.0" width="145.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.1" y="574.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (9 samples, 0.08%)</title><rect x="119.8" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.05%)</title><rect x="120.1" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="120.3" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="120.3" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (1,276 samples, 10.66%)</title><rect x="120.6" y="547.0" width="125.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="123.6" y="558.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (1,276 samples, 10.66%)</title><rect x="120.6" y="531.0" width="125.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.6" y="542.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (1,276 samples, 10.66%)</title><rect x="120.6" y="515.0" width="125.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.6" y="526.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (568 samples, 4.75%)</title><rect x="121.0" y="499.0" width="56.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.0" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (565 samples, 4.72%)</title><rect x="121.2" y="483.0" width="55.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.2" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (561 samples, 4.69%)</title><rect x="121.2" y="467.0" width="55.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.2" y="478.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$274/1438378433.apply (561 samples, 4.69%)</title><rect x="121.2" y="451.0" width="55.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.2" y="462.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (561 samples, 4.69%)</title><rect x="121.2" y="435.0" width="55.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.2" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (561 samples, 4.69%)</title><rect x="121.2" y="419.0" width="55.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.2" y="430.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$203/670130308.apply (561 samples, 4.69%)</title><rect x="121.2" y="403.0" width="55.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.2" y="414.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (561 samples, 4.69%)</title><rect x="121.2" y="387.0" width="55.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.2" y="398.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (11 samples, 0.09%)</title><rect x="121.9" y="371.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (6 samples, 0.05%)</title><rect x="122.3" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (6 samples, 0.05%)</title><rect x="122.3" y="339.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.06%)</title><rect x="123.0" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.04%)</title><rect x="123.1" y="355.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.04%)</title><rect x="123.1" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.04%)</title><rect x="123.1" y="323.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="126.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (536 samples, 4.48%)</title><rect x="123.7" y="371.0" width="52.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.7" y="382.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.05%)</title><rect x="123.8" y="355.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.05%)</title><rect x="123.8" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (463 samples, 3.87%)</title><rect x="124.4" y="355.0" width="45.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.4" y="366.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (453 samples, 3.79%)</title><rect x="125.4" y="339.0" width="44.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.4" y="350.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (15 samples, 0.13%)</title><rect x="125.7" y="323.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.7" y="334.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="126.2" y="307.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="129.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$298/1779330839.apply (4 samples, 0.03%)</title><rect x="126.5" y="307.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$302/526109933.apply (3 samples, 0.03%)</title><rect x="126.9" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$298/1779330839.apply (433 samples, 3.62%)</title><rect x="127.2" y="323.0" width="42.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.2" y="334.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (433 samples, 3.62%)</title><rect x="127.2" y="307.0" width="42.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.2" y="318.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.03%)</title><rect x="128.0" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (19 samples, 0.16%)</title><rect x="128.3" y="291.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="131.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (19 samples, 0.16%)</title><rect x="128.3" y="275.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.16%)</title><rect x="128.3" y="259.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="131.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.16%)</title><rect x="128.3" y="243.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (3 samples, 0.03%)</title><rect x="129.0" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9 samples, 0.08%)</title><rect x="129.3" y="227.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7 samples, 0.06%)</title><rect x="129.5" y="211.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.05%)</title><rect x="129.6" y="195.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (85 samples, 0.71%)</title><rect x="130.2" y="291.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (85 samples, 0.71%)</title><rect x="130.2" y="275.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (29 samples, 0.24%)</title><rect x="130.4" y="259.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (4 samples, 0.03%)</title><rect x="132.4" y="243.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="135.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (4 samples, 0.03%)</title><rect x="132.4" y="227.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.03%)</title><rect x="132.4" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.03%)</title><rect x="132.4" y="195.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (3 samples, 0.03%)</title><rect x="132.4" y="179.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (5 samples, 0.04%)</title><rect x="132.8" y="243.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="135.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (54 samples, 0.45%)</title><rect x="133.3" y="259.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (54 samples, 0.45%)</title><rect x="133.3" y="243.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (34 samples, 0.28%)</title><rect x="133.8" y="227.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (34 samples, 0.28%)</title><rect x="133.8" y="211.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (34 samples, 0.28%)</title><rect x="133.8" y="195.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (32 samples, 0.27%)</title><rect x="134.0" y="179.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (20 samples, 0.17%)</title><rect x="135.1" y="163.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.1" y="174.0"></text>
</g>
<g>
<title>write (17 samples, 0.14%)</title><rect x="135.4" y="147.0" width="1.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="138.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (3 samples, 0.03%)</title><rect x="137.1" y="227.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (12 samples, 0.10%)</title><rect x="137.4" y="227.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.4" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.08%)</title><rect x="137.6" y="211.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="140.6" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (9 samples, 0.08%)</title><rect x="137.6" y="195.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="140.6" y="206.0"></text>
</g>
<g>
<title>__psynch_cvsignal (6 samples, 0.05%)</title><rect x="137.6" y="179.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="140.6" y="190.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (3 samples, 0.03%)</title><rect x="138.2" y="179.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="141.2" y="190.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (3 samples, 0.03%)</title><rect x="138.2" y="163.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="141.2" y="174.0"></text>
</g>
<g>
<title>__psynch_mutexwait (3 samples, 0.03%)</title><rect x="138.2" y="147.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="141.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (313 samples, 2.62%)</title><rect x="138.6" y="291.0" width="30.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.6" y="302.0">jd..</text>
</g>
<g>
<title>java/lang/String.getBytes (16 samples, 0.13%)</title><rect x="139.5" y="275.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (16 samples, 0.13%)</title><rect x="139.5" y="259.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (16 samples, 0.13%)</title><rect x="139.5" y="243.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.5" y="254.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.04%)</title><rect x="141.2" y="275.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="144.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (218 samples, 1.82%)</title><rect x="141.6" y="275.0" width="21.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="144.6" y="286.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (9 samples, 0.08%)</title><rect x="141.8" y="259.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (9 samples, 0.08%)</title><rect x="141.8" y="243.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="144.8" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (8 samples, 0.07%)</title><rect x="141.9" y="227.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (7 samples, 0.06%)</title><rect x="142.0" y="211.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.0" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (7 samples, 0.06%)</title><rect x="142.0" y="195.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.0" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (7 samples, 0.06%)</title><rect x="142.0" y="179.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (119 samples, 0.99%)</title><rect x="142.7" y="259.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.7" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (6 samples, 0.05%)</title><rect x="145.4" y="243.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.4" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (6 samples, 0.05%)</title><rect x="145.4" y="227.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (6 samples, 0.05%)</title><rect x="145.4" y="211.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="148.4" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (6 samples, 0.05%)</title><rect x="145.4" y="195.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.4" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (6 samples, 0.05%)</title><rect x="145.4" y="179.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.4" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (6 samples, 0.05%)</title><rect x="145.4" y="163.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.4" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (9 samples, 0.08%)</title><rect x="146.0" y="243.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.0" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (9 samples, 0.08%)</title><rect x="146.0" y="227.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (9 samples, 0.08%)</title><rect x="146.0" y="211.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.0" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (9 samples, 0.08%)</title><rect x="146.0" y="195.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.0" y="206.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$325/1191925351.test (70 samples, 0.58%)</title><rect x="146.9" y="243.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.9" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (70 samples, 0.58%)</title><rect x="146.9" y="227.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$250/791679953.test (8 samples, 0.07%)</title><rect x="146.9" y="211.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$static$0 (8 samples, 0.07%)</title><rect x="146.9" y="195.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1610702581.test (62 samples, 0.52%)</title><rect x="147.7" y="211.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="150.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (62 samples, 0.52%)</title><rect x="147.7" y="195.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.7" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$75/1212772528.test (62 samples, 0.52%)</title><rect x="147.7" y="179.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.7" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (62 samples, 0.52%)</title><rect x="147.7" y="163.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$74/896644936.test (62 samples, 0.52%)</title><rect x="147.7" y="147.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (62 samples, 0.52%)</title><rect x="147.7" y="131.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="150.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (25 samples, 0.21%)</title><rect x="147.7" y="115.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.length (7 samples, 0.06%)</title><rect x="147.7" y="99.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.7" y="110.0"></text>
</g>
<g>
<title>java/lang/String.coder (4 samples, 0.03%)</title><rect x="148.0" y="83.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.0" y="94.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (18 samples, 0.15%)</title><rect x="148.4" y="99.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.4" y="110.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.03%)</title><rect x="148.7" y="83.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.7" y="94.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.03%)</title><rect x="149.0" y="83.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.07%)</title><rect x="149.3" y="83.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.3" y="94.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.28%)</title><rect x="150.1" y="115.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.length (16 samples, 0.13%)</title><rect x="150.1" y="99.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.15%)</title><rect x="151.7" y="99.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.7" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.08%)</title><rect x="152.5" y="83.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="153.5" y="115.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.5" y="126.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.06%)</title><rect x="153.8" y="243.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="156.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (3 samples, 0.03%)</title><rect x="154.5" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="157.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (85 samples, 0.71%)</title><rect x="154.8" y="259.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (85 samples, 0.71%)</title><rect x="154.8" y="243.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.8" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (80 samples, 0.67%)</title><rect x="155.3" y="227.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.3" y="238.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="155.8" y="211.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="158.8" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (70 samples, 0.58%)</title><rect x="156.2" y="211.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.2" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.accept (61 samples, 0.51%)</title><rect x="156.8" y="195.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="159.8" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (61 samples, 0.51%)</title><rect x="156.8" y="179.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.8" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (15 samples, 0.13%)</title><rect x="157.3" y="163.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="160.3" y="174.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.04%)</title><rect x="158.2" y="147.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="161.2" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (19 samples, 0.16%)</title><rect x="158.8" y="163.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.8" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.accept (5 samples, 0.04%)</title><rect x="160.2" y="147.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.2" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (5 samples, 0.04%)</title><rect x="160.2" y="131.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.2" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (21 samples, 0.18%)</title><rect x="160.7" y="163.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="163.7" y="174.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.06%)</title><rect x="161.2" y="147.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.06%)</title><rect x="161.2" y="131.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="164.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (7 samples, 0.06%)</title><rect x="161.2" y="115.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="164.2" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (9 samples, 0.08%)</title><rect x="161.9" y="147.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.9" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.03%)</title><rect x="162.8" y="195.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (9 samples, 0.08%)</title><rect x="163.3" y="275.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.3" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (9 samples, 0.08%)</title><rect x="163.3" y="259.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (21 samples, 0.18%)</title><rect x="164.2" y="275.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="167.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (16 samples, 0.13%)</title><rect x="164.7" y="259.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (16 samples, 0.13%)</title><rect x="164.7" y="243.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.7" y="254.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="165.6" y="227.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.03%)</title><rect x="165.6" y="211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="168.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (32 samples, 0.27%)</title><rect x="166.3" y="275.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="169.3" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (23 samples, 0.19%)</title><rect x="167.1" y="259.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.1" y="270.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (12 samples, 0.10%)</title><rect x="167.8" y="243.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.8" y="254.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (12 samples, 0.10%)</title><rect x="167.8" y="227.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (12 samples, 0.10%)</title><rect x="167.8" y="211.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.8" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (4 samples, 0.03%)</title><rect x="169.0" y="243.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="172.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (4 samples, 0.03%)</title><rect x="169.5" y="291.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="172.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (65 samples, 0.54%)</title><rect x="170.0" y="355.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="173.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (65 samples, 0.54%)</title><rect x="170.0" y="339.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (63 samples, 0.53%)</title><rect x="170.2" y="323.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.38%)</title><rect x="171.9" y="307.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.07%)</title><rect x="171.9" y="291.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.9" y="302.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="171.9" y="275.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="174.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.03%)</title><rect x="172.3" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (38 samples, 0.32%)</title><rect x="172.7" y="291.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="175.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (38 samples, 0.32%)</title><rect x="172.7" y="275.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="175.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (4 samples, 0.03%)</title><rect x="172.7" y="259.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="175.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (4 samples, 0.03%)</title><rect x="172.7" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (23 samples, 0.19%)</title><rect x="173.1" y="259.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="176.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$259/1643973216.run (21 samples, 0.18%)</title><rect x="173.3" y="243.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="176.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (20 samples, 0.17%)</title><rect x="173.4" y="227.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (3 samples, 0.03%)</title><rect x="173.4" y="211.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="176.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.03%)</title><rect x="173.4" y="195.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="176.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (12 samples, 0.10%)</title><rect x="174.0" y="211.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (6 samples, 0.05%)</title><rect x="174.3" y="195.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="177.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (3 samples, 0.03%)</title><rect x="174.9" y="195.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.03%)</title><rect x="174.9" y="179.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="177.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.03%)</title><rect x="174.9" y="163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (11 samples, 0.09%)</title><rect x="175.4" y="259.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7 samples, 0.06%)</title><rect x="175.8" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.03%)</title><rect x="175.9" y="227.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$259/1643973216.run (3 samples, 0.03%)</title><rect x="176.0" y="211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="179.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.03%)</title><rect x="176.0" y="195.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="179.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="176.7" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="179.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="176.7" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="179.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (13 samples, 0.11%)</title><rect x="177.0" y="499.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="180.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (13 samples, 0.11%)</title><rect x="177.0" y="483.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="180.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (12 samples, 0.10%)</title><rect x="177.1" y="467.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.1" y="478.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.05%)</title><rect x="177.2" y="451.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="180.2" y="462.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$36/557023567.apply (5 samples, 0.04%)</title><rect x="177.8" y="451.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (691 samples, 5.77%)</title><rect x="178.3" y="499.0" width="68.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.3" y="510.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (11 samples, 0.09%)</title><rect x="178.4" y="483.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="181.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (9 samples, 0.08%)</title><rect x="178.6" y="467.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.03%)</title><rect x="178.7" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="181.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$273/1434040749.apply (5 samples, 0.04%)</title><rect x="179.0" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="182.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (5 samples, 0.04%)</title><rect x="179.0" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (5 samples, 0.04%)</title><rect x="179.0" y="419.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.04%)</title><rect x="179.0" y="403.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="182.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.04%)</title><rect x="179.0" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="182.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (33 samples, 0.28%)</title><rect x="179.5" y="483.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.03%)</title><rect x="180.1" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (24 samples, 0.20%)</title><rect x="180.4" y="467.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (23 samples, 0.19%)</title><rect x="180.5" y="451.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (13 samples, 0.11%)</title><rect x="181.0" y="435.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="184.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.11%)</title><rect x="181.0" y="419.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="184.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.11%)</title><rect x="181.0" y="403.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.11%)</title><rect x="181.0" y="387.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.11%)</title><rect x="181.0" y="371.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="184.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (13 samples, 0.11%)</title><rect x="181.0" y="355.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (13 samples, 0.11%)</title><rect x="181.0" y="339.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (13 samples, 0.11%)</title><rect x="181.0" y="323.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="184.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (13 samples, 0.11%)</title><rect x="181.0" y="307.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="184.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (13 samples, 0.11%)</title><rect x="181.0" y="291.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (13 samples, 0.11%)</title><rect x="181.0" y="275.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (13 samples, 0.11%)</title><rect x="181.0" y="259.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.0" y="270.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.05%)</title><rect x="181.1" y="243.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="184.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$271/74074948.accept (6 samples, 0.05%)</title><rect x="181.7" y="243.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="184.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$271/74074948.accept (5 samples, 0.04%)</title><rect x="182.3" y="435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (646 samples, 5.40%)</title><rect x="182.8" y="483.0" width="63.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.8" y="494.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (612 samples, 5.11%)</title><rect x="182.8" y="467.0" width="60.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.8" y="478.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (608 samples, 5.08%)</title><rect x="183.2" y="451.0" width="59.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.2" y="462.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (600 samples, 5.01%)</title><rect x="183.2" y="435.0" width="59.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.2" y="446.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$215/923038470.apply (598 samples, 5.00%)</title><rect x="183.4" y="419.0" width="58.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.4" y="430.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (598 samples, 5.00%)</title><rect x="183.4" y="403.0" width="58.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.4" y="414.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (598 samples, 5.00%)</title><rect x="183.4" y="387.0" width="58.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.4" y="398.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (322 samples, 2.69%)</title><rect x="183.4" y="371.0" width="31.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.4" y="382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (321 samples, 2.68%)</title><rect x="183.5" y="355.0" width="31.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.5" y="366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (308 samples, 2.57%)</title><rect x="183.5" y="339.0" width="30.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="186.5" y="350.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$264/1092418694.apply (305 samples, 2.55%)</title><rect x="183.7" y="323.0" width="30.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.7" y="334.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (305 samples, 2.55%)</title><rect x="183.7" y="307.0" width="30.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="186.7" y="318.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (305 samples, 2.55%)</title><rect x="183.7" y="291.0" width="30.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.7" y="302.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (305 samples, 2.55%)</title><rect x="183.7" y="275.0" width="30.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="186.7" y="286.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (258 samples, 2.16%)</title><rect x="183.7" y="259.0" width="25.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.7" y="270.0">j..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (4 samples, 0.03%)</title><rect x="183.7" y="243.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.7" y="254.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (4 samples, 0.03%)</title><rect x="183.7" y="227.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="186.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (242 samples, 2.02%)</title><rect x="184.1" y="243.0" width="23.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.1" y="254.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (242 samples, 2.02%)</title><rect x="184.1" y="227.0" width="23.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.1" y="238.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (242 samples, 2.02%)</title><rect x="184.1" y="211.0" width="23.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.1" y="222.0">j..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (233 samples, 1.95%)</title><rect x="184.8" y="195.0" width="23.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.8" y="206.0">j..</text>
</g>
<g>
<title>JVM_DoPrivileged (168 samples, 1.40%)</title><rect x="185.9" y="179.0" width="16.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="188.9" y="190.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ull&gt;::oop_access_barrier(void*, oopDesc*) (5 samples, 0.04%)</title><rect x="187.6" y="163.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="190.6" y="174.0"></text>
</g>
<g>
<title>Arena::Amalloc_4(unsigned long, AllocFailStrategy::AllocFailEnum) (4 samples, 0.03%)</title><rect x="188.1" y="163.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="191.1" y="174.0"></text>
</g>
<g>
<title>Arena::check_for_overflow(unsigned long, char const*, AllocFailStrategy::AllocFailEnum) const (3 samples, 0.03%)</title><rect x="188.2" y="147.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="191.2" y="158.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (12 samples, 0.10%)</title><rect x="188.9" y="163.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="191.9" y="174.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (11 samples, 0.09%)</title><rect x="189.0" y="147.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="192.0" y="158.0"></text>
</g>
<g>
<title>binary_search(Array&lt;Method*&gt; const*, Symbol const*) (9 samples, 0.08%)</title><rect x="189.1" y="131.0" width="0.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="192.1" y="142.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (16 samples, 0.13%)</title><rect x="190.4" y="163.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="193.4" y="174.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (3 samples, 0.03%)</title><rect x="191.3" y="147.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="194.3" y="158.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (13 samples, 0.11%)</title><rect x="191.9" y="163.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="194.9" y="174.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (10 samples, 0.08%)</title><rect x="191.9" y="147.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="194.9" y="158.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (7 samples, 0.06%)</title><rect x="191.9" y="131.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="194.9" y="142.0"></text>
</g>
<g>
<title>CodeCache::get_code_heap_containing(void*) (5 samples, 0.04%)</title><rect x="192.1" y="115.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="195.1" y="126.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.03%)</title><rect x="192.6" y="131.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="195.6" y="142.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (3 samples, 0.03%)</title><rect x="192.6" y="115.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="195.6" y="126.0"></text>
</g>
<g>
<title>OrderAccess::fence() (3 samples, 0.03%)</title><rect x="193.2" y="163.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="196.2" y="174.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (4 samples, 0.03%)</title><rect x="193.5" y="163.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="196.5" y="174.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (11 samples, 0.09%)</title><rect x="194.0" y="163.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="197.0" y="174.0"></text>
</g>
<g>
<title>OrderAccess::fence() (4 samples, 0.03%)</title><rect x="194.2" y="147.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="197.2" y="158.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (5 samples, 0.04%)</title><rect x="194.6" y="147.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="197.6" y="158.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (5 samples, 0.04%)</title><rect x="194.6" y="131.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="197.6" y="142.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (4 samples, 0.03%)</title><rect x="194.7" y="115.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="197.7" y="126.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (4 samples, 0.03%)</title><rect x="194.7" y="99.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="197.7" y="110.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (14 samples, 0.12%)</title><rect x="195.1" y="163.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="198.1" y="174.0"></text>
</g>
<g>
<title>SafepointMechanism::poll(Thread*) (11 samples, 0.09%)</title><rect x="195.4" y="147.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="198.4" y="158.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll(Thread*) (10 samples, 0.08%)</title><rect x="195.5" y="131.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="198.5" y="142.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (8 samples, 0.07%)</title><rect x="195.7" y="115.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="198.7" y="126.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (7 samples, 0.06%)</title><rect x="195.8" y="99.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="198.8" y="110.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (5 samples, 0.04%)</title><rect x="195.9" y="83.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="198.9" y="94.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::ordered_load&lt;void volatile*, (ScopedFenceType)0&gt;(void volatile* const volatile*) (4 samples, 0.03%)</title><rect x="196.0" y="67.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="199.0" y="78.0"></text>
</g>
<g>
<title>void volatile* Atomic::load&lt;void volatile*&gt;(void volatile* const volatile*) (3 samples, 0.03%)</title><rect x="196.1" y="51.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="199.1" y="62.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (3 samples, 0.03%)</title><rect x="196.7" y="163.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="199.7" y="174.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (56 samples, 0.47%)</title><rect x="197.0" y="163.0" width="5.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="200.0" y="174.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (17 samples, 0.14%)</title><rect x="197.1" y="147.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="200.1" y="158.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (11 samples, 0.09%)</title><rect x="197.7" y="131.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="200.7" y="142.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (38 samples, 0.32%)</title><rect x="198.7" y="147.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="201.7" y="158.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (11 samples, 0.09%)</title><rect x="199.0" y="131.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="202.0" y="142.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (9 samples, 0.08%)</title><rect x="199.2" y="115.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="202.2" y="126.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.04%)</title><rect x="199.6" y="99.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="202.6" y="110.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.03%)</title><rect x="199.7" y="83.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="202.7" y="94.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (23 samples, 0.19%)</title><rect x="200.2" y="131.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="203.2" y="142.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int() (4 samples, 0.03%)</title><rect x="200.4" y="115.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="203.4" y="126.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (11 samples, 0.09%)</title><rect x="201.3" y="115.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="204.3" y="126.0"></text>
</g>
<g>
<title>PcDescCache::find_pc_desc(int, bool) (4 samples, 0.03%)</title><rect x="202.0" y="99.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="205.0" y="110.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (3 samples, 0.03%)</title><rect x="203.0" y="179.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="206.0" y="190.0"></text>
</g>
<g>
<title>call_stub (4 samples, 0.03%)</title><rect x="203.8" y="179.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="206.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/961160488.run (36 samples, 0.30%)</title><rect x="204.2" y="179.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (33 samples, 0.28%)</title><rect x="204.5" y="163.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="207.5" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (33 samples, 0.28%)</title><rect x="204.5" y="147.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="207.5" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (7 samples, 0.06%)</title><rect x="204.8" y="131.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.8" y="142.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (17 samples, 0.14%)</title><rect x="205.5" y="131.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.5" y="142.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (17 samples, 0.14%)</title><rect x="205.5" y="115.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.5" y="126.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (15 samples, 0.13%)</title><rect x="205.6" y="99.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="208.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (15 samples, 0.13%)</title><rect x="205.6" y="83.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.6" y="94.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (6 samples, 0.05%)</title><rect x="207.1" y="131.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.05%)</title><rect x="207.1" y="115.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.03%)</title><rect x="207.4" y="99.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.03%)</title><rect x="207.4" y="83.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (12 samples, 0.10%)</title><rect x="207.9" y="243.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.9" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.08%)</title><rect x="207.9" y="227.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.9" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.08%)</title><rect x="207.9" y="211.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.9" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.08%)</title><rect x="207.9" y="195.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.08%)</title><rect x="207.9" y="179.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.9" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (10 samples, 0.08%)</title><rect x="207.9" y="163.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (47 samples, 0.39%)</title><rect x="209.1" y="259.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="212.1" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (31 samples, 0.26%)</title><rect x="210.5" y="243.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.5" y="254.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (13 samples, 0.11%)</title><rect x="211.1" y="227.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="214.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (13 samples, 0.11%)</title><rect x="211.1" y="211.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="214.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (13 samples, 0.11%)</title><rect x="211.1" y="195.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="214.1" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (12 samples, 0.10%)</title><rect x="212.4" y="227.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="215.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.11%)</title><rect x="213.8" y="339.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="216.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.11%)</title><rect x="213.8" y="323.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.8" y="334.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="214.5" y="307.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="217.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (276 samples, 2.31%)</title><rect x="215.1" y="371.0" width="27.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="218.1" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (257 samples, 2.15%)</title><rect x="215.2" y="355.0" width="25.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.2" y="366.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (5 samples, 0.04%)</title><rect x="215.2" y="339.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.04%)</title><rect x="215.2" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="218.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.04%)</title><rect x="215.2" y="307.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (5 samples, 0.04%)</title><rect x="215.2" y="291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (5 samples, 0.04%)</title><rect x="215.2" y="275.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="218.2" y="286.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (5 samples, 0.04%)</title><rect x="215.2" y="259.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="218.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (10 samples, 0.08%)</title><rect x="215.7" y="339.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (10 samples, 0.08%)</title><rect x="215.7" y="323.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (10 samples, 0.08%)</title><rect x="215.7" y="307.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (10 samples, 0.08%)</title><rect x="215.7" y="291.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (10 samples, 0.08%)</title><rect x="215.7" y="275.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (10 samples, 0.08%)</title><rect x="215.7" y="259.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (7 samples, 0.06%)</title><rect x="216.7" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (7 samples, 0.06%)</title><rect x="216.7" y="323.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (7 samples, 0.06%)</title><rect x="216.7" y="307.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (7 samples, 0.06%)</title><rect x="216.7" y="291.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (7 samples, 0.06%)</title><rect x="216.7" y="275.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.7" y="286.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (7 samples, 0.06%)</title><rect x="216.7" y="259.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="219.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (74 samples, 0.62%)</title><rect x="217.4" y="339.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="220.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (73 samples, 0.61%)</title><rect x="217.4" y="323.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="220.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (65 samples, 0.54%)</title><rect x="218.2" y="307.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.2" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.10%)</title><rect x="218.2" y="291.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.2" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (12 samples, 0.10%)</title><rect x="218.2" y="275.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="221.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (8 samples, 0.07%)</title><rect x="218.6" y="259.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="221.6" y="270.0"></text>
</g>
<g>
<title>java/util/Objects.equals (8 samples, 0.07%)</title><rect x="218.6" y="243.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.6" y="254.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (8 samples, 0.07%)</title><rect x="218.6" y="227.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="221.6" y="238.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (8 samples, 0.07%)</title><rect x="218.6" y="211.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="221.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (53 samples, 0.44%)</title><rect x="219.4" y="291.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.4" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.remove (53 samples, 0.44%)</title><rect x="219.4" y="275.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="222.4" y="286.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlink (3 samples, 0.03%)</title><rect x="224.3" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (161 samples, 1.35%)</title><rect x="224.7" y="339.0" width="15.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.7" y="350.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (133 samples, 1.11%)</title><rect x="227.3" y="323.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="230.3" y="334.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (91 samples, 0.76%)</title><rect x="227.8" y="307.0" width="9.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="230.8" y="318.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.03%)</title><rect x="229.1" y="291.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="232.1" y="302.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (3 samples, 0.03%)</title><rect x="229.1" y="275.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="232.1" y="286.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (3 samples, 0.03%)</title><rect x="229.4" y="291.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="232.4" y="302.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (12 samples, 0.10%)</title><rect x="229.8" y="291.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="232.8" y="302.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.04%)</title><rect x="230.2" y="275.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="233.2" y="286.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (14 samples, 0.12%)</title><rect x="231.1" y="291.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="234.1" y="302.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (12 samples, 0.10%)</title><rect x="231.2" y="275.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="234.2" y="286.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (10 samples, 0.08%)</title><rect x="231.2" y="259.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="234.2" y="270.0"></text>
</g>
<g>
<title>CodeCache::get_code_heap_containing(void*) (4 samples, 0.03%)</title><rect x="231.8" y="243.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="234.8" y="254.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (3 samples, 0.03%)</title><rect x="233.1" y="291.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="236.1" y="302.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (4 samples, 0.03%)</title><rect x="233.4" y="291.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="236.4" y="302.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (31 samples, 0.26%)</title><rect x="233.8" y="291.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="236.8" y="302.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (12 samples, 0.10%)</title><rect x="233.8" y="275.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="236.8" y="286.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (19 samples, 0.16%)</title><rect x="234.9" y="275.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="237.9" y="286.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (13 samples, 0.11%)</title><rect x="235.5" y="259.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="238.5" y="270.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int() (5 samples, 0.04%)</title><rect x="235.7" y="243.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="238.7" y="254.0"></text>
</g>
<g>
<title>call_stub (5 samples, 0.04%)</title><rect x="236.9" y="307.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="239.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$220/1680543885.run (30 samples, 0.25%)</title><rect x="237.4" y="307.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="240.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (28 samples, 0.23%)</title><rect x="237.6" y="291.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.6" y="302.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (24 samples, 0.20%)</title><rect x="238.0" y="275.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="241.0" y="286.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (24 samples, 0.20%)</title><rect x="238.0" y="259.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.0" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (24 samples, 0.20%)</title><rect x="238.0" y="243.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="241.0" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (24 samples, 0.20%)</title><rect x="238.0" y="227.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.0" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (22 samples, 0.18%)</title><rect x="238.2" y="211.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="241.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.03%)</title><rect x="239.6" y="195.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (18 samples, 0.15%)</title><rect x="240.6" y="355.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (18 samples, 0.15%)</title><rect x="240.6" y="339.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (18 samples, 0.15%)</title><rect x="240.6" y="323.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.06%)</title><rect x="242.4" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.06%)</title><rect x="242.4" y="419.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$215/923038470.apply (4 samples, 0.03%)</title><rect x="242.7" y="403.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (12 samples, 0.10%)</title><rect x="243.1" y="467.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="246.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (10 samples, 0.08%)</title><rect x="243.2" y="451.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="246.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (8 samples, 0.07%)</title><rect x="243.4" y="435.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.4" y="446.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="243.4" y="419.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="246.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$267/1911969705.apply (4 samples, 0.03%)</title><rect x="243.8" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="246.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (22 samples, 0.18%)</title><rect x="244.3" y="467.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="247.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (14 samples, 0.12%)</title><rect x="244.5" y="451.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="247.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (14 samples, 0.12%)</title><rect x="244.5" y="435.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="247.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (14 samples, 0.12%)</title><rect x="244.5" y="419.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.5" y="430.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="245.5" y="403.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="248.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (5 samples, 0.04%)</title><rect x="246.0" y="451.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.04%)</title><rect x="246.0" y="435.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.04%)</title><rect x="246.0" y="419.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (60 samples, 0.50%)</title><rect x="246.5" y="547.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (18 samples, 0.15%)</title><rect x="246.8" y="531.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (13 samples, 0.11%)</title><rect x="247.3" y="515.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="250.3" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (5 samples, 0.04%)</title><rect x="247.9" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (39 samples, 0.33%)</title><rect x="248.5" y="531.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (39 samples, 0.33%)</title><rect x="248.5" y="515.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="251.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (35 samples, 0.29%)</title><rect x="248.9" y="499.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="251.9" y="510.0"></text>
</g>
<g>
<title>write (29 samples, 0.24%)</title><rect x="249.5" y="483.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="252.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (44 samples, 0.37%)</title><rect x="252.4" y="547.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.4" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (42 samples, 0.35%)</title><rect x="252.6" y="531.0" width="4.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="255.6" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (39 samples, 0.33%)</title><rect x="252.7" y="515.0" width="3.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="255.7" y="526.0"></text>
</g>
<g>
<title>__psynch_cvsignal (17 samples, 0.14%)</title><rect x="253.1" y="499.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="256.1" y="510.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (15 samples, 0.13%)</title><rect x="254.8" y="499.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="257.8" y="510.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (14 samples, 0.12%)</title><rect x="254.9" y="483.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="257.9" y="494.0"></text>
</g>
<g>
<title>__psynch_mutexwait (14 samples, 0.12%)</title><rect x="254.9" y="467.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="257.9" y="478.0"></text>
</g>
<g>
<title>pthread_cond_signal (3 samples, 0.03%)</title><rect x="256.2" y="499.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="259.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (50 samples, 0.42%)</title><rect x="256.7" y="547.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="259.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (45 samples, 0.38%)</title><rect x="256.8" y="531.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (43 samples, 0.36%)</title><rect x="257.0" y="515.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.0" y="526.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (40 samples, 0.33%)</title><rect x="257.3" y="499.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="260.3" y="510.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (11 samples, 0.09%)</title><rect x="257.3" y="483.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.3" y="494.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (3 samples, 0.03%)</title><rect x="258.1" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="261.1" y="478.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (3 samples, 0.03%)</title><rect x="258.1" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.1" y="462.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (3 samples, 0.03%)</title><rect x="258.1" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="261.1" y="446.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (29 samples, 0.24%)</title><rect x="258.4" y="483.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="261.4" y="494.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (28 samples, 0.23%)</title><rect x="258.5" y="467.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.5" y="478.0"></text>
</g>
<g>
<title>JVM_IHashCode (19 samples, 0.16%)</title><rect x="259.2" y="451.0" width="1.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="262.2" y="462.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (5 samples, 0.04%)</title><rect x="259.3" y="435.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="262.3" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (4 samples, 0.03%)</title><rect x="260.1" y="435.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="263.1" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (6 samples, 0.05%)</title><rect x="260.5" y="435.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="263.5" y="446.0"></text>
</g>
<g>
<title>SafepointMechanism::poll(Thread*) (5 samples, 0.04%)</title><rect x="260.6" y="419.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="263.6" y="430.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll(Thread*) (5 samples, 0.04%)</title><rect x="260.6" y="403.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="263.6" y="414.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (5 samples, 0.04%)</title><rect x="260.6" y="387.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="263.6" y="398.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (5 samples, 0.04%)</title><rect x="260.6" y="371.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="263.6" y="382.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (5 samples, 0.04%)</title><rect x="260.6" y="355.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="263.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (4 samples, 0.03%)</title><rect x="261.3" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (27 samples, 0.23%)</title><rect x="261.7" y="547.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="264.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (27 samples, 0.23%)</title><rect x="261.7" y="531.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (27 samples, 0.23%)</title><rect x="261.7" y="515.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="264.7" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.now (15 samples, 0.13%)</title><rect x="261.7" y="499.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="264.7" y="510.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (15 samples, 0.13%)</title><rect x="261.7" y="483.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="264.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (11 samples, 0.09%)</title><rect x="262.1" y="467.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.1" y="478.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (9 samples, 0.08%)</title><rect x="262.3" y="451.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="265.3" y="462.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (4 samples, 0.03%)</title><rect x="262.7" y="435.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="265.7" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.10%)</title><rect x="263.1" y="499.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="266.1" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (12 samples, 0.10%)</title><rect x="263.1" y="483.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="266.1" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.10%)</title><rect x="263.1" y="467.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="266.1" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.10%)</title><rect x="263.1" y="451.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="266.1" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (11 samples, 0.09%)</title><rect x="263.1" y="435.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="266.1" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (11 samples, 0.09%)</title><rect x="263.1" y="419.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.1" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (11 samples, 0.09%)</title><rect x="263.1" y="403.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="266.1" y="414.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (3 samples, 0.03%)</title><rect x="263.8" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$186/1096981679.get (4 samples, 0.03%)</title><rect x="264.6" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$186/1096981679.get (102 samples, 0.85%)</title><rect x="265.1" y="627.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="268.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$upsert$9 (102 samples, 0.85%)</title><rect x="265.1" y="611.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.upsert (98 samples, 0.82%)</title><rect x="265.5" y="595.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.upsert (98 samples, 0.82%)</title><rect x="265.5" y="579.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="268.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (9 samples, 0.08%)</title><rect x="265.7" y="563.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (9 samples, 0.08%)</title><rect x="265.7" y="547.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="268.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (9 samples, 0.08%)</title><rect x="265.7" y="531.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="268.7" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (9 samples, 0.08%)</title><rect x="265.7" y="515.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="268.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTable.upsert (87 samples, 0.73%)</title><rect x="266.6" y="563.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="269.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (87 samples, 0.73%)</title><rect x="266.6" y="547.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="269.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (74 samples, 0.62%)</title><rect x="267.7" y="531.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="270.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.03%)</title><rect x="271.8" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (28 samples, 0.23%)</title><rect x="272.2" y="515.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="275.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (22 samples, 0.18%)</title><rect x="272.8" y="499.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="275.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (22 samples, 0.18%)</title><rect x="272.8" y="483.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="275.8" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (22 samples, 0.18%)</title><rect x="272.8" y="467.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="275.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (29 samples, 0.24%)</title><rect x="275.2" y="643.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="278.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (29 samples, 0.24%)</title><rect x="275.2" y="627.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (29 samples, 0.24%)</title><rect x="275.2" y="611.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (29 samples, 0.24%)</title><rect x="275.2" y="595.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.2" y="606.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.07%)</title><rect x="275.8" y="579.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="278.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (7 samples, 0.06%)</title><rect x="276.6" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.04%)</title><rect x="277.4" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="280.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,648 samples, 30.49%)</title><rect x="278.0" y="643.0" width="359.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="281.0" y="654.0">java/util/concurrent/ThreadPoolExecutor.getTask</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3,636 samples, 30.39%)</title><rect x="279.2" y="627.0" width="358.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.2" y="638.0">java/util/concurrent/LinkedBlockingQueue.take</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2,971 samples, 24.83%)</title><rect x="279.3" y="611.0" width="293.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.3" y="622.0">java/util/concurrent/locks/AbstractQueu..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (17 samples, 0.14%)</title><rect x="279.5" y="595.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="282.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.03%)</title><rect x="280.9" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.04%)</title><rect x="281.2" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (5 samples, 0.04%)</title><rect x="281.7" y="595.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="284.7" y="606.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (5 samples, 0.04%)</title><rect x="281.7" y="579.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (33 samples, 0.28%)</title><rect x="282.2" y="595.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (20 samples, 0.17%)</title><rect x="283.5" y="579.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="286.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (20 samples, 0.17%)</title><rect x="283.5" y="563.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.11%)</title><rect x="284.1" y="547.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.1" y="558.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (11 samples, 0.09%)</title><rect x="284.3" y="531.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="287.3" y="542.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (9 samples, 0.08%)</title><rect x="284.4" y="515.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="287.4" y="526.0"></text>
</g>
<g>
<title>__psynch_cvwait (8 samples, 0.07%)</title><rect x="284.4" y="499.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="287.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (292 samples, 2.44%)</title><rect x="285.4" y="595.0" width="28.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="288.4" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (292 samples, 2.44%)</title><rect x="285.4" y="579.0" width="28.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.4" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (287 samples, 2.40%)</title><rect x="285.4" y="563.0" width="28.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.4" y="574.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (286 samples, 2.39%)</title><rect x="285.5" y="547.0" width="28.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="288.5" y="558.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (286 samples, 2.39%)</title><rect x="285.5" y="531.0" width="28.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="288.5" y="542.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (277 samples, 2.31%)</title><rect x="286.4" y="515.0" width="27.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="289.4" y="526.0">U..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ull&gt;::oop_access_barrier(void*) (4 samples, 0.03%)</title><rect x="286.4" y="499.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="289.4" y="510.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (3 samples, 0.03%)</title><rect x="287.1" y="499.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="290.1" y="510.0"></text>
</g>
<g>
<title>JavaThread::is_terminated() const (3 samples, 0.03%)</title><rect x="287.1" y="483.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="290.1" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (5 samples, 0.04%)</title><rect x="287.8" y="499.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="290.8" y="510.0"></text>
</g>
<g>
<title>SafepointMechanism::poll(Thread*) (4 samples, 0.03%)</title><rect x="287.9" y="483.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="290.9" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (7 samples, 0.06%)</title><rect x="288.4" y="499.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="291.4" y="510.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.03%)</title><rect x="288.8" y="483.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="291.8" y="494.0"></text>
</g>
<g>
<title>__psynch_cvsignal (233 samples, 1.95%)</title><rect x="289.1" y="499.0" width="23.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="292.1" y="510.0">_..</text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (3 samples, 0.03%)</title><rect x="312.1" y="499.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="315.1" y="510.0"></text>
</g>
<g>
<title>pthread_cond_signal (9 samples, 0.08%)</title><rect x="312.5" y="499.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="315.5" y="510.0"></text>
</g>
<g>
<title>_pthread_cond_updateval (4 samples, 0.03%)</title><rect x="313.0" y="483.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="316.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (5 samples, 0.04%)</title><rect x="313.7" y="563.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,616 samples, 21.86%)</title><rect x="314.3" y="595.0" width="258.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.3" y="606.0">java/util/concurrent/locks/LockSup..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,615 samples, 21.85%)</title><rect x="314.4" y="579.0" width="257.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.4" y="590.0">jdk/internal/misc/Unsafe.park</text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::should_commit() (3 samples, 0.03%)</title><rect x="325.3" y="563.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="328.3" y="574.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (2,500 samples, 20.89%)</title><rect x="325.8" y="563.0" width="246.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="328.8" y="574.0">Unsafe_Park(JNIEnv_*, _jobject*, ..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (7 samples, 0.06%)</title><rect x="326.1" y="547.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="329.1" y="558.0"></text>
</g>
<g>
<title>Chunk::next() const (7 samples, 0.06%)</title><rect x="326.1" y="531.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="329.1" y="542.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (7 samples, 0.06%)</title><rect x="327.0" y="547.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="330.0" y="558.0"></text>
</g>
<g>
<title>JavaThread::is_terminated() const (6 samples, 0.05%)</title><rect x="327.1" y="531.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="330.1" y="542.0"></text>
</g>
<g>
<title>int OrderAccess::load_acquire&lt;int&gt;(int const volatile*) (5 samples, 0.04%)</title><rect x="327.2" y="515.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="330.2" y="526.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;int, OrderAccess::PlatformOrderedLoad&lt;4ul, (ScopedFenceType)0&gt;, void&gt;::operator()(int const volatile*) const (5 samples, 0.04%)</title><rect x="327.2" y="499.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="330.2" y="510.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (13 samples, 0.11%)</title><rect x="327.7" y="547.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="330.7" y="558.0"></text>
</g>
<g>
<title>JavaThreadStatusChanger::JavaThreadStatusChanger(JavaThread*, java_lang_Thread::ThreadStatus) (8 samples, 0.07%)</title><rect x="327.7" y="531.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="330.7" y="542.0"></text>
</g>
<g>
<title>JavaThreadStatusChanger::save_old_state(JavaThread*) (5 samples, 0.04%)</title><rect x="327.8" y="515.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="330.8" y="526.0"></text>
</g>
<g>
<title>ThreadStatistics::monitor_wait() (3 samples, 0.03%)</title><rect x="328.7" y="531.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="331.7" y="542.0"></text>
</g>
<g>
<title>ThreadStatistics::check_and_reset_count() (3 samples, 0.03%)</title><rect x="328.7" y="515.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="331.7" y="526.0"></text>
</g>
<g>
<title>JavaThreadStatusChanger::set_thread_status(JavaThread*, java_lang_Thread::ThreadStatus) (4 samples, 0.03%)</title><rect x="329.2" y="547.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="332.2" y="558.0"></text>
</g>
<g>
<title>JavaThread::threadObj() const (4 samples, 0.03%)</title><rect x="329.2" y="531.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="332.2" y="542.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (4 samples, 0.03%)</title><rect x="329.6" y="547.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="332.6" y="558.0"></text>
</g>
<g>
<title>JfrEventSetting::is_enabled(JfrEventId) (3 samples, 0.03%)</title><rect x="329.7" y="531.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="332.7" y="542.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2,420 samples, 20.22%)</title><rect x="330.1" y="547.0" width="238.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="333.1" y="558.0">Parker::park(bool, long)</text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (3 samples, 0.03%)</title><rect x="331.0" y="531.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="334.0" y="542.0"></text>
</g>
<g>
<title>os::is_MP() (3 samples, 0.03%)</title><rect x="331.0" y="515.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="334.0" y="526.0"></text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (24 samples, 0.20%)</title><rect x="331.3" y="531.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="334.3" y="542.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (7 samples, 0.06%)</title><rect x="332.5" y="515.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="335.5" y="526.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (5 samples, 0.04%)</title><rect x="333.2" y="515.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="336.2" y="526.0"></text>
</g>
<g>
<title>ThreadBlockInVM::ThreadBlockInVM(JavaThread*) (3 samples, 0.03%)</title><rect x="334.0" y="531.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="337.0" y="542.0"></text>
</g>
<g>
<title>__psynch_cvwait (2,337 samples, 19.53%)</title><rect x="334.3" y="531.0" width="230.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="337.3" y="542.0">__psynch_cvwait</text>
</g>
<g>
<title>_pthread_cond_wait (31 samples, 0.26%)</title><rect x="564.8" y="531.0" width="3.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="567.8" y="542.0"></text>
</g>
<g>
<title>_pthread_mutex_droplock (5 samples, 0.04%)</title><rect x="567.4" y="515.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="570.4" y="526.0"></text>
</g>
<g>
<title>_pthread_testcancel (3 samples, 0.03%)</title><rect x="567.9" y="531.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="570.9" y="542.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.04%)</title><rect x="568.2" y="531.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="571.2" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (10 samples, 0.08%)</title><rect x="569.1" y="547.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="572.1" y="558.0"></text>
</g>
<g>
<title>OrderAccess::fence() (4 samples, 0.03%)</title><rect x="569.1" y="531.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="572.1" y="542.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (6 samples, 0.05%)</title><rect x="569.5" y="531.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="572.5" y="542.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (5 samples, 0.04%)</title><rect x="569.5" y="515.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="572.5" y="526.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (5 samples, 0.04%)</title><rect x="569.5" y="499.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="572.5" y="510.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (3 samples, 0.03%)</title><rect x="569.5" y="483.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="572.5" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (7 samples, 0.06%)</title><rect x="570.1" y="547.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="573.1" y="558.0"></text>
</g>
<g>
<title>SafepointMechanism::poll(Thread*) (3 samples, 0.03%)</title><rect x="570.5" y="531.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="573.5" y="542.0"></text>
</g>
<g>
<title>__cxx_global_var_init4 (3 samples, 0.03%)</title><rect x="570.8" y="547.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="573.8" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (6 samples, 0.05%)</title><rect x="571.5" y="547.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="574.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.03%)</title><rect x="572.3" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.03%)</title><rect x="572.3" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.03%)</title><rect x="572.3" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (3 samples, 0.03%)</title><rect x="572.3" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="575.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (221 samples, 1.85%)</title><rect x="572.6" y="611.0" width="21.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="575.6" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (220 samples, 1.84%)</title><rect x="572.7" y="595.0" width="21.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="575.7" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (220 samples, 1.84%)</title><rect x="572.7" y="579.0" width="21.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.7" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (210 samples, 1.75%)</title><rect x="573.7" y="563.0" width="20.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (210 samples, 1.75%)</title><rect x="573.7" y="547.0" width="20.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (210 samples, 1.75%)</title><rect x="573.7" y="531.0" width="20.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.7" y="542.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (205 samples, 1.71%)</title><rect x="574.1" y="515.0" width="20.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="577.1" y="526.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (196 samples, 1.64%)</title><rect x="574.3" y="499.0" width="19.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="577.3" y="510.0"></text>
</g>
<g>
<title>__psynch_cvwait (190 samples, 1.59%)</title><rect x="574.3" y="483.0" width="18.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="577.3" y="494.0"></text>
</g>
<g>
<title>_pthread_cond_wait (3 samples, 0.03%)</title><rect x="593.0" y="483.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="596.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (440 samples, 3.68%)</title><rect x="594.4" y="611.0" width="43.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.4" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (440 samples, 3.68%)</title><rect x="594.4" y="595.0" width="43.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.4" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (440 samples, 3.68%)</title><rect x="594.4" y="579.0" width="43.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="597.4" y="590.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (440 samples, 3.68%)</title><rect x="594.4" y="563.0" width="43.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.4" y="574.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (396 samples, 3.31%)</title><rect x="598.7" y="547.0" width="39.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="601.7" y="558.0">jdk..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.03%)</title><rect x="600.9" y="531.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="603.9" y="542.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (370 samples, 3.09%)</title><rect x="601.3" y="531.0" width="36.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="604.3" y="542.0">Uns..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ull&gt;::oop_access_barrier(void*) (4 samples, 0.03%)</title><rect x="601.7" y="515.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="604.7" y="526.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.03%)</title><rect x="602.1" y="515.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="605.1" y="526.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (4 samples, 0.03%)</title><rect x="602.7" y="515.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="605.7" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (8 samples, 0.07%)</title><rect x="603.2" y="515.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="606.2" y="526.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (4 samples, 0.03%)</title><rect x="603.6" y="499.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="606.6" y="510.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (3 samples, 0.03%)</title><rect x="603.6" y="483.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="606.6" y="494.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (3 samples, 0.03%)</title><rect x="603.6" y="467.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="606.6" y="478.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (9 samples, 0.08%)</title><rect x="604.1" y="515.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="607.1" y="526.0"></text>
</g>
<g>
<title>__psynch_cvsignal (314 samples, 2.62%)</title><rect x="605.1" y="515.0" width="31.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="608.1" y="526.0">__..</text>
</g>
<g>
<title>pthread_cond_signal (5 samples, 0.04%)</title><rect x="636.2" y="515.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="639.2" y="526.0"></text>
</g>
<g>
<title>pthread_mutex_lock (10 samples, 0.08%)</title><rect x="636.7" y="515.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="639.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$324/1583117545.run (394 samples, 3.29%)</title><rect x="637.8" y="643.0" width="38.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.8" y="654.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (394 samples, 3.29%)</title><rect x="637.8" y="627.0" width="38.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="640.8" y="638.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (394 samples, 3.29%)</title><rect x="637.8" y="611.0" width="38.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.8" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (388 samples, 3.24%)</title><rect x="638.3" y="595.0" width="38.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.3" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (388 samples, 3.24%)</title><rect x="638.3" y="579.0" width="38.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.3" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (388 samples, 3.24%)</title><rect x="638.3" y="563.0" width="38.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="641.3" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (388 samples, 3.24%)</title><rect x="638.3" y="547.0" width="38.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.3" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (387 samples, 3.23%)</title><rect x="638.4" y="531.0" width="38.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.4" y="542.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (386 samples, 3.23%)</title><rect x="638.5" y="515.0" width="38.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="641.5" y="526.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (384 samples, 3.21%)</title><rect x="638.6" y="499.0" width="37.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="641.6" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$259/1643973216.run (3 samples, 0.03%)</title><rect x="638.7" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (380 samples, 3.18%)</title><rect x="639.0" y="483.0" width="37.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.0" y="494.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (79 samples, 0.66%)</title><rect x="639.2" y="467.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (63 samples, 0.53%)</title><rect x="639.2" y="451.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (63 samples, 0.53%)</title><rect x="639.2" y="435.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (63 samples, 0.53%)</title><rect x="639.2" y="419.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (63 samples, 0.53%)</title><rect x="639.2" y="403.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (9 samples, 0.08%)</title><rect x="639.5" y="387.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.03%)</title><rect x="639.6" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.03%)</title><rect x="639.6" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.03%)</title><rect x="639.6" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.03%)</title><rect x="639.6" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="642.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$334/1364128704.apply (5 samples, 0.04%)</title><rect x="639.9" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (5 samples, 0.04%)</title><rect x="639.9" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (5 samples, 0.04%)</title><rect x="639.9" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="642.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (3 samples, 0.03%)</title><rect x="640.0" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (44 samples, 0.37%)</title><rect x="640.4" y="387.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="643.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (42 samples, 0.35%)</title><rect x="640.6" y="371.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.03%)</title><rect x="640.6" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.03%)</title><rect x="640.6" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.03%)</title><rect x="640.6" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (3 samples, 0.03%)</title><rect x="640.6" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.03%)</title><rect x="640.6" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.03%)</title><rect x="640.6" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/2063345593.apply (39 samples, 0.33%)</title><rect x="640.9" y="355.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (39 samples, 0.33%)</title><rect x="640.9" y="339.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (39 samples, 0.33%)</title><rect x="640.9" y="323.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/1124124731.apply (39 samples, 0.33%)</title><rect x="640.9" y="307.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (39 samples, 0.33%)</title><rect x="640.9" y="291.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (32 samples, 0.27%)</title><rect x="641.6" y="275.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="644.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (13 samples, 0.11%)</title><rect x="641.6" y="259.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (13 samples, 0.11%)</title><rect x="641.6" y="243.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (13 samples, 0.11%)</title><rect x="641.6" y="227.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$330/222913769.accept (6 samples, 0.05%)</title><rect x="641.6" y="211.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (5 samples, 0.04%)</title><rect x="641.6" y="195.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (5 samples, 0.04%)</title><rect x="641.6" y="179.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="644.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (5 samples, 0.04%)</title><rect x="641.6" y="163.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.03%)</title><rect x="641.8" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$333/2069183722.accept (7 samples, 0.06%)</title><rect x="642.2" y="211.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (7 samples, 0.06%)</title><rect x="642.2" y="195.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (7 samples, 0.06%)</title><rect x="642.2" y="179.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="645.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (7 samples, 0.06%)</title><rect x="642.2" y="163.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (7 samples, 0.06%)</title><rect x="642.2" y="147.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="645.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.06%)</title><rect x="642.2" y="131.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.05%)</title><rect x="642.3" y="115.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.05%)</title><rect x="642.3" y="99.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.05%)</title><rect x="642.3" y="83.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.3" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (6 samples, 0.05%)</title><rect x="642.3" y="67.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.3" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (3 samples, 0.03%)</title><rect x="642.5" y="51.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.5" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (3 samples, 0.03%)</title><rect x="642.5" y="35.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.5" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (19 samples, 0.16%)</title><rect x="642.9" y="259.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (14 samples, 0.12%)</title><rect x="643.4" y="243.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="646.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (6 samples, 0.05%)</title><rect x="643.4" y="227.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (6 samples, 0.05%)</title><rect x="643.4" y="211.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (6 samples, 0.05%)</title><rect x="643.4" y="195.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.05%)</title><rect x="643.4" y="179.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.05%)</title><rect x="643.4" y="163.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (8 samples, 0.07%)</title><rect x="644.0" y="227.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (4 samples, 0.03%)</title><rect x="644.8" y="387.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (3 samples, 0.03%)</title><rect x="645.5" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (3 samples, 0.03%)</title><rect x="645.5" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="648.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.11%)</title><rect x="645.8" y="451.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$338/990201068.run (13 samples, 0.11%)</title><rect x="645.8" y="435.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (13 samples, 0.11%)</title><rect x="645.8" y="419.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (13 samples, 0.11%)</title><rect x="645.8" y="403.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (5 samples, 0.04%)</title><rect x="647.0" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (5 samples, 0.04%)</title><rect x="647.0" y="451.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (5 samples, 0.04%)</title><rect x="647.0" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (293 samples, 2.45%)</title><rect x="647.5" y="467.0" width="28.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.5" y="478.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (293 samples, 2.45%)</title><rect x="647.5" y="451.0" width="28.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.5" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (293 samples, 2.45%)</title><rect x="647.5" y="435.0" width="28.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="650.5" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (293 samples, 2.45%)</title><rect x="647.5" y="419.0" width="28.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.5" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$336/192053093.run (4 samples, 0.03%)</title><rect x="647.9" y="403.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (4 samples, 0.03%)</title><rect x="647.9" y="387.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (4 samples, 0.03%)</title><rect x="647.9" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (285 samples, 2.38%)</title><rect x="648.3" y="403.0" width="28.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.3" y="414.0">jd..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (283 samples, 2.37%)</title><rect x="648.3" y="387.0" width="27.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.3" y="398.0">j..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (283 samples, 2.37%)</title><rect x="648.3" y="371.0" width="27.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.3" y="382.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (283 samples, 2.37%)</title><rect x="648.3" y="355.0" width="27.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="651.3" y="366.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (279 samples, 2.33%)</title><rect x="648.7" y="339.0" width="27.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.7" y="350.0">s..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (13 samples, 0.11%)</title><rect x="648.7" y="323.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="651.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (13 samples, 0.11%)</title><rect x="648.7" y="307.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="651.7" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (13 samples, 0.11%)</title><rect x="648.7" y="291.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="651.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (266 samples, 2.22%)</title><rect x="650.0" y="323.0" width="26.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.0" y="334.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (261 samples, 2.18%)</title><rect x="650.5" y="307.0" width="25.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="653.5" y="318.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (4 samples, 0.03%)</title><rect x="651.5" y="291.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="654.5" y="302.0"></text>
</g>
<g>
<title>writev (246 samples, 2.06%)</title><rect x="652.0" y="291.0" width="24.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="655.0" y="302.0">w..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (589 samples, 4.92%)</title><rect x="676.6" y="643.0" width="58.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="679.6" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (587 samples, 4.91%)</title><rect x="676.8" y="627.0" width="57.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.8" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (330 samples, 2.76%)</title><rect x="677.0" y="611.0" width="32.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.0" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$259/1643973216.run (330 samples, 2.76%)</title><rect x="677.0" y="595.0" width="32.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.0" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (330 samples, 2.76%)</title><rect x="677.0" y="579.0" width="32.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.0" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (55 samples, 0.46%)</title><rect x="677.2" y="563.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (55 samples, 0.46%)</title><rect x="677.2" y="547.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (55 samples, 0.46%)</title><rect x="677.2" y="531.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (50 samples, 0.42%)</title><rect x="677.7" y="515.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (49 samples, 0.41%)</title><rect x="677.8" y="499.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="677.8" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="680.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.03%)</title><rect x="677.8" y="467.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$328/562141945.get$Lambda (4 samples, 0.03%)</title><rect x="677.8" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (45 samples, 0.38%)</title><rect x="678.2" y="483.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="681.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (44 samples, 0.37%)</title><rect x="678.3" y="467.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (39 samples, 0.33%)</title><rect x="678.8" y="451.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.8" y="462.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.04%)</title><rect x="679.1" y="435.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="682.1" y="446.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (4 samples, 0.03%)</title><rect x="679.2" y="419.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="682.2" y="430.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.03%)</title><rect x="679.2" y="403.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="682.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (31 samples, 0.26%)</title><rect x="679.6" y="435.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.6" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (26 samples, 0.22%)</title><rect x="680.1" y="419.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (24 samples, 0.20%)</title><rect x="680.3" y="403.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.3" y="414.0"></text>
</g>
<g>
<title>write (24 samples, 0.20%)</title><rect x="680.3" y="387.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="683.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (272 samples, 2.27%)</title><rect x="682.7" y="563.0" width="26.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.7" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (272 samples, 2.27%)</title><rect x="682.7" y="547.0" width="26.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.7" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (272 samples, 2.27%)</title><rect x="682.7" y="531.0" width="26.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.7" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (272 samples, 2.27%)</title><rect x="682.7" y="515.0" width="26.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.7" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (117 samples, 0.98%)</title><rect x="682.9" y="499.0" width="11.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (117 samples, 0.98%)</title><rect x="682.9" y="483.0" width="11.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (117 samples, 0.98%)</title><rect x="682.9" y="467.0" width="11.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (115 samples, 0.96%)</title><rect x="683.0" y="451.0" width="11.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (115 samples, 0.96%)</title><rect x="683.0" y="435.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (115 samples, 0.96%)</title><rect x="683.0" y="419.0" width="11.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (115 samples, 0.96%)</title><rect x="683.0" y="403.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (105 samples, 0.88%)</title><rect x="683.2" y="387.0" width="10.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (105 samples, 0.88%)</title><rect x="683.2" y="371.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (86 samples, 0.72%)</title><rect x="683.2" y="355.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.08%)</title><rect x="683.2" y="339.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="686.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (8 samples, 0.07%)</title><rect x="683.3" y="323.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (8 samples, 0.07%)</title><rect x="683.3" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (7 samples, 0.06%)</title><rect x="683.4" y="291.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.getProbe (7 samples, 0.06%)</title><rect x="683.4" y="275.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.4" y="286.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="683.4" y="259.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="686.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$175/71332808.apply (47 samples, 0.39%)</title><rect x="684.3" y="339.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (47 samples, 0.39%)</title><rect x="684.3" y="323.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="687.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (45 samples, 0.38%)</title><rect x="684.5" y="307.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (44 samples, 0.37%)</title><rect x="684.6" y="291.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (44 samples, 0.37%)</title><rect x="684.6" y="275.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.6" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (19 samples, 0.16%)</title><rect x="684.7" y="259.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.7" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.04%)</title><rect x="684.7" y="243.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.7" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.03%)</title><rect x="684.8" y="227.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.03%)</title><rect x="684.8" y="211.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.8" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.03%)</title><rect x="684.8" y="195.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.8" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.03%)</title><rect x="684.8" y="179.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (11 samples, 0.09%)</title><rect x="685.2" y="243.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="688.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (11 samples, 0.09%)</title><rect x="685.2" y="227.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="688.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (11 samples, 0.09%)</title><rect x="685.2" y="211.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.04%)</title><rect x="685.2" y="195.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.03%)</title><rect x="685.2" y="179.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.03%)</title><rect x="685.2" y="163.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="688.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$357/1494509719.get (3 samples, 0.03%)</title><rect x="685.7" y="195.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="688.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.&lt;init&gt; (3 samples, 0.03%)</title><rect x="685.7" y="179.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="688.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.&lt;init&gt; (3 samples, 0.03%)</title><rect x="685.7" y="163.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="688.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (3 samples, 0.03%)</title><rect x="686.0" y="195.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (3 samples, 0.03%)</title><rect x="686.0" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.0" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (3 samples, 0.03%)</title><rect x="686.0" y="163.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (3 samples, 0.03%)</title><rect x="686.3" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (3 samples, 0.03%)</title><rect x="686.3" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="689.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (3 samples, 0.03%)</title><rect x="686.3" y="211.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (3 samples, 0.03%)</title><rect x="686.3" y="195.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (3 samples, 0.03%)</title><rect x="686.3" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="689.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.03%)</title><rect x="686.6" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="689.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (21 samples, 0.18%)</title><rect x="686.9" y="259.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$361/1529121028.run (20 samples, 0.17%)</title><rect x="687.0" y="243.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (19 samples, 0.16%)</title><rect x="687.1" y="227.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (4 samples, 0.03%)</title><rect x="687.2" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.03%)</title><rect x="687.3" y="195.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (5 samples, 0.04%)</title><rect x="687.6" y="211.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (5 samples, 0.04%)</title><rect x="687.6" y="195.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.6" y="206.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (4 samples, 0.03%)</title><rect x="687.6" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.6" y="190.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (4 samples, 0.03%)</title><rect x="687.6" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.6" y="174.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (4 samples, 0.03%)</title><rect x="687.6" y="147.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (9 samples, 0.08%)</title><rect x="688.1" y="211.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (3 samples, 0.03%)</title><rect x="688.7" y="195.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="691.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.03%)</title><rect x="688.7" y="179.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2141817446.invoke (3 samples, 0.03%)</title><rect x="688.7" y="163.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.03%)</title><rect x="688.7" y="147.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.7" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.03%)</title><rect x="688.7" y="131.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="691.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.03%)</title><rect x="688.7" y="115.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$307/724253840.apply (28 samples, 0.23%)</title><rect x="688.9" y="339.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (28 samples, 0.23%)</title><rect x="688.9" y="323.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="691.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (26 samples, 0.22%)</title><rect x="688.9" y="307.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (14 samples, 0.12%)</title><rect x="690.1" y="291.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (14 samples, 0.12%)</title><rect x="690.1" y="275.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="693.1" y="286.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (10 samples, 0.08%)</title><rect x="690.5" y="259.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.5" y="270.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (10 samples, 0.08%)</title><rect x="690.5" y="243.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.5" y="254.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (10 samples, 0.08%)</title><rect x="690.5" y="227.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.5" y="238.0"></text>
</g>
<g>
<title>JVM_IHashCode (7 samples, 0.06%)</title><rect x="690.6" y="211.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="693.6" y="222.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (3 samples, 0.03%)</title><rect x="690.6" y="195.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="693.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (17 samples, 0.14%)</title><rect x="691.7" y="355.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (16 samples, 0.13%)</title><rect x="691.8" y="339.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="694.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$310/278934779.apply (15 samples, 0.13%)</title><rect x="691.9" y="323.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (13 samples, 0.11%)</title><rect x="692.1" y="307.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (10 samples, 0.08%)</title><rect x="692.1" y="291.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (10 samples, 0.08%)</title><rect x="692.1" y="275.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.1" y="286.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (8 samples, 0.07%)</title><rect x="692.3" y="259.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.3" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (8 samples, 0.07%)</title><rect x="692.3" y="243.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.3" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (4 samples, 0.03%)</title><rect x="692.7" y="227.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (3 samples, 0.03%)</title><rect x="692.8" y="211.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.03%)</title><rect x="693.1" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$342/1623830039.apply (6 samples, 0.05%)</title><rect x="693.6" y="387.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="696.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (6 samples, 0.05%)</title><rect x="693.6" y="371.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (6 samples, 0.05%)</title><rect x="693.6" y="355.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (5 samples, 0.04%)</title><rect x="693.7" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (5 samples, 0.04%)</title><rect x="693.7" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.ensureOpen (3 samples, 0.03%)</title><rect x="693.9" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (148 samples, 1.24%)</title><rect x="694.7" y="499.0" width="14.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="697.7" y="510.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="696.1" y="483.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="699.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (9 samples, 0.08%)</title><rect x="696.4" y="483.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (14 samples, 0.12%)</title><rect x="697.3" y="483.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (13 samples, 0.11%)</title><rect x="697.4" y="467.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="700.4" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (13 samples, 0.11%)</title><rect x="697.4" y="451.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (4 samples, 0.03%)</title><rect x="698.7" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="701.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.03%)</title><rect x="698.7" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.7" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.03%)</title><rect x="698.7" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="701.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (32 samples, 0.27%)</title><rect x="699.1" y="483.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="702.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (32 samples, 0.27%)</title><rect x="699.1" y="467.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (31 samples, 0.26%)</title><rect x="699.2" y="451.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="702.2" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (28 samples, 0.23%)</title><rect x="699.5" y="435.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.accept (21 samples, 0.18%)</title><rect x="700.2" y="419.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.2" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (21 samples, 0.18%)</title><rect x="700.2" y="403.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="703.2" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (4 samples, 0.03%)</title><rect x="700.7" y="387.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.03%)</title><rect x="701.1" y="387.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.1" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.06%)</title><rect x="701.5" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.03%)</title><rect x="701.8" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="704.8" y="382.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.03%)</title><rect x="701.8" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.8" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.03%)</title><rect x="701.8" y="339.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (71 samples, 0.59%)</title><rect x="702.3" y="483.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.04%)</title><rect x="702.4" y="467.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.4" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.04%)</title><rect x="702.4" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (65 samples, 0.54%)</title><rect x="702.9" y="467.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.09%)</title><rect x="702.9" y="451.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.09%)</title><rect x="702.9" y="435.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="705.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (11 samples, 0.09%)</title><rect x="702.9" y="419.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (31 samples, 0.26%)</title><rect x="704.2" y="451.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="707.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (4 samples, 0.03%)</title><rect x="706.3" y="435.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.3" y="446.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="707.0" y="435.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="710.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.trim (7 samples, 0.06%)</title><rect x="707.3" y="451.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (7 samples, 0.06%)</title><rect x="707.3" y="435.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.3" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (12 samples, 0.10%)</title><rect x="708.1" y="451.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="711.1" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (4 samples, 0.03%)</title><rect x="708.6" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="711.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$353/470461262.apply (3 samples, 0.03%)</title><rect x="709.0" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="712.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (3 samples, 0.03%)</title><rect x="709.0" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="712.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.03%)</title><rect x="709.0" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="712.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$280/1821321863.accept (3 samples, 0.03%)</title><rect x="709.3" y="499.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (255 samples, 2.13%)</title><rect x="709.6" y="611.0" width="25.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.6" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (253 samples, 2.11%)</title><rect x="709.8" y="595.0" width="24.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.8" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (253 samples, 2.11%)</title><rect x="709.8" y="579.0" width="24.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.8" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$259/1643973216.run (253 samples, 2.11%)</title><rect x="709.8" y="563.0" width="24.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.8" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (253 samples, 2.11%)</title><rect x="709.8" y="547.0" width="24.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.8" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (250 samples, 2.09%)</title><rect x="709.9" y="531.0" width="24.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="712.9" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (250 samples, 2.09%)</title><rect x="709.9" y="515.0" width="24.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.9" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (250 samples, 2.09%)</title><rect x="709.9" y="499.0" width="24.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.9" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$362/413808019.run (177 samples, 1.48%)</title><rect x="709.9" y="483.0" width="17.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="712.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (176 samples, 1.47%)</title><rect x="710.0" y="467.0" width="17.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (174 samples, 1.45%)</title><rect x="710.2" y="451.0" width="17.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="713.2" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (6 samples, 0.05%)</title><rect x="710.2" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.2" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.03%)</title><rect x="710.2" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="713.2" y="430.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.03%)</title><rect x="710.2" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="713.2" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.03%)</title><rect x="710.2" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="713.2" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.03%)</title><rect x="710.2" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="713.2" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.03%)</title><rect x="710.2" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (166 samples, 1.39%)</title><rect x="710.7" y="435.0" width="16.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.7" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.now (5 samples, 0.04%)</title><rect x="710.7" y="419.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.7" y="430.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (5 samples, 0.04%)</title><rect x="710.7" y="403.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="713.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.03%)</title><rect x="710.9" y="387.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="713.9" y="398.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.03%)</title><rect x="710.9" y="371.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="713.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (161 samples, 1.35%)</title><rect x="711.2" y="419.0" width="15.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (121 samples, 1.01%)</title><rect x="711.3" y="403.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.3" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.isAfter (6 samples, 0.05%)</title><rect x="711.3" y="387.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.3" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.compareTo (6 samples, 0.05%)</title><rect x="711.3" y="371.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.3" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.plus (70 samples, 0.58%)</title><rect x="711.9" y="387.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.9" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (67 samples, 0.56%)</title><rect x="712.2" y="371.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="715.2" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.plus (67 samples, 0.56%)</title><rect x="712.2" y="355.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="715.2" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (5 samples, 0.04%)</title><rect x="718.3" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="721.3" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.hasNext (4 samples, 0.03%)</title><rect x="719.1" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.1" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (10 samples, 0.08%)</title><rect x="719.5" y="387.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.5" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (26 samples, 0.22%)</title><rect x="720.7" y="387.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="723.7" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (26 samples, 0.22%)</title><rect x="720.7" y="371.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="723.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (36 samples, 0.30%)</title><rect x="723.5" y="403.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="726.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (36 samples, 0.30%)</title><rect x="723.5" y="387.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="726.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (5 samples, 0.04%)</title><rect x="723.6" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="726.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (30 samples, 0.25%)</title><rect x="724.1" y="371.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="727.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (30 samples, 0.25%)</title><rect x="724.1" y="355.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="727.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (20 samples, 0.17%)</title><rect x="724.2" y="339.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="727.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (20 samples, 0.17%)</title><rect x="724.2" y="323.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (20 samples, 0.17%)</title><rect x="724.2" y="307.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (19 samples, 0.16%)</title><rect x="724.3" y="291.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (17 samples, 0.14%)</title><rect x="724.4" y="275.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="727.4" y="286.0"></text>
</g>
<g>
<title>write (16 samples, 0.13%)</title><rect x="724.5" y="259.0" width="1.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="727.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (7 samples, 0.06%)</title><rect x="726.3" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.3" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.06%)</title><rect x="726.3" y="323.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="729.3" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (6 samples, 0.05%)</title><rect x="726.3" y="307.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="729.3" y="318.0"></text>
</g>
<g>
<title>__psynch_cvsignal (5 samples, 0.04%)</title><rect x="726.3" y="291.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="729.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$363/625315377.accept (7 samples, 0.06%)</title><rect x="727.3" y="483.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (7 samples, 0.06%)</title><rect x="727.3" y="467.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="730.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (7 samples, 0.06%)</title><rect x="727.3" y="451.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.04%)</title><rect x="727.3" y="435.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="730.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.04%)</title><rect x="727.3" y="419.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.03%)</title><rect x="727.4" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (64 samples, 0.53%)</title><rect x="728.0" y="483.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (64 samples, 0.53%)</title><rect x="728.0" y="467.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="731.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (64 samples, 0.53%)</title><rect x="728.0" y="451.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (62 samples, 0.52%)</title><rect x="728.1" y="435.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (62 samples, 0.52%)</title><rect x="728.1" y="419.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="731.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (62 samples, 0.52%)</title><rect x="728.1" y="403.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (59 samples, 0.49%)</title><rect x="728.4" y="387.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="731.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$373/624900171.accept (59 samples, 0.49%)</title><rect x="728.4" y="371.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="731.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (57 samples, 0.48%)</title><rect x="728.6" y="355.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (57 samples, 0.48%)</title><rect x="728.6" y="339.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (57 samples, 0.48%)</title><rect x="728.6" y="323.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.03%)</title><rect x="728.6" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (3 samples, 0.03%)</title><rect x="729.0" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.03%)</title><rect x="729.0" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="732.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.03%)</title><rect x="729.0" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (49 samples, 0.41%)</title><rect x="729.3" y="307.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.03%)</title><rect x="729.4" y="291.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="732.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.03%)</title><rect x="729.4" y="275.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="732.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (44 samples, 0.37%)</title><rect x="729.8" y="291.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="732.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (42 samples, 0.35%)</title><rect x="729.8" y="275.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (42 samples, 0.35%)</title><rect x="729.8" y="259.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (42 samples, 0.35%)</title><rect x="729.8" y="243.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (42 samples, 0.35%)</title><rect x="729.8" y="227.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="732.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (42 samples, 0.35%)</title><rect x="729.8" y="211.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (42 samples, 0.35%)</title><rect x="729.8" y="195.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (42 samples, 0.35%)</title><rect x="729.8" y="179.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.8" y="190.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (40 samples, 0.33%)</title><rect x="730.0" y="163.0" width="3.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="733.0" y="174.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.03%)</title><rect x="730.1" y="147.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="733.1" y="158.0"></text>
</g>
<g>
<title>__psynch_cvsignal (33 samples, 0.28%)</title><rect x="730.5" y="147.0" width="3.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="733.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$115/356589445.run (400 samples, 3.34%)</title><rect x="734.7" y="643.0" width="39.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="737.7" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$17 (400 samples, 3.34%)</title><rect x="734.7" y="627.0" width="39.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="737.7" y="638.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$112/1705978347.act (400 samples, 3.34%)</title><rect x="734.7" y="611.0" width="39.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="737.7" y="622.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$1 (400 samples, 3.34%)</title><rect x="734.7" y="595.0" width="39.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.7" y="606.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.upsert (400 samples, 3.34%)</title><rect x="734.7" y="579.0" width="39.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="737.7" y="590.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.08%)</title><rect x="734.8" y="563.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.08%)</title><rect x="734.8" y="547.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.8" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="734.8" y="531.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="734.8" y="515.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="737.8" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="734.8" y="499.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="737.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.05%)</title><rect x="734.8" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.8" y="494.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="735.0" y="467.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="738.0" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="735.4" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="738.4" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="735.4" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (3 samples, 0.03%)</title><rect x="735.9" y="563.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (3 samples, 0.03%)</title><rect x="735.9" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (79 samples, 0.66%)</title><rect x="736.4" y="563.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (75 samples, 0.63%)</title><rect x="736.6" y="547.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.6" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.03%)</title><rect x="736.6" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.6" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (71 samples, 0.59%)</title><rect x="737.0" y="531.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="740.0" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (71 samples, 0.59%)</title><rect x="737.0" y="515.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (71 samples, 0.59%)</title><rect x="737.0" y="499.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.0" y="510.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (71 samples, 0.59%)</title><rect x="737.0" y="483.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="740.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (71 samples, 0.59%)</title><rect x="737.0" y="467.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.0" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (71 samples, 0.59%)</title><rect x="737.0" y="451.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="740.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (71 samples, 0.59%)</title><rect x="737.0" y="435.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.0" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (66 samples, 0.55%)</title><rect x="737.0" y="419.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="740.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (66 samples, 0.55%)</title><rect x="737.0" y="403.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="740.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (66 samples, 0.55%)</title><rect x="737.0" y="387.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.0" y="398.0"></text>
</g>
<g>
<title>write (61 samples, 0.51%)</title><rect x="737.5" y="371.0" width="6.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="740.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.04%)</title><rect x="743.5" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="746.5" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.04%)</title><rect x="743.5" y="403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.5" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (5 samples, 0.04%)</title><rect x="743.5" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="746.5" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (5 samples, 0.04%)</title><rect x="743.5" y="371.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="746.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (5 samples, 0.04%)</title><rect x="743.5" y="355.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MyDAO.upsert (41 samples, 0.34%)</title><rect x="744.2" y="563.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTablePool.upsert (41 samples, 0.34%)</title><rect x="744.2" y="547.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="747.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (4 samples, 0.03%)</title><rect x="744.2" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (4 samples, 0.03%)</title><rect x="744.2" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (4 samples, 0.03%)</title><rect x="744.2" y="499.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="747.2" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (3 samples, 0.03%)</title><rect x="744.3" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/rubtsov/MemTable.upsert (37 samples, 0.31%)</title><rect x="744.6" y="531.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="747.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (36 samples, 0.30%)</title><rect x="744.6" y="515.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (32 samples, 0.27%)</title><rect x="745.0" y="499.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (14 samples, 0.12%)</title><rect x="746.7" y="483.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.08%)</title><rect x="747.2" y="467.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.08%)</title><rect x="747.2" y="451.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.2" y="462.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.08%)</title><rect x="747.2" y="435.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.sendRequestsAndCollect (172 samples, 1.44%)</title><rect x="748.3" y="563.0" width="17.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (170 samples, 1.42%)</title><rect x="748.4" y="547.0" width="16.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="751.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (168 samples, 1.40%)</title><rect x="748.6" y="531.0" width="16.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (167 samples, 1.40%)</title><rect x="748.6" y="515.0" width="16.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (167 samples, 1.40%)</title><rect x="748.6" y="499.0" width="16.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (165 samples, 1.38%)</title><rect x="748.7" y="483.0" width="16.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (163 samples, 1.36%)</title><rect x="748.7" y="467.0" width="16.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (162 samples, 1.35%)</title><rect x="748.8" y="451.0" width="16.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$158/1188038743.apply (160 samples, 1.34%)</title><rect x="749.0" y="435.0" width="15.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$sendRequestsAndCollect$7 (160 samples, 1.34%)</title><rect x="749.0" y="419.0" width="15.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (160 samples, 1.34%)</title><rect x="749.0" y="403.0" width="15.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (160 samples, 1.34%)</title><rect x="749.0" y="387.0" width="15.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="752.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (160 samples, 1.34%)</title><rect x="749.0" y="371.0" width="15.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="752.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (160 samples, 1.34%)</title><rect x="749.0" y="355.0" width="15.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (3 samples, 0.03%)</title><rect x="749.7" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.03%)</title><rect x="749.7" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="752.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (98 samples, 0.82%)</title><rect x="750.0" y="339.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="753.0" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.03%)</title><rect x="750.3" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.3" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (14 samples, 0.12%)</title><rect x="750.6" y="323.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.6" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (14 samples, 0.12%)</title><rect x="750.6" y="307.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="753.6" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (11 samples, 0.09%)</title><rect x="750.9" y="291.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.9" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (11 samples, 0.09%)</title><rect x="750.9" y="275.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="753.9" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.accept (10 samples, 0.08%)</title><rect x="751.0" y="259.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (10 samples, 0.08%)</title><rect x="751.0" y="243.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.0" y="254.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8 samples, 0.07%)</title><rect x="751.0" y="227.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.0" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.accept (7 samples, 0.06%)</title><rect x="751.1" y="211.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.1" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.05%)</title><rect x="751.2" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$73/726379593.test (5 samples, 0.04%)</title><rect x="751.3" y="179.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="754.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (5 samples, 0.04%)</title><rect x="751.3" y="163.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$72/1062635358.test (4 samples, 0.03%)</title><rect x="751.3" y="147.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="754.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (4 samples, 0.03%)</title><rect x="751.3" y="131.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.3" y="142.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (4 samples, 0.03%)</title><rect x="751.3" y="115.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.3" y="126.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (3 samples, 0.03%)</title><rect x="751.4" y="99.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.4" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 0.03%)</title><rect x="751.4" y="83.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.4" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.03%)</title><rect x="751.4" y="67.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="754.4" y="78.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.03%)</title><rect x="751.4" y="51.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="754.4" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (73 samples, 0.61%)</title><rect x="752.2" y="323.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.2" y="334.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (73 samples, 0.61%)</title><rect x="752.2" y="307.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.2" y="318.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (69 samples, 0.58%)</title><rect x="752.6" y="291.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="755.6" y="302.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (47 samples, 0.39%)</title><rect x="752.7" y="275.0" width="4.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="755.7" y="286.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (5 samples, 0.04%)</title><rect x="753.4" y="259.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="756.4" y="270.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (4 samples, 0.03%)</title><rect x="753.4" y="243.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="756.4" y="254.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.04%)</title><rect x="753.9" y="259.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="756.9" y="270.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.03%)</title><rect x="754.4" y="259.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="757.4" y="270.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.03%)</title><rect x="754.5" y="243.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="757.5" y="254.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (3 samples, 0.03%)</title><rect x="755.5" y="259.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="758.5" y="270.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (12 samples, 0.10%)</title><rect x="756.1" y="259.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="759.1" y="270.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.04%)</title><rect x="756.1" y="243.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="759.1" y="254.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (3 samples, 0.03%)</title><rect x="756.3" y="227.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="759.3" y="238.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (7 samples, 0.06%)</title><rect x="756.6" y="243.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="759.6" y="254.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (14 samples, 0.12%)</title><rect x="758.0" y="275.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="761.0" y="286.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (12 samples, 0.10%)</title><rect x="758.2" y="259.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.2" y="270.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.03%)</title><rect x="758.3" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.03%)</title><rect x="758.3" y="227.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="761.3" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="758.3" y="211.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.3" y="222.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (8 samples, 0.07%)</title><rect x="758.6" y="243.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.6" y="254.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (4 samples, 0.03%)</title><rect x="758.9" y="227.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.9" y="238.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.03%)</title><rect x="758.9" y="211.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.03%)</title><rect x="759.4" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (33 samples, 0.28%)</title><rect x="759.7" y="339.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (4 samples, 0.03%)</title><rect x="759.7" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="762.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.03%)</title><rect x="759.7" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.03%)</title><rect x="759.7" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="762.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (4 samples, 0.03%)</title><rect x="759.7" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="762.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (29 samples, 0.24%)</title><rect x="760.0" y="323.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="763.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (29 samples, 0.24%)</title><rect x="760.0" y="307.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.0" y="318.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (12 samples, 0.10%)</title><rect x="760.0" y="291.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.0" y="302.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (8 samples, 0.07%)</title><rect x="760.0" y="275.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="763.0" y="286.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (3 samples, 0.03%)</title><rect x="760.4" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="763.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (4 samples, 0.03%)</title><rect x="760.8" y="275.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.8" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (3 samples, 0.03%)</title><rect x="761.2" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.2" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.&lt;init&gt; (6 samples, 0.05%)</title><rect x="761.8" y="291.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="764.8" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.&lt;init&gt; (6 samples, 0.05%)</title><rect x="761.8" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="764.8" y="286.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (5 samples, 0.04%)</title><rect x="762.4" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.4" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (5 samples, 0.04%)</title><rect x="762.4" y="275.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="765.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (3 samples, 0.03%)</title><rect x="762.4" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (19 samples, 0.16%)</title><rect x="762.9" y="339.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (16 samples, 0.13%)</title><rect x="762.9" y="323.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 0.13%)</title><rect x="762.9" y="307.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (16 samples, 0.13%)</title><rect x="762.9" y="291.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (12 samples, 0.10%)</title><rect x="762.9" y="275.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.03%)</title><rect x="762.9" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.03%)</title><rect x="762.9" y="243.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="765.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.03%)</title><rect x="762.9" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.07%)</title><rect x="763.3" y="259.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="766.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.07%)</title><rect x="763.3" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="766.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.07%)</title><rect x="763.3" y="227.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="766.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.07%)</title><rect x="763.3" y="211.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="766.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.07%)</title><rect x="763.3" y="195.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="766.3" y="206.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (6 samples, 0.05%)</title><rect x="763.5" y="179.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="766.5" y="190.0"></text>
</g>
<g>
<title>__psynch_cvsignal (5 samples, 0.04%)</title><rect x="763.6" y="163.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="766.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (3 samples, 0.03%)</title><rect x="764.5" y="323.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="767.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.03%)</title><rect x="764.5" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="767.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.03%)</title><rect x="764.5" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="767.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.getHttpRequests (90 samples, 0.75%)</title><rect x="765.3" y="563.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="768.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (83 samples, 0.69%)</title><rect x="765.6" y="547.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (82 samples, 0.69%)</title><rect x="765.7" y="531.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="768.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (79 samples, 0.66%)</title><rect x="766.0" y="515.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (78 samples, 0.65%)</title><rect x="766.1" y="499.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (78 samples, 0.65%)</title><rect x="766.1" y="483.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.1" y="494.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (4 samples, 0.03%)</title><rect x="766.2" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.2" y="478.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.forEachRemaining (63 samples, 0.53%)</title><rect x="766.6" y="467.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="769.6" y="478.0"></text>
</g>
<g>
<title>java/util/Iterator.forEachRemaining (63 samples, 0.53%)</title><rect x="766.6" y="451.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (61 samples, 0.51%)</title><rect x="766.8" y="435.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="769.8" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (60 samples, 0.50%)</title><rect x="766.9" y="419.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (56 samples, 0.47%)</title><rect x="766.9" y="403.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.9" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (25 samples, 0.21%)</title><rect x="767.0" y="387.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="770.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (21 samples, 0.18%)</title><rect x="767.0" y="371.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="770.0" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (17 samples, 0.14%)</title><rect x="767.2" y="355.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="770.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils$$Lambda$129/283467809.apply (16 samples, 0.13%)</title><rect x="767.3" y="339.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="770.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.lambda$getHttpRequests$2 (16 samples, 0.13%)</title><rect x="767.3" y="323.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (10 samples, 0.08%)</title><rect x="767.3" y="307.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="770.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (10 samples, 0.08%)</title><rect x="767.3" y="291.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.3" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (9 samples, 0.08%)</title><rect x="767.3" y="275.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.3" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9 samples, 0.08%)</title><rect x="767.3" y="259.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="770.3" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (7 samples, 0.06%)</title><rect x="767.5" y="243.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="770.5" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/721485265.accept (6 samples, 0.05%)</title><rect x="767.6" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="770.6" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.05%)</title><rect x="767.6" y="211.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="770.6" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.03%)</title><rect x="767.8" y="195.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="770.8" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/1173348941.accept (3 samples, 0.03%)</title><rect x="767.8" y="179.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="770.8" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.03%)</title><rect x="767.8" y="163.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="770.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$72/1062635358.test (3 samples, 0.03%)</title><rect x="767.8" y="147.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="770.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (3 samples, 0.03%)</title><rect x="767.8" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.8" y="142.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (3 samples, 0.03%)</title><rect x="767.8" y="115.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.8" y="126.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (3 samples, 0.03%)</title><rect x="767.8" y="99.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="770.8" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 0.03%)</title><rect x="767.8" y="83.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="770.8" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.03%)</title><rect x="767.8" y="67.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.8" y="78.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.03%)</title><rect x="767.8" y="51.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="770.8" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (6 samples, 0.05%)</title><rect x="768.3" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (6 samples, 0.05%)</title><rect x="768.3" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (4 samples, 0.03%)</title><rect x="768.3" y="275.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="771.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$72/1062635358.test (4 samples, 0.03%)</title><rect x="768.3" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (4 samples, 0.03%)</title><rect x="768.3" y="243.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="771.3" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (4 samples, 0.03%)</title><rect x="768.3" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (4 samples, 0.03%)</title><rect x="768.3" y="211.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.3" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (4 samples, 0.03%)</title><rect x="768.3" y="195.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.3" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.03%)</title><rect x="768.3" y="179.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="771.3" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.03%)</title><rect x="768.3" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.03%)</title><rect x="768.4" y="147.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.03%)</title><rect x="768.4" y="131.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.03%)</title><rect x="768.4" y="115.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils$$Lambda$127/562995202.apply (4 samples, 0.03%)</title><rect x="769.0" y="371.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="772.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (4 samples, 0.03%)</title><rect x="769.0" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (4 samples, 0.03%)</title><rect x="769.0" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="772.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils$$Lambda$124/1622387257.apply (30 samples, 0.25%)</title><rect x="769.4" y="387.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.4" y="398.0"></text>
</g>
<g>
<title>java/net/URI.create (28 samples, 0.23%)</title><rect x="769.6" y="371.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="772.6" y="382.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (28 samples, 0.23%)</title><rect x="769.6" y="355.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="772.6" y="366.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (27 samples, 0.23%)</title><rect x="769.7" y="339.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="772.7" y="350.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (3 samples, 0.03%)</title><rect x="770.1" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.1" y="334.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (3 samples, 0.03%)</title><rect x="770.1" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.1" y="318.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.03%)</title><rect x="770.1" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.1" y="302.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (20 samples, 0.17%)</title><rect x="770.4" y="323.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.4" y="334.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (5 samples, 0.04%)</title><rect x="770.4" y="307.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="773.4" y="318.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.04%)</title><rect x="770.4" y="291.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.4" y="302.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (15 samples, 0.13%)</title><rect x="770.9" y="307.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.9" y="318.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (8 samples, 0.07%)</title><rect x="771.2" y="291.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.2" y="302.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (3 samples, 0.03%)</title><rect x="771.2" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="774.2" y="286.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.03%)</title><rect x="771.2" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.2" y="270.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.03%)</title><rect x="772.0" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils$$Lambda$121/1369809361.apply (4 samples, 0.03%)</title><rect x="772.4" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.lambda$getHttpRequests$1 (4 samples, 0.03%)</title><rect x="772.4" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="772.4" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (4 samples, 0.03%)</title><rect x="772.4" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1089418272.invoke (4 samples, 0.03%)</title><rect x="772.4" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.03%)</title><rect x="772.4" y="323.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="775.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 0.03%)</title><rect x="772.4" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 0.03%)</title><rect x="772.4" y="291.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.4" y="302.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="772.5" y="275.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="775.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (3 samples, 0.03%)</title><rect x="773.0" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (3 samples, 0.03%)</title><rect x="773.0" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/BasicTopology.all (3 samples, 0.03%)</title><rect x="773.9" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.9" y="558.0"></text>
</g>
<g>
<title>java/util/Set.of (3 samples, 0.03%)</title><rect x="773.9" y="531.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="776.9" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (3 samples, 0.03%)</title><rect x="773.9" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="776.9" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (3 samples, 0.03%)</title><rect x="773.9" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.9" y="510.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.03%)</title><rect x="773.9" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.03%)</title><rect x="773.9" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,257 samples, 10.50%)</title><rect x="774.2" y="691.0" width="123.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.2" y="702.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,257 samples, 10.50%)</title><rect x="774.2" y="675.0" width="123.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="777.2" y="686.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (127 samples, 1.06%)</title><rect x="774.8" y="659.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (117 samples, 0.98%)</title><rect x="774.8" y="643.0" width="11.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (112 samples, 0.94%)</title><rect x="775.3" y="627.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (100 samples, 0.84%)</title><rect x="776.1" y="611.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (11 samples, 0.09%)</title><rect x="776.4" y="595.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="779.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.03%)</title><rect x="776.6" y="579.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$187/1315311552.apply (6 samples, 0.05%)</title><rect x="776.9" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$upsert$10 (5 samples, 0.04%)</title><rect x="777.0" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/FutureUtils.getFutureResponses (5 samples, 0.04%)</title><rect x="777.0" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (3 samples, 0.03%)</title><rect x="777.2" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.03%)</title><rect x="777.2" y="515.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (86 samples, 0.72%)</title><rect x="777.5" y="595.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (14 samples, 0.12%)</title><rect x="777.5" y="579.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="780.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (14 samples, 0.12%)</title><rect x="777.5" y="563.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (14 samples, 0.12%)</title><rect x="777.5" y="547.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (14 samples, 0.12%)</title><rect x="777.5" y="531.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (14 samples, 0.12%)</title><rect x="777.5" y="515.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (13 samples, 0.11%)</title><rect x="777.5" y="499.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (13 samples, 0.11%)</title><rect x="777.5" y="483.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="780.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (13 samples, 0.11%)</title><rect x="777.5" y="467.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (13 samples, 0.11%)</title><rect x="777.5" y="451.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.11%)</title><rect x="777.5" y="435.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.10%)</title><rect x="777.6" y="419.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="780.6" y="430.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (12 samples, 0.10%)</title><rect x="777.6" y="403.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="780.6" y="414.0"></text>
</g>
<g>
<title>__psynch_cvsignal (10 samples, 0.08%)</title><rect x="777.6" y="387.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="780.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (72 samples, 0.60%)</title><rect x="778.9" y="579.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.03%)</title><rect x="778.9" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/FutureUtils$$Lambda$210/579933996.accept (4 samples, 0.03%)</title><rect x="779.2" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="782.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/FutureUtils.lambda$getFutureResponses$0 (4 samples, 0.03%)</title><rect x="779.2" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="782.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.03%)</title><rect x="779.2" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.03%)</title><rect x="779.2" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.03%)</title><rect x="779.2" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="782.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.03%)</title><rect x="779.2" y="483.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.03%)</title><rect x="779.2" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.03%)</title><rect x="779.2" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.03%)</title><rect x="779.2" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (4 samples, 0.03%)</title><rect x="779.2" y="419.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.03%)</title><rect x="779.2" y="403.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.03%)</title><rect x="779.2" y="387.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.03%)</title><rect x="779.2" y="371.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="782.2" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (4 samples, 0.03%)</title><rect x="779.2" y="355.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="782.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$190/574769761.accept (65 samples, 0.54%)</title><rect x="779.6" y="563.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.lambda$upsert$11 (65 samples, 0.54%)</title><rect x="779.6" y="547.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/ServiceUtils.handlePutResponses (63 samples, 0.53%)</title><rect x="779.8" y="531.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (63 samples, 0.53%)</title><rect x="779.8" y="515.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (55 samples, 0.46%)</title><rect x="780.3" y="499.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.03%)</title><rect x="780.3" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="783.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (52 samples, 0.43%)</title><rect x="780.6" y="483.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.6" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (52 samples, 0.43%)</title><rect x="780.6" y="467.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="783.6" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (51 samples, 0.43%)</title><rect x="780.7" y="451.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (51 samples, 0.43%)</title><rect x="780.7" y="435.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="783.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (51 samples, 0.43%)</title><rect x="780.7" y="419.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (49 samples, 0.41%)</title><rect x="780.9" y="403.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (49 samples, 0.41%)</title><rect x="780.9" y="387.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (46 samples, 0.38%)</title><rect x="780.9" y="371.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="783.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (46 samples, 0.38%)</title><rect x="780.9" y="355.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="783.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (46 samples, 0.38%)</title><rect x="780.9" y="339.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.9" y="350.0"></text>
</g>
<g>
<title>write (42 samples, 0.35%)</title><rect x="781.3" y="323.0" width="4.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="784.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.03%)</title><rect x="785.4" y="371.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="788.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.03%)</title><rect x="785.4" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="788.4" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (3 samples, 0.03%)</title><rect x="785.4" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="788.4" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (3 samples, 0.03%)</title><rect x="785.4" y="323.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (3 samples, 0.03%)</title><rect x="785.4" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.03%)</title><rect x="785.7" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.7" y="510.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.03%)</title><rect x="786.0" y="611.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="789.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (10 samples, 0.08%)</title><rect x="786.4" y="643.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.08%)</title><rect x="786.4" y="627.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.08%)</title><rect x="786.4" y="611.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="789.4" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (10 samples, 0.08%)</title><rect x="786.4" y="595.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="789.4" y="606.0"></text>
</g>
<g>
<title>__psynch_cvsignal (10 samples, 0.08%)</title><rect x="786.4" y="579.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="789.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (664 samples, 5.55%)</title><rect x="787.4" y="659.0" width="65.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="790.4" y="670.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (3 samples, 0.03%)</title><rect x="787.8" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="790.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (655 samples, 5.47%)</title><rect x="788.1" y="643.0" width="64.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="791.1" y="654.0">jdk/int..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (633 samples, 5.29%)</title><rect x="790.2" y="627.0" width="62.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="793.2" y="638.0">Unsafe..</text>
</g>
<g>
<title>Parker::park(bool, long) (621 samples, 5.19%)</title><rect x="790.6" y="611.0" width="61.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="793.6" y="622.0">Parker..</text>
</g>
<g>
<title>__psynch_cvwait (612 samples, 5.11%)</title><rect x="790.8" y="595.0" width="60.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="793.8" y="606.0">__psyn..</text>
</g>
<g>
<title>_pthread_cond_wait (4 samples, 0.03%)</title><rect x="851.2" y="595.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="854.2" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (4 samples, 0.03%)</title><rect x="852.3" y="611.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="855.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (459 samples, 3.84%)</title><rect x="852.8" y="659.0" width="45.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="855.8" y="670.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (454 samples, 3.79%)</title><rect x="853.3" y="643.0" width="44.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.3" y="654.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (441 samples, 3.69%)</title><rect x="854.6" y="627.0" width="43.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="857.6" y="638.0">Unsa..</text>
</g>
<g>
<title>Parker::park(bool, long) (432 samples, 3.61%)</title><rect x="854.8" y="611.0" width="42.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="857.8" y="622.0">Park..</text>
</g>
<g>
<title>__gettimeofday (12 samples, 0.10%)</title><rect x="855.0" y="595.0" width="1.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="858.0" y="606.0"></text>
</g>
<g>
<title>__psynch_cvwait (413 samples, 3.45%)</title><rect x="856.2" y="595.0" width="40.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="859.2" y="606.0">__p..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (3 samples, 0.03%)</title><rect x="897.6" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="900.6" y="622.0"></text>
</g>
<g>
<title>SafepointMechanism::poll(Thread*) (3 samples, 0.03%)</title><rect x="897.6" y="595.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="900.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,948 samples, 16.28%)</title><rect x="898.1" y="691.0" width="192.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.1" y="702.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.03%)</title><rect x="901.4" y="675.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="904.4" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (4 samples, 0.03%)</title><rect x="901.4" y="659.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="904.4" y="670.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.03%)</title><rect x="901.4" y="643.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="904.4" y="654.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="901.8" y="675.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="904.8" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (11 samples, 0.09%)</title><rect x="902.1" y="675.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="905.1" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (494 samples, 4.13%)</title><rect x="903.2" y="675.0" width="48.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.2" y="686.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$317/1029786317.accept (463 samples, 3.87%)</title><rect x="903.3" y="659.0" width="45.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.3" y="670.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (463 samples, 3.87%)</title><rect x="903.3" y="643.0" width="45.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.3" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (463 samples, 3.87%)</title><rect x="903.3" y="627.0" width="45.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="906.3" y="638.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (458 samples, 3.83%)</title><rect x="903.8" y="611.0" width="45.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.8" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (458 samples, 3.83%)</title><rect x="903.8" y="595.0" width="45.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.8" y="606.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (21 samples, 0.18%)</title><rect x="903.8" y="579.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="906.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (13 samples, 0.11%)</title><rect x="904.4" y="563.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.4" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (3 samples, 0.03%)</title><rect x="904.7" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (7 samples, 0.06%)</title><rect x="905.0" y="547.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.0" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.05%)</title><rect x="905.1" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.1" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.05%)</title><rect x="905.1" y="515.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="908.1" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.05%)</title><rect x="905.1" y="499.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (437 samples, 3.65%)</title><rect x="905.9" y="579.0" width="43.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.9" y="590.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (437 samples, 3.65%)</title><rect x="905.9" y="563.0" width="43.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="908.9" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (437 samples, 3.65%)</title><rect x="905.9" y="547.0" width="43.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="908.9" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.06%)</title><rect x="906.0" y="531.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="909.0" y="542.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="906.0" y="515.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="909.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (429 samples, 3.59%)</title><rect x="906.7" y="531.0" width="42.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="909.7" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (429 samples, 3.59%)</title><rect x="906.7" y="515.0" width="42.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="909.7" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$238/1293482513.run (426 samples, 3.56%)</title><rect x="906.8" y="499.0" width="42.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.8" y="510.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (425 samples, 3.55%)</title><rect x="906.9" y="483.0" width="41.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="909.9" y="494.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (145 samples, 1.21%)</title><rect x="907.5" y="467.0" width="14.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="910.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (145 samples, 1.21%)</title><rect x="907.5" y="451.0" width="14.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="910.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (140 samples, 1.17%)</title><rect x="908.0" y="435.0" width="13.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="911.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (139 samples, 1.16%)</title><rect x="908.1" y="419.0" width="13.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (139 samples, 1.16%)</title><rect x="908.1" y="403.0" width="13.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="911.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (139 samples, 1.16%)</title><rect x="908.1" y="387.0" width="13.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="911.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (139 samples, 1.16%)</title><rect x="908.1" y="371.0" width="13.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="911.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (139 samples, 1.16%)</title><rect x="908.1" y="355.0" width="13.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="911.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (137 samples, 1.14%)</title><rect x="908.1" y="339.0" width="13.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="911.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (10 samples, 0.08%)</title><rect x="908.1" y="323.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="911.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (10 samples, 0.08%)</title><rect x="908.1" y="307.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (10 samples, 0.08%)</title><rect x="908.1" y="291.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="911.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (127 samples, 1.06%)</title><rect x="909.1" y="323.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="912.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (127 samples, 1.06%)</title><rect x="909.1" y="307.0" width="12.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="912.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (127 samples, 1.06%)</title><rect x="909.1" y="291.0" width="12.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="912.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (127 samples, 1.06%)</title><rect x="909.1" y="275.0" width="12.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="912.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (126 samples, 1.05%)</title><rect x="909.2" y="259.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="912.2" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (117 samples, 0.98%)</title><rect x="910.0" y="243.0" width="11.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="913.0" y="254.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (4 samples, 0.03%)</title><rect x="910.5" y="227.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="913.5" y="238.0"></text>
</g>
<g>
<title>SafepointMechanism::poll(Thread*) (4 samples, 0.03%)</title><rect x="910.5" y="211.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="913.5" y="222.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll(Thread*) (3 samples, 0.03%)</title><rect x="910.6" y="195.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="913.6" y="206.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (3 samples, 0.03%)</title><rect x="910.6" y="179.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="913.6" y="190.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (3 samples, 0.03%)</title><rect x="910.6" y="163.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="913.6" y="174.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (3 samples, 0.03%)</title><rect x="910.6" y="147.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="913.6" y="158.0"></text>
</g>
<g>
<title>__psynch_cvsignal (96 samples, 0.80%)</title><rect x="911.1" y="227.0" width="9.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="914.1" y="238.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.04%)</title><rect x="921.1" y="227.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="924.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (8 samples, 0.07%)</title><rect x="921.8" y="467.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="924.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (5 samples, 0.04%)</title><rect x="922.1" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (3 samples, 0.03%)</title><rect x="922.1" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="925.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.03%)</title><rect x="922.1" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="925.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.03%)</title><rect x="922.1" y="403.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="925.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.03%)</title><rect x="922.1" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="925.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (15 samples, 0.13%)</title><rect x="922.6" y="467.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="925.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (15 samples, 0.13%)</title><rect x="922.6" y="451.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="925.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (10 samples, 0.08%)</title><rect x="923.1" y="435.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="926.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (5 samples, 0.04%)</title><rect x="923.5" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="926.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (250 samples, 2.09%)</title><rect x="924.0" y="467.0" width="24.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="927.0" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (3 samples, 0.03%)</title><rect x="925.5" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (232 samples, 1.94%)</title><rect x="925.8" y="451.0" width="22.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="928.8" y="462.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (231 samples, 1.93%)</title><rect x="925.9" y="435.0" width="22.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="928.9" y="446.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (226 samples, 1.89%)</title><rect x="926.4" y="419.0" width="22.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="929.4" y="430.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (11 samples, 0.09%)</title><rect x="926.4" y="403.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="929.4" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (11 samples, 0.09%)</title><rect x="926.4" y="387.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="929.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (11 samples, 0.09%)</title><rect x="926.4" y="371.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="929.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (215 samples, 1.80%)</title><rect x="927.5" y="403.0" width="21.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="930.5" y="414.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (215 samples, 1.80%)</title><rect x="927.5" y="387.0" width="21.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.5" y="398.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (203 samples, 1.70%)</title><rect x="928.7" y="371.0" width="20.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="931.7" y="382.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (5 samples, 0.04%)</title><rect x="929.8" y="355.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="932.8" y="366.0"></text>
</g>
<g>
<title>read (183 samples, 1.53%)</title><rect x="930.4" y="355.0" width="18.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="933.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$320/412918576.accept (30 samples, 0.25%)</title><rect x="949.0" y="659.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="952.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (18 samples, 0.15%)</title><rect x="950.2" y="643.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$316/248695201.run (16 samples, 0.13%)</title><rect x="950.4" y="627.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="953.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (16 samples, 0.13%)</title><rect x="950.4" y="611.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="953.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (16 samples, 0.13%)</title><rect x="950.4" y="595.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.4" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (3 samples, 0.03%)</title><rect x="951.1" y="579.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="954.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (4 samples, 0.03%)</title><rect x="951.6" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="954.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (4 samples, 0.03%)</title><rect x="951.6" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="954.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (4 samples, 0.03%)</title><rect x="951.6" y="547.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="954.6" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (4 samples, 0.03%)</title><rect x="951.6" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="954.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (34 samples, 0.28%)</title><rect x="952.0" y="675.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="955.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (34 samples, 0.28%)</title><rect x="952.0" y="659.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="955.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (30 samples, 0.25%)</title><rect x="952.3" y="643.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="955.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (30 samples, 0.25%)</title><rect x="952.3" y="627.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="955.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (30 samples, 0.25%)</title><rect x="952.3" y="611.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="955.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (28 samples, 0.23%)</title><rect x="952.4" y="595.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="955.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (13 samples, 0.11%)</title><rect x="952.7" y="579.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="955.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (13 samples, 0.11%)</title><rect x="952.7" y="563.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="955.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (3 samples, 0.03%)</title><rect x="952.7" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="955.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$314/437596836.test (8 samples, 0.07%)</title><rect x="953.2" y="547.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="956.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.lambda$events$0 (8 samples, 0.07%)</title><rect x="953.2" y="531.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="956.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (3 samples, 0.03%)</title><rect x="954.3" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="957.3" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (4 samples, 0.03%)</title><rect x="954.6" y="579.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="957.6" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (3 samples, 0.03%)</title><rect x="954.7" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="957.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (163 samples, 1.36%)</title><rect x="955.4" y="675.0" width="16.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/108890628.run (94 samples, 0.79%)</title><rect x="955.4" y="659.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="958.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (94 samples, 0.79%)</title><rect x="955.4" y="643.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="958.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (93 samples, 0.78%)</title><rect x="955.5" y="627.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="958.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (89 samples, 0.74%)</title><rect x="955.9" y="611.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="958.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12 samples, 0.10%)</title><rect x="955.9" y="595.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="958.9" y="606.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="955.9" y="579.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="958.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (6 samples, 0.05%)</title><rect x="956.2" y="579.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="959.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.03%)</title><rect x="956.8" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="959.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (77 samples, 0.64%)</title><rect x="957.1" y="595.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="960.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (77 samples, 0.64%)</title><rect x="957.1" y="579.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="960.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$238/1293482513.run (72 samples, 0.60%)</title><rect x="957.4" y="563.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="960.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (72 samples, 0.60%)</title><rect x="957.4" y="547.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="960.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (63 samples, 0.53%)</title><rect x="957.7" y="531.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="960.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (49 samples, 0.41%)</title><rect x="959.0" y="515.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="962.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (15 samples, 0.13%)</title><rect x="959.1" y="499.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="962.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (15 samples, 0.13%)</title><rect x="959.1" y="483.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="962.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (15 samples, 0.13%)</title><rect x="959.1" y="467.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="962.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (13 samples, 0.11%)</title><rect x="959.3" y="451.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="962.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="959.3" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="962.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.03%)</title><rect x="959.3" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="962.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$328/562141945.get$Lambda (4 samples, 0.03%)</title><rect x="959.3" y="403.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="962.3" y="414.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="959.4" y="387.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="962.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (9 samples, 0.08%)</title><rect x="959.7" y="435.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="962.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (8 samples, 0.07%)</title><rect x="959.8" y="419.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="962.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.03%)</title><rect x="960.3" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="963.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.03%)</title><rect x="960.3" y="387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.3" y="398.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.03%)</title><rect x="960.3" y="371.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="963.3" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.03%)</title><rect x="960.3" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="963.3" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.03%)</title><rect x="960.3" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="963.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (33 samples, 0.28%)</title><rect x="960.6" y="499.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="963.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.15%)</title><rect x="962.1" y="483.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="965.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.13%)</title><rect x="962.3" y="467.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="965.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (14 samples, 0.12%)</title><rect x="962.5" y="451.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="965.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.11%)</title><rect x="962.5" y="435.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="965.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.11%)</title><rect x="962.5" y="419.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="965.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.11%)</title><rect x="962.5" y="403.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="965.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.04%)</title><rect x="962.5" y="387.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="965.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.04%)</title><rect x="962.5" y="371.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="965.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.04%)</title><rect x="962.5" y="355.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.05%)</title><rect x="963.2" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="966.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.05%)</title><rect x="963.2" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="966.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.05%)</title><rect x="963.2" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="966.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.05%)</title><rect x="963.2" y="339.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="966.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.05%)</title><rect x="963.2" y="323.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="966.2" y="334.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 0.04%)</title><rect x="963.3" y="307.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="966.3" y="318.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.03%)</title><rect x="963.5" y="291.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="966.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (6 samples, 0.05%)</title><rect x="963.9" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="966.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (3 samples, 0.03%)</title><rect x="964.2" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.03%)</title><rect x="964.2" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="967.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.03%)</title><rect x="964.2" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.03%)</title><rect x="964.2" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="967.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (3 samples, 0.03%)</title><rect x="964.2" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (3 samples, 0.03%)</title><rect x="964.2" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="967.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$246/1261412757.run (69 samples, 0.58%)</title><rect x="964.7" y="659.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (69 samples, 0.58%)</title><rect x="964.7" y="643.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (68 samples, 0.57%)</title><rect x="964.8" y="627.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (64 samples, 0.53%)</title><rect x="964.8" y="611.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="967.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (64 samples, 0.53%)</title><rect x="964.8" y="595.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (63 samples, 0.53%)</title><rect x="964.8" y="579.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="967.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (10 samples, 0.08%)</title><rect x="964.8" y="563.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (10 samples, 0.08%)</title><rect x="964.8" y="547.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (10 samples, 0.08%)</title><rect x="964.8" y="531.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (51 samples, 0.43%)</title><rect x="966.0" y="563.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (51 samples, 0.43%)</title><rect x="966.0" y="547.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="969.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (51 samples, 0.43%)</title><rect x="966.0" y="531.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (51 samples, 0.43%)</title><rect x="966.0" y="515.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="969.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (51 samples, 0.43%)</title><rect x="966.0" y="499.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="969.0" y="510.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (35 samples, 0.29%)</title><rect x="967.5" y="483.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="970.5" y="494.0"></text>
</g>
<g>
<title>__psynch_cvsignal (29 samples, 0.24%)</title><rect x="968.0" y="467.0" width="2.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="971.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$324/1583117545.run (4 samples, 0.03%)</title><rect x="971.1" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="974.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (4 samples, 0.03%)</title><rect x="971.1" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="974.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (13 samples, 0.11%)</title><rect x="971.5" y="675.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="974.5" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.03%)</title><rect x="971.5" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="974.5" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.03%)</title><rect x="971.5" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="974.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (10 samples, 0.08%)</title><rect x="971.8" y="659.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="974.8" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (8 samples, 0.07%)</title><rect x="972.0" y="643.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="975.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (5 samples, 0.04%)</title><rect x="972.8" y="675.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="975.8" y="686.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.04%)</title><rect x="972.8" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="975.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.04%)</title><rect x="972.8" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="975.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (5 samples, 0.04%)</title><rect x="972.8" y="627.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="975.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (7 samples, 0.06%)</title><rect x="973.2" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="976.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.05%)</title><rect x="973.3" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="976.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.05%)</title><rect x="973.3" y="643.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="976.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.05%)</title><rect x="973.3" y="627.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (29 samples, 0.24%)</title><rect x="973.9" y="675.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="976.9" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (20 samples, 0.17%)</title><rect x="974.1" y="659.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="977.1" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (20 samples, 0.17%)</title><rect x="974.1" y="643.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="977.1" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (5 samples, 0.04%)</title><rect x="974.5" y="627.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="977.5" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (5 samples, 0.04%)</title><rect x="974.5" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="977.5" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.04%)</title><rect x="974.5" y="595.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="977.5" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (3 samples, 0.03%)</title><rect x="974.5" y="579.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="977.5" y="590.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.03%)</title><rect x="974.5" y="563.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="977.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (11 samples, 0.09%)</title><rect x="975.0" y="627.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="978.0" y="638.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (6 samples, 0.05%)</title><rect x="975.5" y="611.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="978.5" y="622.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.03%)</title><rect x="975.6" y="595.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="978.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (4 samples, 0.03%)</title><rect x="976.1" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="979.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (4 samples, 0.03%)</title><rect x="976.1" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (4 samples, 0.03%)</title><rect x="976.1" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="979.1" y="638.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (3 samples, 0.03%)</title><rect x="976.5" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="979.5" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (3 samples, 0.03%)</title><rect x="976.5" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="979.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (3 samples, 0.03%)</title><rect x="976.5" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="979.5" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (3 samples, 0.03%)</title><rect x="976.5" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="979.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/108890628.run (3 samples, 0.03%)</title><rect x="976.8" y="675.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="979.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$246/1261412757.run (6 samples, 0.05%)</title><rect x="977.1" y="675.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="980.1" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1,079 samples, 9.02%)</title><rect x="977.7" y="675.0" width="106.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="980.7" y="686.0">sun/nio/ch/Se..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,078 samples, 9.01%)</title><rect x="977.8" y="659.0" width="106.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="980.8" y="670.0">sun/nio/ch/Se..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (1,069 samples, 8.93%)</title><rect x="978.5" y="643.0" width="105.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="981.5" y="654.0">sun/nio/ch/KQ..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (903 samples, 7.55%)</title><rect x="978.8" y="627.0" width="89.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.8" y="638.0">sun/nio/ch..</text>
</g>
<g>
<title>kevent (883 samples, 7.38%)</title><rect x="980.7" y="611.0" width="87.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="983.7" y="622.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (146 samples, 1.22%)</title><rect x="1067.8" y="627.0" width="14.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1070.8" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.get (14 samples, 0.12%)</title><rect x="1067.8" y="611.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1070.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (14 samples, 0.12%)</title><rect x="1067.8" y="595.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1070.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.clearInterrupt (90 samples, 0.75%)</title><rect x="1069.2" y="611.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1072.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (79 samples, 0.66%)</title><rect x="1070.3" y="595.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1073.3" y="606.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (5 samples, 0.04%)</title><rect x="1071.1" y="579.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1074.1" y="590.0"></text>
</g>
<g>
<title>read (66 samples, 0.55%)</title><rect x="1071.6" y="579.0" width="6.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1074.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (42 samples, 0.35%)</title><rect x="1078.1" y="611.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1081.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.03%)</title><rect x="1078.2" y="595.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1081.2" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.03%)</title><rect x="1078.2" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1081.2" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.03%)</title><rect x="1078.2" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1081.2" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (3 samples, 0.03%)</title><rect x="1078.6" y="595.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1081.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (3 samples, 0.03%)</title><rect x="1078.6" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1081.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.03%)</title><rect x="1078.6" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1081.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (28 samples, 0.23%)</title><rect x="1078.9" y="595.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1081.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (28 samples, 0.23%)</title><rect x="1078.9" y="579.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1081.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (28 samples, 0.23%)</title><rect x="1078.9" y="563.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1081.9" y="574.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (26 samples, 0.22%)</title><rect x="1079.1" y="547.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1082.1" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (25 samples, 0.21%)</title><rect x="1079.1" y="531.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1082.1" y="542.0"></text>
</g>
<g>
<title>__psynch_cvsignal (21 samples, 0.18%)</title><rect x="1079.3" y="515.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1082.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (6 samples, 0.05%)</title><rect x="1081.6" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1084.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndUpdateReadyOps (6 samples, 0.05%)</title><rect x="1081.6" y="579.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1084.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (9 samples, 0.08%)</title><rect x="1082.4" y="627.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1085.4" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (8 samples, 0.07%)</title><rect x="1082.4" y="611.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1085.4" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (8 samples, 0.07%)</title><rect x="1082.4" y="595.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1085.4" y="606.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (8 samples, 0.07%)</title><rect x="1082.4" y="579.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.4" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (8 samples, 0.07%)</title><rect x="1082.4" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1085.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (3 samples, 0.03%)</title><rect x="1083.5" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1086.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.03%)</title><rect x="1083.5" y="611.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1086.5" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3 samples, 0.03%)</title><rect x="1083.5" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1086.5" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1083.5" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1086.5" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1083.5" y="563.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1086.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (47 samples, 0.39%)</title><rect x="1084.1" y="675.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (3 samples, 0.03%)</title><rect x="1084.2" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.2" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (43 samples, 0.36%)</title><rect x="1084.5" y="659.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1087.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (43 samples, 0.36%)</title><rect x="1084.5" y="643.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1087.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (21 samples, 0.18%)</title><rect x="1084.5" y="627.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1087.5" y="638.0"></text>
</g>
<g>
<title>kevent (19 samples, 0.16%)</title><rect x="1084.7" y="611.0" width="1.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1087.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (19 samples, 0.16%)</title><rect x="1086.6" y="627.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1089.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.06%)</title><rect x="1086.6" y="611.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1089.6" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.06%)</title><rect x="1086.6" y="595.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1089.6" y="606.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (3 samples, 0.03%)</title><rect x="1086.9" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.clearInterrupt (6 samples, 0.05%)</title><rect x="1087.2" y="611.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1090.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (6 samples, 0.05%)</title><rect x="1087.2" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.2" y="606.0"></text>
</g>
<g>
<title>read (5 samples, 0.04%)</title><rect x="1087.3" y="579.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1090.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (6 samples, 0.05%)</title><rect x="1087.8" y="611.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1090.8" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (5 samples, 0.04%)</title><rect x="1087.9" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndUpdateReadyOps (5 samples, 0.04%)</title><rect x="1087.9" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (8 samples, 0.07%)</title><rect x="1088.7" y="675.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1091.7" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (6 samples, 0.05%)</title><rect x="1088.9" y="659.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1091.9" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (6 samples, 0.05%)</title><rect x="1088.9" y="643.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1091.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (7 samples, 0.06%)</title><rect x="1089.5" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1092.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (4 samples, 0.03%)</title><rect x="1089.8" y="659.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1092.8" y="670.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (945 samples, 7.90%)</title><rect x="1090.3" y="691.0" width="93.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.3" y="702.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (641 samples, 5.36%)</title><rect x="1091.2" y="675.0" width="63.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1094.2" y="686.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (8 samples, 0.07%)</title><rect x="1091.4" y="659.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1094.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (4 samples, 0.03%)</title><rect x="1091.8" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.8" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (4 samples, 0.03%)</title><rect x="1091.8" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1094.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (625 samples, 5.22%)</title><rect x="1092.5" y="659.0" width="61.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.5" y="670.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (625 samples, 5.22%)</title><rect x="1092.5" y="643.0" width="61.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.5" y="654.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (624 samples, 5.21%)</title><rect x="1092.6" y="627.0" width="61.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1095.6" y="638.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (604 samples, 5.05%)</title><rect x="1092.7" y="611.0" width="59.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1095.7" y="622.0">sun/ni..</text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (5 samples, 0.04%)</title><rect x="1094.7" y="595.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1097.7" y="606.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (5 samples, 0.04%)</title><rect x="1094.7" y="579.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1097.7" y="590.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (5 samples, 0.04%)</title><rect x="1094.7" y="563.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1097.7" y="574.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.03%)</title><rect x="1094.9" y="547.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1097.9" y="558.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (3 samples, 0.03%)</title><rect x="1095.2" y="595.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1098.2" y="606.0"></text>
</g>
<g>
<title>kevent (575 samples, 4.81%)</title><rect x="1095.5" y="595.0" width="56.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1098.5" y="606.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (6 samples, 0.05%)</title><rect x="1152.2" y="611.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1155.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.03%)</title><rect x="1152.5" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1155.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (8 samples, 0.07%)</title><rect x="1153.0" y="611.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1156.0" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (7 samples, 0.06%)</title><rect x="1153.0" y="595.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1156.0" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.06%)</title><rect x="1153.0" y="579.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1156.0" y="590.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.06%)</title><rect x="1153.0" y="563.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1156.0" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.06%)</title><rect x="1153.0" y="547.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1156.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (295 samples, 2.47%)</title><rect x="1154.4" y="675.0" width="29.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1157.4" y="686.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (294 samples, 2.46%)</title><rect x="1154.5" y="659.0" width="29.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1157.5" y="670.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (184 samples, 1.54%)</title><rect x="1154.5" y="643.0" width="18.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1157.5" y="654.0"></text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (5 samples, 0.04%)</title><rect x="1155.1" y="627.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1158.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (138 samples, 1.15%)</title><rect x="1155.7" y="627.0" width="13.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1158.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (138 samples, 1.15%)</title><rect x="1155.7" y="611.0" width="13.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1158.7" y="622.0"></text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (117 samples, 0.98%)</title><rect x="1156.5" y="595.0" width="11.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1159.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.entity (115 samples, 0.96%)</title><rect x="1156.7" y="579.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.executeAsync (108 samples, 0.90%)</title><rect x="1157.0" y="563.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.03%)</title><rect x="1157.0" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.03%)</title><rect x="1157.0" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService$$Lambda$115/356589445.get$Lambda (3 samples, 0.03%)</title><rect x="1157.0" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1160.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (105 samples, 0.88%)</title><rect x="1157.3" y="547.0" width="10.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (105 samples, 0.88%)</title><rect x="1157.3" y="531.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1160.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (104 samples, 0.87%)</title><rect x="1157.3" y="515.0" width="10.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (10 samples, 0.08%)</title><rect x="1157.3" y="499.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1160.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (10 samples, 0.08%)</title><rect x="1157.3" y="483.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (10 samples, 0.08%)</title><rect x="1157.3" y="467.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1160.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (94 samples, 0.79%)</title><rect x="1158.2" y="499.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (94 samples, 0.79%)</title><rect x="1158.2" y="483.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1161.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (94 samples, 0.79%)</title><rect x="1158.2" y="467.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (94 samples, 0.79%)</title><rect x="1158.2" y="451.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1161.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (94 samples, 0.79%)</title><rect x="1158.2" y="435.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1161.2" y="446.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (89 samples, 0.74%)</title><rect x="1158.5" y="419.0" width="8.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1161.5" y="430.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.03%)</title><rect x="1159.3" y="403.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1162.3" y="414.0"></text>
</g>
<g>
<title>__psynch_cvsignal (70 samples, 0.58%)</title><rect x="1159.6" y="403.0" width="6.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1162.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rubtsov/MyService.isProxied (4 samples, 0.03%)</title><rect x="1167.6" y="563.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1170.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.03%)</title><rect x="1167.6" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1170.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="1168.0" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1171.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.04%)</title><rect x="1168.6" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1171.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.04%)</title><rect x="1168.6" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1171.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.03%)</title><rect x="1168.6" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 0.08%)</title><rect x="1169.3" y="627.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1172.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1169.4" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1172.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="1169.4" y="595.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1172.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="1169.4" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1172.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.03%)</title><rect x="1169.4" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1172.4" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.03%)</title><rect x="1169.9" y="611.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1172.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.10%)</title><rect x="1170.3" y="627.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1173.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.04%)</title><rect x="1171.0" y="611.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1174.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.04%)</title><rect x="1171.0" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1174.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.10%)</title><rect x="1171.5" y="627.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1174.5" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.04%)</title><rect x="1172.2" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1175.2" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (110 samples, 0.92%)</title><rect x="1172.6" y="643.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1175.6" y="654.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (110 samples, 0.92%)</title><rect x="1172.6" y="627.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1175.6" y="638.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.03%)</title><rect x="1172.9" y="611.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.9" y="622.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.03%)</title><rect x="1172.9" y="595.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1175.9" y="606.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (3 samples, 0.03%)</title><rect x="1172.9" y="579.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1175.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (104 samples, 0.87%)</title><rect x="1173.2" y="611.0" width="10.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1176.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (102 samples, 0.85%)</title><rect x="1173.4" y="595.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1176.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (96 samples, 0.80%)</title><rect x="1174.0" y="579.0" width="9.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1177.0" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.03%)</title><rect x="1174.0" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1177.0" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.03%)</title><rect x="1174.0" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1177.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (4 samples, 0.03%)</title><rect x="1174.0" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1177.0" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="1174.1" y="515.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1177.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (92 samples, 0.77%)</title><rect x="1174.4" y="563.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (92 samples, 0.77%)</title><rect x="1174.4" y="547.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1177.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (87 samples, 0.73%)</title><rect x="1174.9" y="531.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1177.9" y="542.0"></text>
</g>
<g>
<title>read (81 samples, 0.68%)</title><rect x="1175.5" y="515.0" width="8.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1178.5" y="526.0"></text>
</g>
<g>
<title>thread_start (63 samples, 0.53%)</title><rect x="1183.8" y="691.0" width="6.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1186.8" y="702.0"></text>
</g>
<g>
<title>_pthread_start (63 samples, 0.53%)</title><rect x="1183.8" y="675.0" width="6.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1186.8" y="686.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (63 samples, 0.53%)</title><rect x="1183.8" y="659.0" width="6.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1186.8" y="670.0"></text>
</g>
<g>
<title>Thread::call_run() (63 samples, 0.53%)</title><rect x="1183.8" y="643.0" width="6.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.8" y="654.0"></text>
</g>
<g>
<title>GangWorker::loop() (36 samples, 0.30%)</title><rect x="1184.0" y="627.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.0" y="638.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (19 samples, 0.16%)</title><rect x="1184.0" y="611.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.0" y="622.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.03%)</title><rect x="1184.0" y="595.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.0" y="606.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (11 samples, 0.09%)</title><rect x="1184.3" y="595.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.3" y="606.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (11 samples, 0.09%)</title><rect x="1184.3" y="579.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.3" y="590.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (11 samples, 0.09%)</title><rect x="1184.3" y="563.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.3" y="574.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (11 samples, 0.09%)</title><rect x="1184.3" y="547.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.3" y="558.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (11 samples, 0.09%)</title><rect x="1184.3" y="531.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.3" y="542.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_to_threshold(unsigned int) (4 samples, 0.03%)</title><rect x="1184.3" y="515.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.3" y="526.0"></text>
</g>
<g>
<title>void G1ParScanThreadState::do_oop_evac&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.03%)</title><rect x="1184.3" y="499.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.3" y="510.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (7 samples, 0.06%)</title><rect x="1184.7" y="515.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.7" y="526.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (6 samples, 0.05%)</title><rect x="1184.8" y="499.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.8" y="510.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.03%)</title><rect x="1185.4" y="595.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.4" y="606.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (4 samples, 0.03%)</title><rect x="1185.4" y="579.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.4" y="590.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (4 samples, 0.03%)</title><rect x="1185.4" y="563.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.4" y="574.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (4 samples, 0.03%)</title><rect x="1185.4" y="547.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.4" y="558.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (4 samples, 0.03%)</title><rect x="1185.4" y="531.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.4" y="542.0"></text>
</g>
<g>
<title>frame::oops_code_blob_do(OopClosure*, CodeBlobClosure*, RegisterMap const*) (3 samples, 0.03%)</title><rect x="1185.4" y="515.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.4" y="526.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (8 samples, 0.07%)</title><rect x="1186.0" y="611.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.0" y="622.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (8 samples, 0.07%)</title><rect x="1186.0" y="595.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.0" y="606.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (5 samples, 0.04%)</title><rect x="1186.0" y="579.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.0" y="590.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.03%)</title><rect x="1186.1" y="563.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.1" y="574.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (3 samples, 0.03%)</title><rect x="1186.1" y="547.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.1" y="558.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::worker_wait_for_task() (7 samples, 0.06%)</title><rect x="1186.7" y="611.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.7" y="622.0"></text>
</g>
<g>
<title>si_module_static_search.search_vtable (7 samples, 0.06%)</title><rect x="1186.7" y="595.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1189.7" y="606.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (4 samples, 0.03%)</title><rect x="1187.5" y="627.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.5" y="638.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (3 samples, 0.03%)</title><rect x="1187.5" y="611.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.5" y="622.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (3 samples, 0.03%)</title><rect x="1187.5" y="595.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.5" y="606.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (3 samples, 0.03%)</title><rect x="1187.5" y="579.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.5" y="590.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (3 samples, 0.03%)</title><rect x="1187.5" y="563.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.5" y="574.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (3 samples, 0.03%)</title><rect x="1187.5" y="547.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.5" y="558.0"></text>
</g>
<g>
<title>VMThread::run() (16 samples, 0.13%)</title><rect x="1187.9" y="627.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.9" y="638.0"></text>
</g>
<g>
<title>VMThread::loop() (16 samples, 0.13%)</title><rect x="1187.9" y="611.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.9" y="622.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (13 samples, 0.11%)</title><rect x="1188.2" y="595.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.2" y="606.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (13 samples, 0.11%)</title><rect x="1188.2" y="579.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.2" y="590.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (13 samples, 0.11%)</title><rect x="1188.2" y="563.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.2" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (12 samples, 0.10%)</title><rect x="1188.3" y="547.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.3" y="558.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (11 samples, 0.09%)</title><rect x="1188.4" y="531.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.4" y="542.0"></text>
</g>
<g>
<title>DerivedPointerTable::update_pointers() (6 samples, 0.05%)</title><rect x="1188.4" y="515.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.4" y="526.0"></text>
</g>
<g>
<title>WatcherThread::run() (5 samples, 0.04%)</title><rect x="1189.5" y="627.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.5" y="638.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (5 samples, 0.04%)</title><rect x="1189.5" y="611.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.5" y="622.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (5 samples, 0.04%)</title><rect x="1189.5" y="595.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.5" y="606.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (5 samples, 0.04%)</title><rect x="1189.5" y="579.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.5" y="590.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (4 samples, 0.03%)</title><rect x="1189.5" y="563.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.5" y="574.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 0.03%)</title><rect x="1189.5" y="547.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1192.5" y="558.0"></text>
</g>
</g>
</svg>
