<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390"
     xmlns="http://www.w3.org/2000/svg">
    <style type="text/css">
        text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
        #search { opacity:0.1; cursor:pointer; }
        #search:hover, #search.show { opacity:1; }
        #subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
        #title { text-anchor:middle; font-size:17px}
        #unzoom { cursor:pointer; }
        #frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
        .hide { display:none; }
        .parent { opacity:0.5; }
    </style>
    <script type="text/ecmascript">
        <![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
    </script>
    <rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
    <text id="title" x="600" y="24">Flame Graph</text>
    <text id="details" x="10" y="373"></text>
    <text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
    <text id="search" x="1090" y="24">Search</text>
    <text id="matched" x="1090" y="373"></text>
    <g id="frames">
        <g>
            <title>all (1,102 samples, 100.00%)</title>
            <rect x="10.0" y="339.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="13.0" y="350.0">all</text>
        </g>
        <g>
            <title>[not_walkable] (1 samples, 0.09%)</title>
            <rect x="10.0" y="323.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
            <text x="13.0" y="334.0"></text>
        </g>
        <g>
            <title>java.lang.String (1 samples, 0.09%)</title>
            <rect x="10.0" y="307.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
            <text x="13.0" y="318.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.run (603 samples, 54.72%)</title>
            <rect x="11.1" y="323.0" width="645.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="14.1" y="334.0">java/lang/Thread.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.run (603 samples, 54.72%)</title>
            <rect x="11.1" y="307.0" width="645.7" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="14.1" y="318.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.runWorker (603 samples, 54.72%)</title>
            <rect x="11.1" y="291.0" width="645.7" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="14.1" y="302.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.getTask (13 samples, 1.18%)</title>
            <rect x="11.1" y="275.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="14.1" y="286.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue.take (13 samples, 1.18%)</title>
            <rect x="11.1" y="259.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="14.1" y="270.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (13 samples, 1.18%)</title>
            <rect x="11.1" y="243.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="14.1" y="254.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.snode (13 samples, 1.18%)</title>
            <rect x="11.1" y="227.0" width="13.9" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="14.1" y="238.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (13 samples, 1.18%)</title>
            <rect x="11.1" y="211.0" width="13.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
            <text x="14.1" y="222.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$69/406668019.run (590 samples, 53.54%)</title>
            <rect x="25.0" y="275.0" width="631.8" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="28.0" y="286.0">ru/mail/polis/service/rubtsov/MyService$$Lambda$69/406668019.run</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$4 (590 samples, 53.54%)</title>
            <rect x="25.0" y="259.0" width="631.8" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="28.0" y="270.0">ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$4</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.sendResponse (60 samples, 5.44%)</title>
            <rect x="25.0" y="243.0" width="64.2" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="28.0" y="254.0">one/nio..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.writeResponse (60 samples, 5.44%)</title>
            <rect x="25.0" y="227.0" width="64.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="28.0" y="238.0">one/nio..</text>
        </g>
        <g>
            <title>one/nio/http/Response.toBytes (23 samples, 2.09%)</title>
            <rect x="25.0" y="211.0" width="24.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="28.0" y="222.0">o..</text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (23 samples, 2.09%)</title>
            <rect x="25.0" y="195.0" width="24.6" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="28.0" y="206.0">o..</text>
        </g>
        <g>
            <title>byte[] (23 samples, 2.09%)</title>
            <rect x="25.0" y="179.0" width="24.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
            <text x="28.0" y="190.0">b..</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (37 samples, 3.36%)</title>
            <rect x="49.6" y="211.0" width="39.6" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="52.6" y="222.0">one..</text>
        </g>
        <g>
            <title>one.nio.net.Session$ArrayQueueItem (17 samples, 1.54%)</title>
            <rect x="49.6" y="195.0" width="18.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
            <text x="52.6" y="206.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.write (20 samples, 1.81%)</title>
            <rect x="67.8" y="195.0" width="21.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="70.8" y="206.0">o..</text>
        </g>
        <g>
            <title>one/nio/net/Session$ArrayQueueItem.write (20 samples, 1.81%)</title>
            <rect x="67.8" y="179.0" width="21.4" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="70.8" y="190.0">o..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.write (20 samples, 1.81%)</title>
            <rect x="67.8" y="163.0" width="21.4" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="70.8" y="174.0">o..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (20 samples, 1.81%)</title>
            <rect x="67.8" y="147.0" width="21.4" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="70.8" y="158.0">j..</text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (20 samples, 1.81%)</title>
            <rect x="67.8" y="131.0" width="21.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
            <text x="70.8" y="142.0">j..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$65/1136778337.act (273 samples, 24.77%)</title>
            <rect x="89.2" y="243.0" width="292.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="92.2" y="254.0">ru/mail/polis/service/rubtsov/MyService..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$0 (273 samples, 24.77%)</title>
            <rect x="89.2" y="227.0" width="292.4" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="92.2" y="238.0">ru/mail/polis/service/rubtsov/MyService..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.proxy (273 samples, 24.77%)</title>
            <rect x="89.2" y="211.0" width="292.4" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="92.2" y="222.0">ru/mail/polis/service/rubtsov/MyService..</text>
        </g>
        <g>
            <title>one/nio/http/HttpClient.invoke (273 samples, 24.77%)</title>
            <rect x="89.2" y="195.0" width="292.4" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="92.2" y="206.0">one/nio/http/HttpClient.invoke</text>
        </g>
        <g>
            <title>one/nio/http/HttpClient.invoke (273 samples, 24.77%)</title>
            <rect x="89.2" y="179.0" width="292.4" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="92.2" y="190.0">one/nio/http/HttpClient.invoke</text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (260 samples, 23.59%)</title>
            <rect x="89.2" y="163.0" width="278.4" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="92.2" y="174.0">one/nio/http/HttpClient$ResponseReade..</text>
        </g>
        <g>
            <title>byte[] (159 samples, 14.43%)</title>
            <rect x="89.2" y="147.0" width="170.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
            <text x="92.2" y="158.0">byte[]</text>
        </g>
        <g>
            <title>byte[] (96 samples, 8.71%)</title>
            <rect x="259.5" y="147.0" width="102.8" height="15" fill="#fb9700" rx="2" ry="2"/>
            <text x="262.5" y="158.0">byte[]</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.read (5 samples, 0.45%)</title>
            <rect x="362.3" y="147.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="365.3" y="158.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (5 samples, 0.45%)</title>
            <rect x="362.3" y="131.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="365.3" y="142.0"></text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (5 samples, 0.45%)</title>
            <rect x="362.3" y="115.0" width="5.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
            <text x="365.3" y="126.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.readResponse (10 samples, 0.91%)</title>
            <rect x="367.6" y="163.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="370.6" y="174.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (1 samples, 0.09%)</title>
            <rect x="367.6" y="147.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="370.6" y="158.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title>
            <rect x="367.6" y="131.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="370.6" y="142.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (1 samples, 0.09%)</title>
            <rect x="367.6" y="115.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="370.6" y="126.0"></text>
        </g>
        <g>
            <title>byte[] (1 samples, 0.09%)</title>
            <rect x="367.6" y="99.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
            <text x="370.6" y="110.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.readLine (9 samples, 0.82%)</title>
            <rect x="368.7" y="147.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="371.7" y="158.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (9 samples, 0.82%)</title>
            <rect x="368.7" y="131.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="371.7" y="142.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (9 samples, 0.82%)</title>
            <rect x="368.7" y="115.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="371.7" y="126.0"></text>
        </g>
        <g>
            <title>char[] (7 samples, 0.64%)</title>
            <rect x="368.7" y="99.0" width="7.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
            <text x="371.7" y="110.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (2 samples, 0.18%)</title>
            <rect x="376.2" y="99.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="379.2" y="110.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (2 samples, 0.18%)</title>
            <rect x="376.2" y="83.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="379.2" y="94.0"></text>
        </g>
        <g>
            <title>java/lang/StringUTF16.compress (2 samples, 0.18%)</title>
            <rect x="376.2" y="67.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="379.2" y="78.0"></text>
        </g>
        <g>
            <title>byte[] (2 samples, 0.18%)</title>
            <rect x="376.2" y="51.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
            <text x="379.2" y="62.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.toBytes (3 samples, 0.27%)</title>
            <rect x="378.3" y="163.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="381.3" y="174.0"></text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.27%)</title>
            <rect x="378.3" y="147.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="381.3" y="158.0"></text>
        </g>
        <g>
            <title>byte[] (3 samples, 0.27%)</title>
            <rect x="378.3" y="131.0" width="3.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
            <text x="381.3" y="142.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$75/2063219083.act (257 samples, 23.32%)</title>
            <rect x="381.6" y="243.0" width="275.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="384.6" y="254.0">ru/mail/polis/service/rubtsov/MyServi..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$1 (257 samples, 23.32%)</title>
            <rect x="381.6" y="227.0" width="275.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="384.6" y="238.0">ru/mail/polis/service/rubtsov/MyServi..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.get (257 samples, 23.32%)</title>
            <rect x="381.6" y="211.0" width="275.2" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="384.6" y="222.0">ru/mail/polis/service/rubtsov/MyServi..</text>
        </g>
        <g>
            <title>byte[] (8 samples, 0.73%)</title>
            <rect x="381.6" y="195.0" width="8.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
            <text x="384.6" y="206.0"></text>
        </g>
        <g>
            <title>one.nio.http.Response (11 samples, 1.00%)</title>
            <rect x="390.1" y="195.0" width="11.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
            <text x="393.1" y="206.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.&lt;init&gt; (25 samples, 2.27%)</title>
            <rect x="401.9" y="195.0" width="26.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="404.9" y="206.0">o..</text>
        </g>
        <g>
            <title>byte[] (10 samples, 0.91%)</title>
            <rect x="401.9" y="179.0" width="10.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
            <text x="404.9" y="190.0"></text>
        </g>
        <g>
            <title>java.lang.String[] (9 samples, 0.82%)</title>
            <rect x="412.6" y="179.0" width="9.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
            <text x="415.6" y="190.0"></text>
        </g>
        <g>
            <title>java.lang.String (6 samples, 0.54%)</title>
            <rect x="422.3" y="179.0" width="6.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
            <text x="425.3" y="190.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MyDAO.get (213 samples, 19.33%)</title>
            <rect x="428.7" y="195.0" width="228.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="431.7" y="206.0">ru/mail/polis/dao/rubtsov/MyDA..</text>
        </g>
        <g>
            <title>ru/mail/polis/Record.getKey (10 samples, 0.91%)</title>
            <rect x="428.7" y="179.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="431.7" y="190.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.91%)</title>
            <rect x="428.7" y="163.0" width="10.7" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="431.7" y="174.0"></text>
        </g>
        <g>
            <title>java.nio.HeapByteBufferR (10 samples, 0.91%)</title>
            <rect x="428.7" y="147.0" width="10.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
            <text x="431.7" y="158.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/Record.getValue (8 samples, 0.73%)</title>
            <rect x="439.4" y="179.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="442.4" y="190.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.73%)</title>
            <rect x="439.4" y="163.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="442.4" y="174.0"></text>
        </g>
        <g>
            <title>java.nio.HeapByteBufferR (8 samples, 0.73%)</title>
            <rect x="439.4" y="147.0" width="8.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
            <text x="442.4" y="158.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MyDAO.iterator (195 samples, 17.70%)</title>
            <rect x="447.9" y="179.0" width="208.9" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="450.9" y="190.0">ru/mail/polis/dao/rubtsov/M..</text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators.transform (8 samples, 0.73%)</title>
            <rect x="447.9" y="163.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="450.9" y="174.0"></text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$6 (8 samples, 0.73%)</title>
            <rect x="447.9" y="147.0" width="8.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
            <text x="450.9" y="158.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MyDAO.itemIterator (187 samples, 16.97%)</title>
            <rect x="456.5" y="163.0" width="200.3" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="459.5" y="174.0">ru/mail/polis/dao/rubtsov/..</text>
        </g>
        <g>
            <title>java.util.ArrayList (13 samples, 1.18%)</title>
            <rect x="456.5" y="147.0" width="13.9" height="15" fill="#6cdada" rx="2" ry="2"/>
            <text x="459.5" y="158.0"></text>
        </g>
        <g>
            <title>java/util/ArrayList.&lt;init&gt; (7 samples, 0.64%)</title>
            <rect x="470.4" y="147.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="473.4" y="158.0"></text>
        </g>
        <g>
            <title>java.lang.Object[] (7 samples, 0.64%)</title>
            <rect x="470.4" y="131.0" width="7.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
            <text x="473.4" y="142.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.18%)</title>
            <rect x="477.9" y="147.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="480.9" y="158.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.18%)</title>
            <rect x="477.9" y="131.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="480.9" y="142.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.18%)</title>
            <rect x="477.9" y="115.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="480.9" y="126.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.get (2 samples, 0.18%)</title>
            <rect x="477.9" y="99.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="480.9" y="110.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.18%)</title>
            <rect x="477.9" y="83.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="480.9" y="94.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.09%)</title>
            <rect x="477.9" y="67.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="480.9" y="78.0"></text>
        </g>
        <g>
            <title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.09%)</title>
            <rect x="477.9" y="51.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
            <text x="480.9" y="62.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1
                samples, 0.09%)
            </title>
            <rect x="479.0" y="67.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="482.0" y="78.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1
                samples, 0.09%)
            </title>
            <rect x="479.0" y="51.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="482.0" y="62.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (1 samples, 0.09%)</title>
            <rect x="479.0" y="35.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
            <text x="482.0" y="46.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransform (60 samples, 5.44%)</title>
            <rect x="480.1" y="147.0" width="64.2" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="483.1" y="158.0">ru/mail..</text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators.filter (15 samples, 1.36%)</title>
            <rect x="480.1" y="131.0" width="16.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="483.1" y="142.0"></text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$5 (15 samples, 1.36%)</title>
            <rect x="480.1" y="115.0" width="16.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
            <text x="483.1" y="126.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators.mergeSorted (40 samples, 3.63%)</title>
            <rect x="496.1" y="131.0" width="42.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="499.1" y="142.0">com/..</text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$MergingIterator (7 samples, 0.64%)</title>
            <rect x="496.1" y="115.0" width="7.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
            <text x="499.1" y="126.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (33 samples, 2.99%)</title>
            <rect x="503.6" y="115.0" width="35.4" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="506.6" y="126.0">com..</text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$MergingIterator$1 (8 samples, 0.73%)</title>
            <rect x="503.6" y="99.0" width="8.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
            <text x="506.6" y="110.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators.peekingIterator (8 samples, 0.73%)</title>
            <rect x="512.2" y="99.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="515.2" y="110.0"></text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$PeekingImpl (8 samples, 0.73%)</title>
            <rect x="512.2" y="83.0" width="8.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
            <text x="515.2" y="94.0"></text>
        </g>
        <g>
            <title>java.util.PriorityQueue (9 samples, 0.82%)</title>
            <rect x="520.8" y="99.0" width="9.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
            <text x="523.8" y="110.0"></text>
        </g>
        <g>
            <title>java/util/PriorityQueue.&lt;init&gt; (8 samples, 0.73%)</title>
            <rect x="530.4" y="99.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="533.4" y="110.0"></text>
        </g>
        <g>
            <title>java.lang.Object[] (8 samples, 0.73%)</title>
            <rect x="530.4" y="83.0" width="8.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
            <text x="533.4" y="94.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.45%)</title>
            <rect x="539.0" y="131.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="542.0" y="142.0"></text>
        </g>
        <g>
            <title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (5 samples, 0.45%)</title>
            <rect x="539.0" y="115.0" width="5.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
            <text x="542.0" y="126.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MemTablePool.iterator (105 samples, 9.53%)</title>
            <rect x="544.3" y="147.0" width="112.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="547.3" y="158.0">ru/mail/polis/..</text>
        </g>
        <g>
            <title>java.util.ArrayList (3 samples, 0.27%)</title>
            <rect x="544.3" y="131.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
            <text x="547.3" y="142.0"></text>
        </g>
        <g>
            <title>java/util/ArrayList.&lt;init&gt; (12 samples, 1.09%)</title>
            <rect x="547.5" y="131.0" width="12.9" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="550.5" y="142.0"></text>
        </g>
        <g>
            <title>java.lang.Object[] (12 samples, 1.09%)</title>
            <rect x="547.5" y="115.0" width="12.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
            <text x="550.5" y="126.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (13 samples, 1.18%)</title>
            <rect x="560.4" y="131.0" width="13.9" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="563.4" y="142.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (13 samples, 1.18%)</title>
            <rect x="560.4" y="115.0" width="13.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
            <text x="563.4" y="126.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.09%)</title>
            <rect x="574.3" y="131.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="577.3" y="142.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.09%)</title>
            <rect x="574.3" y="115.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="577.3" y="126.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.09%)</title>
            <rect x="574.3" y="99.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="577.3" y="110.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.get (1 samples, 0.09%)</title>
            <rect x="574.3" y="83.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="577.3" y="94.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.09%)</title>
            <rect x="574.3" y="67.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="577.3" y="78.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.09%)</title>
            <rect x="574.3" y="51.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="577.3" y="62.0"></text>
        </g>
        <g>
            <title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.09%)</title>
            <rect x="574.3" y="35.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
            <text x="577.3" y="46.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransform (48 samples, 4.36%)</title>
            <rect x="575.4" y="131.0" width="51.4" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="578.4" y="142.0">ru/ma..</text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators.filter (5 samples, 0.45%)</title>
            <rect x="575.4" y="115.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="578.4" y="126.0"></text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$5 (5 samples, 0.45%)</title>
            <rect x="575.4" y="99.0" width="5.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
            <text x="578.4" y="110.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators.mergeSorted (40 samples, 3.63%)</title>
            <rect x="580.7" y="115.0" width="42.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="583.7" y="126.0">com/..</text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.27%)</title>
            <rect x="580.7" y="99.0" width="3.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
            <text x="583.7" y="110.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (37 samples, 3.36%)</title>
            <rect x="583.9" y="99.0" width="39.7" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="586.9" y="110.0">com..</text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$MergingIterator$1 (9 samples, 0.82%)</title>
            <rect x="583.9" y="83.0" width="9.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
            <text x="586.9" y="94.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.54%)</title>
            <rect x="593.6" y="83.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="596.6" y="94.0"></text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.54%)</title>
            <rect x="593.6" y="67.0" width="6.4" height="15" fill="#50bebe" rx="2" ry="2"/>
            <text x="596.6" y="78.0"></text>
        </g>
        <g>
            <title>java.util.PriorityQueue (10 samples, 0.91%)</title>
            <rect x="600.0" y="83.0" width="10.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
            <text x="603.0" y="94.0"></text>
        </g>
        <g>
            <title>java/util/PriorityQueue.&lt;init&gt; (12 samples, 1.09%)</title>
            <rect x="610.7" y="83.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="613.7" y="94.0"></text>
        </g>
        <g>
            <title>java.lang.Object[] (12 samples, 1.09%)</title>
            <rect x="610.7" y="67.0" width="12.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
            <text x="613.7" y="78.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.27%)</title>
            <rect x="623.6" y="115.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="626.6" y="126.0"></text>
        </g>
        <g>
            <title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.27%)</title>
            <rect x="623.6" y="99.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
            <text x="626.6" y="110.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MemTable.iterator (28 samples, 2.54%)</title>
            <rect x="626.8" y="131.0" width="30.0" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="629.8" y="142.0">ru..</text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (5 samples, 0.45%)</title>
            <rect x="626.8" y="115.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="629.8" y="126.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.ConcurrentSkipListMap$Values (5 samples, 0.45%)</title>
            <rect x="626.8" y="99.0" width="5.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
            <text x="629.8" y="110.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (9 samples, 0.82%)</title>
            <rect x="632.1" y="115.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="635.1" y="126.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (9 samples, 0.82%)</title>
            <rect x="632.1" y="99.0" width="9.7" height="15" fill="#6cdada" rx="2" ry="2"/>
            <text x="635.1" y="110.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 1.27%)</title>
            <rect x="641.8" y="115.0" width="15.0" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="644.8" y="126.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 1.27%)</title>
            <rect x="641.8" y="99.0" width="15.0" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="644.8" y="110.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 1.27%)</title>
            <rect x="641.8" y="83.0" width="15.0" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="644.8" y="94.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.ConcurrentSkipListMap$SubMap (14 samples, 1.27%)</title>
            <rect x="641.8" y="67.0" width="15.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
            <text x="644.8" y="78.0"></text>
        </g>
        <g>
            <title>one/nio/server/SelectorThread.run (498 samples, 45.19%)</title>
            <rect x="656.8" y="323.0" width="533.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="659.8" y="334.0">one/nio/server/SelectorThread.run</text>
        </g>
        <g>
            <title>one/nio/net/JavaSelector.select (65 samples, 5.90%)</title>
            <rect x="656.8" y="307.0" width="69.6" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="659.8" y="318.0">one/nio..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSelector.iteratorFor (30 samples, 2.72%)</title>
            <rect x="656.8" y="291.0" width="32.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="659.8" y="302.0">on..</text>
        </g>
        <g>
            <title>one.nio.net.JavaSelector$1 (14 samples, 1.27%)</title>
            <rect x="656.8" y="275.0" width="14.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
            <text x="659.8" y="286.0"></text>
        </g>
        <g>
            <title>one.nio.net.Session[] (16 samples, 1.45%)</title>
            <rect x="671.7" y="275.0" width="17.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
            <text x="674.7" y="286.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.select (35 samples, 3.18%)</title>
            <rect x="688.9" y="291.0" width="37.5" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="691.9" y="302.0">sun..</text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.lockAndDoSelect (35 samples, 3.18%)</title>
            <rect x="688.9" y="275.0" width="37.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="691.9" y="286.0">sun..</text>
        </g>
        <g>
            <title>sun/nio/ch/KQueueSelectorImpl.doSelect (35 samples, 3.18%)</title>
            <rect x="688.9" y="259.0" width="37.5" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="691.9" y="270.0">sun..</text>
        </g>
        <g>
            <title>sun/nio/ch/KQueueSelectorImpl.processEvents (35 samples, 3.18%)</title>
            <rect x="688.9" y="243.0" width="37.5" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="691.9" y="254.0">sun..</text>
        </g>
        <g>
            <title>java/lang/Integer.valueOf (15 samples, 1.36%)</title>
            <rect x="688.9" y="227.0" width="16.0" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="691.9" y="238.0"></text>
        </g>
        <g>
            <title>java.lang.Integer (15 samples, 1.36%)</title>
            <rect x="688.9" y="211.0" width="16.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
            <text x="691.9" y="222.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.processReadyEvents (20 samples, 1.81%)</title>
            <rect x="704.9" y="227.0" width="21.5" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="707.9" y="238.0">s..</text>
        </g>
        <g>
            <title>java/util/HashSet.add (20 samples, 1.81%)</title>
            <rect x="704.9" y="211.0" width="21.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="707.9" y="222.0">j..</text>
        </g>
        <g>
            <title>java/util/HashMap.put (20 samples, 1.81%)</title>
            <rect x="704.9" y="195.0" width="21.5" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="707.9" y="206.0">j..</text>
        </g>
        <g>
            <title>java/util/HashMap.putVal (20 samples, 1.81%)</title>
            <rect x="704.9" y="179.0" width="21.5" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="707.9" y="190.0">j..</text>
        </g>
        <g>
            <title>java/util/HashMap.newNode (20 samples, 1.81%)</title>
            <rect x="704.9" y="163.0" width="21.5" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="707.9" y="174.0">j..</text>
        </g>
        <g>
            <title>java.util.HashMap$Node (20 samples, 1.81%)</title>
            <rect x="704.9" y="147.0" width="21.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
            <text x="707.9" y="158.0">j..</text>
        </g>
        <g>
            <title>one/nio/net/Session.process (433 samples, 39.29%)</title>
            <rect x="726.4" y="307.0" width="463.6" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="729.4" y="318.0">one/nio/net/Session.process</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processRead (433 samples, 39.29%)</title>
            <rect x="726.4" y="291.0" width="463.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="729.4" y="302.0">one/nio/http/HttpSession.processRead</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processHttpBuffer (402 samples, 36.48%)</title>
            <rect x="726.4" y="275.0" width="430.4" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="729.4" y="286.0">one/nio/http/HttpSession.processHttpBuffer</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.handleParsedRequest (168 samples, 15.25%)</title>
            <rect x="726.4" y="259.0" width="179.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="729.4" y="270.0">one/nio/http/HttpSessio..</text>
        </g>
        <g>
            <title>one/nio/http/HttpServer.handleRequest (168 samples, 15.25%)</title>
            <rect x="726.4" y="243.0" width="179.8" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="729.4" y="254.0">one/nio/http/HttpServer..</text>
        </g>
        <g>
            <title>RequestHandler1_entity.handleRequest (132 samples, 11.98%)</title>
            <rect x="726.4" y="227.0" width="141.3" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="729.4" y="238.0">RequestHandler1_en..</text>
        </g>
        <g>
            <title>one/nio/http/Request.getParameter (39 samples, 3.54%)</title>
            <rect x="726.4" y="211.0" width="41.7" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="729.4" y="222.0">one..</text>
        </g>
        <g>
            <title>java/lang/String.substring (39 samples, 3.54%)</title>
            <rect x="726.4" y="195.0" width="41.7" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="729.4" y="206.0">jav..</text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (39 samples, 3.54%)</title>
            <rect x="726.4" y="179.0" width="41.7" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="729.4" y="190.0">jav..</text>
        </g>
        <g>
            <title>java.lang.String (20 samples, 1.81%)</title>
            <rect x="726.4" y="163.0" width="21.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
            <text x="729.4" y="174.0">j..</text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (19 samples, 1.72%)</title>
            <rect x="747.8" y="163.0" width="20.3" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="750.8" y="174.0"></text>
        </g>
        <g>
            <title>byte[] (19 samples, 1.72%)</title>
            <rect x="747.8" y="147.0" width="20.3" height="15" fill="#6cdada" rx="2" ry="2"/>
            <text x="750.8" y="158.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.entity (93 samples, 8.44%)</title>
            <rect x="768.1" y="211.0" width="99.6" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="771.1" y="222.0">ru/mail/poli..</text>
        </g>
        <g>
            <title>java/lang/String.getBytes (11 samples, 1.00%)</title>
            <rect x="768.1" y="195.0" width="11.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="771.1" y="206.0"></text>
        </g>
        <g>
            <title>java/lang/StringCoding.encode (11 samples, 1.00%)</title>
            <rect x="768.1" y="179.0" width="11.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="771.1" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/StringCoding.encodeUTF8 (11 samples, 1.00%)</title>
            <rect x="768.1" y="163.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="771.1" y="174.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOf (11 samples, 1.00%)</title>
            <rect x="768.1" y="147.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="771.1" y="158.0"></text>
        </g>
        <g>
            <title>byte[] (11 samples, 1.00%)</title>
            <rect x="768.1" y="131.0" width="11.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
            <text x="771.1" y="142.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 1.91%)</title>
            <rect x="779.9" y="195.0" width="22.5" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="782.9" y="206.0">j..</text>
        </g>
        <g>
            <title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 1.91%)</title>
            <rect x="779.9" y="179.0" width="22.5" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="782.9" y="190.0">j..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$65/1136778337.get$Lambda (5 samples, 0.45%)</title>
            <rect x="779.9" y="163.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="782.9" y="174.0"></text>
        </g>
        <g>
            <title>ru.mail.polis.service.rubtsov.MyService$$Lambda$65 (5 samples, 0.45%)</title>
            <rect x="779.9" y="147.0" width="5.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
            <text x="782.9" y="158.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$75/2063219083.get$Lambda (16 samples, 1.45%)</title>
            <rect x="785.2" y="163.0" width="17.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="788.2" y="174.0"></text>
        </g>
        <g>
            <title>ru.mail.polis.service.rubtsov.MyService$$Lambda$75 (16 samples, 1.45%)</title>
            <rect x="785.2" y="147.0" width="17.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
            <text x="788.2" y="158.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (24 samples, 2.18%)</title>
            <rect x="802.4" y="195.0" width="25.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="805.4" y="206.0">j..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (24 samples, 2.18%)</title>
            <rect x="802.4" y="179.0" width="25.7" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="805.4" y="190.0">j..</text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (24 samples, 2.18%)</title>
            <rect x="802.4" y="163.0" width="25.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
            <text x="805.4" y="174.0">j..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/ConsistentHashTopology.primaryFor (5 samples, 0.45%)</title>
            <rect x="828.1" y="195.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="831.1" y="206.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/ConsistentHashTopology.primaryFor (5 samples, 0.45%)</title>
            <rect x="828.1" y="179.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="831.1" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/Integer.valueOf (5 samples, 0.45%)</title>
            <rect x="828.1" y="163.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="831.1" y="174.0"></text>
        </g>
        <g>
            <title>java.lang.Integer (5 samples, 0.45%)</title>
            <rect x="828.1" y="147.0" width="5.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
            <text x="831.1" y="158.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.executeAsync (32 samples, 2.90%)</title>
            <rect x="833.4" y="195.0" width="34.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="836.4" y="206.0">ru..</text>
        </g>
        <g>
            <title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 1.27%)</title>
            <rect x="833.4" y="179.0" width="15.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="836.4" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 1.27%)</title>
            <rect x="833.4" y="163.0" width="15.0" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="836.4" y="174.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$69/406668019.get$Lambda (14 samples, 1.27%)</title>
            <rect x="833.4" y="147.0" width="15.0" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="836.4" y="158.0"></text>
        </g>
        <g>
            <title>ru.mail.polis.service.rubtsov.MyService$$Lambda$69 (14 samples, 1.27%)</title>
            <rect x="833.4" y="131.0" width="15.0" height="15" fill="#6cdada" rx="2" ry="2"/>
            <text x="836.4" y="142.0"></text>
        </g>
        <g>
            <title>one/nio/server/Server.asyncExecute (18 samples, 1.63%)</title>
            <rect x="848.4" y="179.0" width="19.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="851.4" y="190.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.execute (18 samples, 1.63%)</title>
            <rect x="848.4" y="163.0" width="19.3" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="851.4" y="174.0"></text>
        </g>
        <g>
            <title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (18 samples, 1.63%)</title>
            <rect x="848.4" y="147.0" width="19.3" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="851.4" y="158.0"></text>
        </g>
        <g>
            <title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (18 samples, 1.63%)</title>
            <rect x="848.4" y="131.0" width="19.3" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="851.4" y="142.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue.offer (18 samples, 1.63%)</title>
            <rect x="848.4" y="115.0" width="19.3" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="851.4" y="126.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (18 samples, 1.63%)</title>
            <rect x="848.4" y="99.0" width="19.3" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="851.4" y="110.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.snode (18 samples, 1.63%)</title>
            <rect x="848.4" y="83.0" width="19.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="851.4" y="94.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (18 samples, 1.63%)</title>
            <rect x="848.4" y="67.0" width="19.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
            <text x="851.4" y="78.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getPath (36 samples, 3.27%)</title>
            <rect x="867.7" y="227.0" width="38.5" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="870.7" y="238.0">one..</text>
        </g>
        <g>
            <title>java/lang/String.substring (36 samples, 3.27%)</title>
            <rect x="867.7" y="211.0" width="38.5" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="870.7" y="222.0">jav..</text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (36 samples, 3.27%)</title>
            <rect x="867.7" y="195.0" width="38.5" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="870.7" y="206.0">jav..</text>
        </g>
        <g>
            <title>java.lang.String (15 samples, 1.36%)</title>
            <rect x="867.7" y="179.0" width="16.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
            <text x="870.7" y="190.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (21 samples, 1.91%)</title>
            <rect x="883.8" y="179.0" width="22.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="886.8" y="190.0">j..</text>
        </g>
        <g>
            <title>byte[] (21 samples, 1.91%)</title>
            <rect x="883.8" y="163.0" width="22.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
            <text x="886.8" y="174.0">b..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.parseRequest (158 samples, 14.34%)</title>
            <rect x="906.2" y="259.0" width="169.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="909.2" y="270.0">one/nio/http/HttpSessi..</text>
        </g>
        <g>
            <title>one.nio.http.Request (28 samples, 2.54%)</title>
            <rect x="906.2" y="243.0" width="30.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
            <text x="909.2" y="254.0">on..</text>
        </g>
        <g>
            <title>one/nio/http/Request.&lt;init&gt; (45 samples, 4.08%)</title>
            <rect x="936.2" y="243.0" width="48.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="939.2" y="254.0">one/..</text>
        </g>
        <g>
            <title>java.lang.String[] (45 samples, 4.08%)</title>
            <rect x="936.2" y="227.0" width="48.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
            <text x="939.2" y="238.0">java..</text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (85 samples, 7.71%)</title>
            <rect x="984.4" y="243.0" width="91.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="987.4" y="254.0">one/nio/uti..</text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (85 samples, 7.71%)</title>
            <rect x="984.4" y="227.0" width="91.0" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="987.4" y="238.0">one/nio/uti..</text>
        </g>
        <g>
            <title>char[] (41 samples, 3.72%)</title>
            <rect x="984.4" y="211.0" width="43.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
            <text x="987.4" y="222.0">char[]</text>
        </g>
        <g>
            <title>java.lang.String (17 samples, 1.54%)</title>
            <rect x="1028.3" y="211.0" width="18.2" height="15" fill="#50bebe" rx="2" ry="2"/>
            <text x="1031.3" y="222.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (27 samples, 2.45%)</title>
            <rect x="1046.5" y="211.0" width="28.9" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="1049.5" y="222.0">ja..</text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (27 samples, 2.45%)</title>
            <rect x="1046.5" y="195.0" width="28.9" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="1049.5" y="206.0">ja..</text>
        </g>
        <g>
            <title>java/lang/StringUTF16.compress (27 samples, 2.45%)</title>
            <rect x="1046.5" y="179.0" width="28.9" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="1049.5" y="190.0">ja..</text>
        </g>
        <g>
            <title>byte[] (27 samples, 2.45%)</title>
            <rect x="1046.5" y="163.0" width="28.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
            <text x="1049.5" y="174.0">by..</text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (76 samples, 6.90%)</title>
            <rect x="1075.4" y="259.0" width="81.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="1078.4" y="270.0">one/nio/u..</text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (76 samples, 6.90%)</title>
            <rect x="1075.4" y="243.0" width="81.4" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="1078.4" y="254.0">one/nio/u..</text>
        </g>
        <g>
            <title>char[] (35 samples, 3.18%)</title>
            <rect x="1075.4" y="227.0" width="37.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
            <text x="1078.4" y="238.0">cha..</text>
        </g>
        <g>
            <title>java.lang.String (13 samples, 1.18%)</title>
            <rect x="1112.9" y="227.0" width="13.9" height="15" fill="#50bebe" rx="2" ry="2"/>
            <text x="1115.9" y="238.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (28 samples, 2.54%)</title>
            <rect x="1126.8" y="227.0" width="30.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="1129.8" y="238.0">ja..</text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (28 samples, 2.54%)</title>
            <rect x="1126.8" y="211.0" width="30.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="1129.8" y="222.0">ja..</text>
        </g>
        <g>
            <title>java/lang/StringUTF16.compress (28 samples, 2.54%)</title>
            <rect x="1126.8" y="195.0" width="30.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="1129.8" y="206.0">ja..</text>
        </g>
        <g>
            <title>byte[] (28 samples, 2.54%)</title>
            <rect x="1126.8" y="179.0" width="30.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
            <text x="1129.8" y="190.0">by..</text>
        </g>
        <g>
            <title>one/nio/net/Session.read (31 samples, 2.81%)</title>
            <rect x="1156.8" y="275.0" width="33.2" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="1159.8" y="286.0">on..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.read (31 samples, 2.81%)</title>
            <rect x="1156.8" y="259.0" width="33.2" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="1159.8" y="270.0">on..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (31 samples, 2.81%)</title>
            <rect x="1156.8" y="243.0" width="33.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="1159.8" y="254.0">ja..</text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (31 samples, 2.81%)</title>
            <rect x="1156.8" y="227.0" width="33.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
            <text x="1159.8" y="238.0">ja..</text>
        </g>
    </g>
</svg>
