<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390"
     xmlns="http://www.w3.org/2000/svg">
    <style type="text/css">
        text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
        #search { opacity:0.1; cursor:pointer; }
        #search:hover, #search.show { opacity:1; }
        #subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
        #title { text-anchor:middle; font-size:17px}
        #unzoom { cursor:pointer; }
        #frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
        .hide { display:none; }
        .parent { opacity:0.5; }
    </style>
    <script type="text/ecmascript">
        <![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
    </script>
    <rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
    <text id="title" x="600" y="24">Flame Graph</text>
    <text id="details" x="10" y="373"></text>
    <text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
    <text id="search" x="1090" y="24">Search</text>
    <text id="matched" x="1090" y="373"></text>
    <g id="frames">
        <g>
            <title>all (9,007 samples, 100.00%)</title>
            <rect x="10.0" y="339.0" width="1180.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
            <text x="13.0" y="350.0">all</text>
        </g>
        <g>
            <title>java/lang/Thread.run (5,317 samples, 59.03%)</title>
            <rect x="10.1" y="323.0" width="696.6" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="13.1" y="334.0">java/lang/Thread.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5,317 samples, 59.03%)</title>
            <rect x="10.1" y="307.0" width="696.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="13.1" y="318.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.runWorker (5,317 samples, 59.03%)</title>
            <rect x="10.1" y="291.0" width="696.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="13.1" y="302.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.getTask (126 samples, 1.40%)</title>
            <rect x="10.1" y="275.0" width="16.5" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="13.1" y="286.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.take (126 samples, 1.40%)</title>
            <rect x="10.1" y="259.0" width="16.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="13.1" y="270.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (118 samples, 1.31%)
            </title>
            <rect x="10.1" y="243.0" width="15.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="13.1" y="254.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (118
                samples, 1.31%)
            </title>
            <rect x="10.1" y="227.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="13.1" y="238.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (118 samples, 1.31%)</title>
            <rect x="10.1" y="211.0" width="15.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
            <text x="13.1" y="222.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (8 samples, 0.09%)</title>
            <rect x="25.6" y="243.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="28.6" y="254.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (8 samples, 0.09%)</title>
            <rect x="25.6" y="227.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="28.6" y="238.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (8 samples, 0.09%)
            </title>
            <rect x="25.6" y="211.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="28.6" y="222.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (8 samples, 0.09%)</title>
            <rect x="25.6" y="195.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="28.6" y="206.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.09%)</title>
            <rect x="25.6" y="179.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
            <text x="28.6" y="190.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$74/1821403972.run (5,191 samples, 57.63%)</title>
            <rect x="26.6" y="275.0" width="680.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="29.6" y="286.0">ru/mail/polis/service/rubtsov/MyService$$Lambda$74/1821403972.run</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$4 (5,191 samples, 57.63%)</title>
            <rect x="26.6" y="259.0" width="680.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="29.6" y="270.0">ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$4</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.sendResponse (486 samples, 5.40%)</title>
            <rect x="26.6" y="243.0" width="63.7" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="29.6" y="254.0">one/nio..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.writeResponse (486 samples, 5.40%)</title>
            <rect x="26.6" y="227.0" width="63.7" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="29.6" y="238.0">one/nio..</text>
        </g>
        <g>
            <title>one/nio/http/Response.toBytes (248 samples, 2.75%)</title>
            <rect x="26.6" y="211.0" width="32.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="29.6" y="222.0">on..</text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (248 samples, 2.75%)</title>
            <rect x="26.6" y="195.0" width="32.5" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="29.6" y="206.0">on..</text>
        </g>
        <g>
            <title>byte[] (248 samples, 2.75%)</title>
            <rect x="26.6" y="179.0" width="32.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
            <text x="29.6" y="190.0">by..</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (238 samples, 2.64%)</title>
            <rect x="59.1" y="211.0" width="31.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="62.1" y="222.0">on..</text>
        </g>
        <g>
            <title>one.nio.net.Session$ArrayQueueItem (93 samples, 1.03%)</title>
            <rect x="59.1" y="195.0" width="12.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
            <text x="62.1" y="206.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.write (145 samples, 1.61%)</title>
            <rect x="71.3" y="195.0" width="19.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="74.3" y="206.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session$ArrayQueueItem.write (145 samples, 1.61%)</title>
            <rect x="71.3" y="179.0" width="19.0" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="74.3" y="190.0"></text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.write (145 samples, 1.61%)</title>
            <rect x="71.3" y="163.0" width="19.0" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="74.3" y="174.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (145 samples, 1.61%)</title>
            <rect x="71.3" y="147.0" width="19.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="74.3" y="158.0"></text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (145 samples, 1.61%)</title>
            <rect x="71.3" y="131.0" width="19.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
            <text x="74.3" y="142.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$71/993411733.act (2,294 samples, 25.47%)</title>
            <rect x="90.3" y="243.0" width="300.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="93.3" y="254.0">ru/mail/polis/service/rubtsov/MyService$..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$0 (2,294 samples, 25.47%)</title>
            <rect x="90.3" y="227.0" width="300.5" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="93.3" y="238.0">ru/mail/polis/service/rubtsov/MyService...</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.proxy (2,294 samples, 25.47%)</title>
            <rect x="90.3" y="211.0" width="300.5" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="93.3" y="222.0">ru/mail/polis/service/rubtsov/MyService...</text>
        </g>
        <g>
            <title>one/nio/http/HttpClient.invoke (2,294 samples, 25.47%)</title>
            <rect x="90.3" y="195.0" width="300.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="93.3" y="206.0">one/nio/http/HttpClient.invoke</text>
        </g>
        <g>
            <title>one/nio/http/HttpClient.invoke (2,294 samples, 25.47%)</title>
            <rect x="90.3" y="179.0" width="300.5" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="93.3" y="190.0">one/nio/http/HttpClient.invoke</text>
        </g>
        <g>
            <title>one.nio.http.HttpClient$ResponseReader (8 samples, 0.09%)</title>
            <rect x="90.3" y="163.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
            <text x="93.3" y="174.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,130 samples, 23.65%)</title>
            <rect x="91.4" y="163.0" width="279.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="94.4" y="174.0">one/nio/http/HttpClient$ResponseReade..</text>
        </g>
        <g>
            <title>byte[] (1,158 samples, 12.86%)</title>
            <rect x="91.4" y="147.0" width="151.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
            <text x="94.4" y="158.0">byte[]</text>
        </g>
        <g>
            <title>byte[] (921 samples, 10.23%)</title>
            <rect x="243.1" y="147.0" width="120.6" height="15" fill="#ec8800" rx="2" ry="2"/>
            <text x="246.1" y="158.0">byte[]</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.read (51 samples, 0.57%)</title>
            <rect x="363.7" y="147.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="366.7" y="158.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (51 samples, 0.57%)</title>
            <rect x="363.7" y="131.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="366.7" y="142.0"></text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (51 samples, 0.57%)</title>
            <rect x="363.7" y="115.0" width="6.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
            <text x="366.7" y="126.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.readResponse (104 samples, 1.15%)</title>
            <rect x="370.4" y="163.0" width="13.6" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="373.4" y="174.0"></text>
        </g>
        <g>
            <title>byte[] (5 samples, 0.06%)</title>
            <rect x="370.4" y="147.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
            <text x="373.4" y="158.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (9 samples, 0.10%)</title>
            <rect x="371.1" y="147.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="374.1" y="158.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (9 samples, 0.10%)</title>
            <rect x="371.1" y="131.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="374.1" y="142.0"></text>
        </g>
        <g>
            <title>java.lang.String (2 samples, 0.02%)</title>
            <rect x="371.1" y="115.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
            <text x="374.1" y="126.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (7 samples, 0.08%)</title>
            <rect x="371.3" y="115.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="374.3" y="126.0"></text>
        </g>
        <g>
            <title>byte[] (7 samples, 0.08%)</title>
            <rect x="371.3" y="99.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
            <text x="374.3" y="110.0"></text>
        </g>
        <g>
            <title>one.nio.http.Response (5 samples, 0.06%)</title>
            <rect x="372.2" y="147.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
            <text x="375.2" y="158.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.readLine (69 samples, 0.77%)</title>
            <rect x="372.9" y="147.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="375.9" y="158.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (69 samples, 0.77%)</title>
            <rect x="372.9" y="131.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="375.9" y="142.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (69 samples, 0.77%)</title>
            <rect x="372.9" y="115.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="375.9" y="126.0"></text>
        </g>
        <g>
            <title>char[] (40 samples, 0.44%)</title>
            <rect x="372.9" y="99.0" width="5.2" height="15" fill="#50bebe" rx="2" ry="2"/>
            <text x="375.9" y="110.0"></text>
        </g>
        <g>
            <title>java.lang.String (14 samples, 0.16%)</title>
            <rect x="378.1" y="99.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
            <text x="381.1" y="110.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (15 samples, 0.17%)</title>
            <rect x="380.0" y="99.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="383.0" y="110.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (15 samples, 0.17%)</title>
            <rect x="380.0" y="83.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="383.0" y="94.0"></text>
        </g>
        <g>
            <title>java/lang/StringUTF16.compress (15 samples, 0.17%)</title>
            <rect x="380.0" y="67.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="383.0" y="78.0"></text>
        </g>
        <g>
            <title>byte[] (15 samples, 0.17%)</title>
            <rect x="380.0" y="51.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
            <text x="383.0" y="62.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.08%)</title>
            <rect x="381.9" y="147.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="384.9" y="158.0"></text>
        </g>
        <g>
            <title>java.lang.String[] (7 samples, 0.08%)</title>
            <rect x="381.9" y="131.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
            <text x="384.9" y="142.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.getHeader (9 samples, 0.10%)</title>
            <rect x="382.9" y="147.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="385.9" y="158.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (9 samples, 0.10%)</title>
            <rect x="382.9" y="131.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="385.9" y="142.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (9 samples, 0.10%)</title>
            <rect x="382.9" y="115.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="385.9" y="126.0"></text>
        </g>
        <g>
            <title>java.lang.String (4 samples, 0.04%)</title>
            <rect x="382.9" y="99.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
            <text x="385.9" y="110.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (5 samples, 0.06%)</title>
            <rect x="383.4" y="99.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="386.4" y="110.0"></text>
        </g>
        <g>
            <title>byte[] (5 samples, 0.06%)</title>
            <rect x="383.4" y="83.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
            <text x="386.4" y="94.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.toBytes (23 samples, 0.26%)</title>
            <rect x="384.0" y="163.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="387.0" y="174.0"></text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (23 samples, 0.26%)</title>
            <rect x="384.0" y="147.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="387.0" y="158.0"></text>
        </g>
        <g>
            <title>byte[] (23 samples, 0.26%)</title>
            <rect x="384.0" y="131.0" width="3.0" height="15" fill="#60cece" rx="2" ry="2"/>
            <text x="387.0" y="142.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.getHeader (10 samples, 0.11%)</title>
            <rect x="387.0" y="163.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="390.0" y="174.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (10 samples, 0.11%)</title>
            <rect x="387.0" y="147.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="390.0" y="158.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (10 samples, 0.11%)</title>
            <rect x="387.0" y="131.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="390.0" y="142.0"></text>
        </g>
        <g>
            <title>java.lang.String (2 samples, 0.02%)</title>
            <rect x="387.0" y="115.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
            <text x="390.0" y="126.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (8 samples, 0.09%)</title>
            <rect x="387.3" y="115.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="390.3" y="126.0"></text>
        </g>
        <g>
            <title>byte[] (8 samples, 0.09%)</title>
            <rect x="387.3" y="99.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
            <text x="390.3" y="110.0"></text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.writeFully (17 samples, 0.19%)</title>
            <rect x="388.4" y="163.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="391.4" y="174.0"></text>
        </g>
        <g>
            <title>java/nio/channels/Channels$1.write (8 samples, 0.09%)</title>
            <rect x="388.4" y="147.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="391.4" y="158.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (8 samples, 0.09%)</title>
            <rect x="388.4" y="131.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="391.4" y="142.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (8 samples, 0.09%)</title>
            <rect x="388.4" y="115.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="391.4" y="126.0"></text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (8 samples, 0.09%)</title>
            <rect x="388.4" y="99.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
            <text x="391.4" y="110.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SocketAdaptor.getOutputStream (9 samples, 0.10%)</title>
            <rect x="389.4" y="147.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="392.4" y="158.0"></text>
        </g>
        <g>
            <title>java/security/AccessController.doPrivileged (8 samples, 0.09%)</title>
            <rect x="389.4" y="131.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="392.4" y="142.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SocketAdaptor$2.run (8 samples, 0.09%)</title>
            <rect x="389.4" y="115.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="392.4" y="126.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SocketAdaptor$2.run (8 samples, 0.09%)</title>
            <rect x="389.4" y="99.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="392.4" y="110.0"></text>
        </g>
        <g>
            <title>java/nio/channels/Channels.newOutputStream (8 samples, 0.09%)</title>
            <rect x="389.4" y="83.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="392.4" y="94.0"></text>
        </g>
        <g>
            <title>java.nio.channels.Channels$1 (8 samples, 0.09%)</title>
            <rect x="389.4" y="67.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
            <text x="392.4" y="78.0"></text>
        </g>
        <g>
            <title>one/nio/pool/Pool.returnObject (2 samples, 0.02%)</title>
            <rect x="390.6" y="163.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="393.6" y="174.0"></text>
        </g>
        <g>
            <title>java/util/LinkedList.addFirst (2 samples, 0.02%)</title>
            <rect x="390.6" y="147.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="393.6" y="158.0"></text>
        </g>
        <g>
            <title>java/util/LinkedList.linkFirst (2 samples, 0.02%)</title>
            <rect x="390.6" y="131.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="393.6" y="142.0"></text>
        </g>
        <g>
            <title>java.util.LinkedList$Node (2 samples, 0.02%)</title>
            <rect x="390.6" y="115.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
            <text x="393.6" y="126.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$80/897481377.act (2,411 samples, 26.77%)</title>
            <rect x="390.8" y="243.0" width="315.9" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="393.8" y="254.0">ru/mail/polis/service/rubtsov/MyService$$La..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$1 (2,411 samples, 26.77%)</title>
            <rect x="390.8" y="227.0" width="315.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="393.8" y="238.0">ru/mail/polis/service/rubtsov/MyService.lam..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.get (2,411 samples, 26.77%)</title>
            <rect x="390.8" y="211.0" width="315.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="393.8" y="222.0">ru/mail/polis/service/rubtsov/MyService.get</text>
        </g>
        <g>
            <title>byte[] (71 samples, 0.79%)</title>
            <rect x="390.8" y="195.0" width="9.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
            <text x="393.8" y="206.0"></text>
        </g>
        <g>
            <title>one.nio.http.Response (78 samples, 0.87%)</title>
            <rect x="400.1" y="195.0" width="10.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
            <text x="403.1" y="206.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.&lt;init&gt; (301 samples, 3.34%)</title>
            <rect x="410.4" y="195.0" width="39.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="413.4" y="206.0">one..</text>
        </g>
        <g>
            <title>byte[] (119 samples, 1.32%)</title>
            <rect x="410.4" y="179.0" width="15.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
            <text x="413.4" y="190.0"></text>
        </g>
        <g>
            <title>java.lang.String[] (104 samples, 1.15%)</title>
            <rect x="426.0" y="179.0" width="13.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
            <text x="429.0" y="190.0"></text>
        </g>
        <g>
            <title>java.lang.String (78 samples, 0.87%)</title>
            <rect x="439.6" y="179.0" width="10.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
            <text x="442.6" y="190.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MyDAO.get (1,961 samples, 21.77%)</title>
            <rect x="449.8" y="195.0" width="256.9" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="452.8" y="206.0">ru/mail/polis/dao/rubtsov/MyDAO.get</text>
        </g>
        <g>
            <title>ru/mail/polis/Record.getKey (156 samples, 1.73%)</title>
            <rect x="449.8" y="179.0" width="20.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="452.8" y="190.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.asReadOnlyBuffer (156 samples, 1.73%)</title>
            <rect x="449.8" y="163.0" width="20.4" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="452.8" y="174.0"></text>
        </g>
        <g>
            <title>java.nio.HeapByteBufferR (156 samples, 1.73%)</title>
            <rect x="449.8" y="147.0" width="20.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
            <text x="452.8" y="158.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/Record.getValue (128 samples, 1.42%)</title>
            <rect x="470.2" y="179.0" width="16.8" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="473.2" y="190.0"></text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.asReadOnlyBuffer (128 samples, 1.42%)</title>
            <rect x="470.2" y="163.0" width="16.8" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="473.2" y="174.0"></text>
        </g>
        <g>
            <title>java.nio.HeapByteBufferR (128 samples, 1.42%)</title>
            <rect x="470.2" y="147.0" width="16.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
            <text x="473.2" y="158.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MyDAO.iterator (1,677 samples, 18.62%)</title>
            <rect x="487.0" y="179.0" width="219.7" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="490.0" y="190.0">ru/mail/polis/dao/rubtsov/MyD..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MyDAO.itemIterator (1,677 samples, 18.62%)</title>
            <rect x="487.0" y="163.0" width="219.7" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="490.0" y="174.0">ru/mail/polis/dao/rubtsov/MyD..</text>
        </g>
        <g>
            <title>java.util.ArrayList (109 samples, 1.21%)</title>
            <rect x="487.0" y="147.0" width="14.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
            <text x="490.0" y="158.0"></text>
        </g>
        <g>
            <title>java/util/ArrayList.&lt;init&gt; (73 samples, 0.81%)</title>
            <rect x="501.3" y="147.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="504.3" y="158.0"></text>
        </g>
        <g>
            <title>java.lang.Object[] (73 samples, 0.81%)</title>
            <rect x="501.3" y="131.0" width="9.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
            <text x="504.3" y="142.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (19 samples, 0.21%)</title>
            <rect x="510.8" y="147.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="513.8" y="158.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (19 samples, 0.21%)</title>
            <rect x="510.8" y="131.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="513.8" y="142.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (19 samples, 0.21%)</title>
            <rect x="510.8" y="115.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="513.8" y="126.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.get (14 samples, 0.16%)</title>
            <rect x="510.8" y="99.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="513.8" y="110.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.setInitialValue (14 samples, 0.16%)</title>
            <rect x="510.8" y="83.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="513.8" y="94.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (14
                samples, 0.16%)
            </title>
            <rect x="510.8" y="67.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="513.8" y="78.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (14
                samples, 0.16%)
            </title>
            <rect x="510.8" y="51.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="513.8" y="62.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (14 samples, 0.16%)</title>
            <rect x="510.8" y="35.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
            <text x="513.8" y="46.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.set (5 samples, 0.06%)</title>
            <rect x="512.7" y="99.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="515.7" y="110.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal$ThreadLocalMap.set (5 samples, 0.06%)</title>
            <rect x="512.7" y="83.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="515.7" y="94.0"></text>
        </g>
        <g>
            <title>java.lang.ThreadLocal$ThreadLocalMap$Entry (5 samples, 0.06%)</title>
            <rect x="512.7" y="67.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
            <text x="515.7" y="78.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransform (482 samples, 5.35%)</title>
            <rect x="513.3" y="147.0" width="63.2" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="516.3" y="158.0">ru/mail..</text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators.filter (76 samples, 0.84%)</title>
            <rect x="513.3" y="131.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="516.3" y="142.0"></text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$5 (76 samples, 0.84%)</title>
            <rect x="513.3" y="115.0" width="10.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
            <text x="516.3" y="126.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators.mergeSorted (352 samples, 3.91%)</title>
            <rect x="523.3" y="131.0" width="46.1" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="526.3" y="142.0">com/..</text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$MergingIterator (44 samples, 0.49%)</title>
            <rect x="523.3" y="115.0" width="5.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
            <text x="526.3" y="126.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (308 samples, 3.42%)</title>
            <rect x="529.1" y="115.0" width="40.3" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="532.1" y="126.0">com..</text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$MergingIterator$1 (72 samples, 0.80%)</title>
            <rect x="529.1" y="99.0" width="9.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
            <text x="532.1" y="110.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators.peekingIterator (66 samples, 0.73%)</title>
            <rect x="538.5" y="99.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="541.5" y="110.0"></text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$PeekingImpl (66 samples, 0.73%)</title>
            <rect x="538.5" y="83.0" width="8.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
            <text x="541.5" y="94.0"></text>
        </g>
        <g>
            <title>java.util.PriorityQueue (97 samples, 1.08%)</title>
            <rect x="547.1" y="99.0" width="12.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
            <text x="550.1" y="110.0"></text>
        </g>
        <g>
            <title>java/util/PriorityQueue.&lt;init&gt; (73 samples, 0.81%)</title>
            <rect x="559.8" y="99.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="562.8" y="110.0"></text>
        </g>
        <g>
            <title>java.lang.Object[] (73 samples, 0.81%)</title>
            <rect x="559.8" y="83.0" width="9.6" height="15" fill="#50bebe" rx="2" ry="2"/>
            <text x="562.8" y="94.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/Iters.collapseEquals (54 samples, 0.60%)</title>
            <rect x="569.4" y="131.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="572.4" y="142.0"></text>
        </g>
        <g>
            <title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (54 samples, 0.60%)</title>
            <rect x="569.4" y="115.0" width="7.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
            <text x="572.4" y="126.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MemTablePool.iterator (994 samples, 11.04%)</title>
            <rect x="576.5" y="147.0" width="130.2" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="579.5" y="158.0">ru/mail/polis/da..</text>
        </g>
        <g>
            <title>java.util.ArrayList (58 samples, 0.64%)</title>
            <rect x="576.5" y="131.0" width="7.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
            <text x="579.5" y="142.0"></text>
        </g>
        <g>
            <title>java/util/ArrayList.&lt;init&gt; (66 samples, 0.73%)</title>
            <rect x="584.1" y="131.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="587.1" y="142.0"></text>
        </g>
        <g>
            <title>java.lang.Object[] (66 samples, 0.73%)</title>
            <rect x="584.1" y="115.0" width="8.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
            <text x="587.1" y="126.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (98 samples, 1.09%)</title>
            <rect x="592.7" y="131.0" width="12.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="595.7" y="142.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.ConcurrentSkipListMap$ValueIterator (98 samples, 1.09%)</title>
            <rect x="592.7" y="115.0" width="12.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
            <text x="595.7" y="126.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (5 samples, 0.06%)</title>
            <rect x="605.6" y="131.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="608.6" y="142.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (5 samples, 0.06%)</title>
            <rect x="605.6" y="115.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="608.6" y="126.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (5 samples, 0.06%)</title>
            <rect x="605.6" y="99.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="608.6" y="110.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.get (4 samples, 0.04%)</title>
            <rect x="605.6" y="83.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="608.6" y="94.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.04%)</title>
            <rect x="605.6" y="67.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="608.6" y="78.0"></text>
        </g>
        <g>
            <title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.03%)</title>
            <rect x="605.6" y="51.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="608.6" y="62.0"></text>
        </g>
        <g>
            <title>java.lang.ThreadLocal$ThreadLocalMap$Entry (3 samples, 0.03%)</title>
            <rect x="605.6" y="35.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
            <text x="608.6" y="46.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/IteratorUtils.itersTransform (486 samples, 5.40%)</title>
            <rect x="606.2" y="131.0" width="63.7" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="609.2" y="142.0">ru/mail..</text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators.filter (100 samples, 1.11%)</title>
            <rect x="606.2" y="115.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="609.2" y="126.0"></text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$5 (100 samples, 1.11%)</title>
            <rect x="606.2" y="99.0" width="13.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
            <text x="609.2" y="110.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators.mergeSorted (322 samples, 3.57%)</title>
            <rect x="619.3" y="115.0" width="42.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="622.3" y="126.0">com/..</text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$MergingIterator (36 samples, 0.40%)</title>
            <rect x="619.3" y="99.0" width="4.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
            <text x="622.3" y="110.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (286 samples, 3.18%)</title>
            <rect x="624.0" y="99.0" width="37.5" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="627.0" y="110.0">com..</text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$MergingIterator$1 (71 samples, 0.79%)</title>
            <rect x="624.0" y="83.0" width="9.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
            <text x="627.0" y="94.0"></text>
        </g>
        <g>
            <title>com/google/common/collect/Iterators.peekingIterator (56 samples, 0.62%)</title>
            <rect x="633.3" y="83.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="636.3" y="94.0"></text>
        </g>
        <g>
            <title>com.google.common.collect.Iterators$PeekingImpl (56 samples, 0.62%)</title>
            <rect x="633.3" y="67.0" width="7.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
            <text x="636.3" y="78.0"></text>
        </g>
        <g>
            <title>java.util.PriorityQueue (85 samples, 0.94%)</title>
            <rect x="640.7" y="83.0" width="11.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
            <text x="643.7" y="94.0"></text>
        </g>
        <g>
            <title>java/util/PriorityQueue.&lt;init&gt; (74 samples, 0.82%)</title>
            <rect x="651.8" y="83.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="654.8" y="94.0"></text>
        </g>
        <g>
            <title>java.lang.Object[] (74 samples, 0.82%)</title>
            <rect x="651.8" y="67.0" width="9.7" height="15" fill="#50bebe" rx="2" ry="2"/>
            <text x="654.8" y="78.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/Iters.collapseEquals (64 samples, 0.71%)</title>
            <rect x="661.5" y="115.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="664.5" y="126.0"></text>
        </g>
        <g>
            <title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (64 samples, 0.71%)</title>
            <rect x="661.5" y="99.0" width="8.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
            <text x="664.5" y="110.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MemTable.iterator (281 samples, 3.12%)</title>
            <rect x="669.9" y="131.0" width="36.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="672.9" y="142.0">ru/..</text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (50 samples, 0.56%)</title>
            <rect x="669.9" y="115.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="672.9" y="126.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.ConcurrentSkipListMap$Values (50 samples, 0.56%)</title>
            <rect x="669.9" y="99.0" width="6.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
            <text x="672.9" y="110.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (83 samples, 0.92%)</title>
            <rect x="676.4" y="115.0" width="10.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="679.4" y="126.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (83 samples, 0.92%)</title>
            <rect x="676.4" y="99.0" width="10.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
            <text x="679.4" y="110.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.tailMap (148 samples, 1.64%)</title>
            <rect x="687.3" y="115.0" width="19.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="690.3" y="126.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.tailMap (148 samples, 1.64%)</title>
            <rect x="687.3" y="99.0" width="19.4" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="690.3" y="110.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ConcurrentSkipListMap.tailMap (148 samples, 1.64%)</title>
            <rect x="687.3" y="83.0" width="19.4" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="690.3" y="94.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.ConcurrentSkipListMap$SubMap (148 samples, 1.64%)</title>
            <rect x="687.3" y="67.0" width="19.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
            <text x="690.3" y="78.0"></text>
        </g>
        <g>
            <title>one/nio/server/AcceptorThread.run (52 samples, 0.58%)</title>
            <rect x="706.7" y="323.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="709.7" y="334.0"></text>
        </g>
        <g>
            <title>one/nio/net/Socket.acceptNonBlocking (23 samples, 0.26%)</title>
            <rect x="706.7" y="307.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="709.7" y="318.0"></text>
        </g>
        <g>
            <title>one/nio/net/JavaServerSocket.accept (23 samples, 0.26%)</title>
            <rect x="706.7" y="291.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="709.7" y="302.0"></text>
        </g>
        <g>
            <title>one/nio/net/JavaServerSocket.accept (23 samples, 0.26%)</title>
            <rect x="706.7" y="275.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="709.7" y="286.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/ServerSocketChannelImpl.accept (23 samples, 0.26%)</title>
            <rect x="706.7" y="259.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="709.7" y="270.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (22 samples, 0.24%)</title>
            <rect x="706.8" y="243.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="709.8" y="254.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (21 samples, 0.23%)</title>
            <rect x="707.0" y="227.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="710.0" y="238.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.locks.ReentrantLock$NonfairSync (21 samples, 0.23%)</title>
            <rect x="707.0" y="211.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
            <text x="710.0" y="222.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.createSession (29 samples, 0.32%)</title>
            <rect x="709.7" y="307.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="712.7" y="318.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.createSession (29 samples, 0.32%)</title>
            <rect x="709.7" y="291.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="712.7" y="302.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/StreamSession.&lt;init&gt; (28 samples, 0.31%)</title>
            <rect x="709.9" y="275.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="712.9" y="286.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.&lt;init&gt; (28 samples, 0.31%)</title>
            <rect x="709.9" y="259.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="712.9" y="270.0"></text>
        </g>
        <g>
            <title>byte[] (23 samples, 0.26%)</title>
            <rect x="709.9" y="243.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
            <text x="712.9" y="254.0"></text>
        </g>
        <g>
            <title>byte[] (5 samples, 0.06%)</title>
            <rect x="712.9" y="243.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
            <text x="715.9" y="254.0"></text>
        </g>
        <g>
            <title>one/nio/server/SelectorThread.run (3,637 samples, 40.38%)</title>
            <rect x="713.5" y="323.0" width="476.5" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="716.5" y="334.0">one/nio/server/SelectorThread.run</text>
        </g>
        <g>
            <title>one/nio/net/JavaSelector.select (463 samples, 5.14%)</title>
            <rect x="713.5" y="307.0" width="60.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="716.5" y="318.0">one/ni..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSelector.iteratorFor (225 samples, 2.50%)</title>
            <rect x="713.5" y="291.0" width="29.5" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="716.5" y="302.0">on..</text>
        </g>
        <g>
            <title>one.nio.net.JavaSelector$1 (110 samples, 1.22%)</title>
            <rect x="713.5" y="275.0" width="14.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
            <text x="716.5" y="286.0"></text>
        </g>
        <g>
            <title>one.nio.net.Session[] (115 samples, 1.28%)</title>
            <rect x="727.9" y="275.0" width="15.1" height="15" fill="#60cece" rx="2" ry="2"/>
            <text x="730.9" y="286.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.select (238 samples, 2.64%)</title>
            <rect x="743.0" y="291.0" width="31.2" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="746.0" y="302.0">su..</text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.lockAndDoSelect (238 samples, 2.64%)</title>
            <rect x="743.0" y="275.0" width="31.2" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="746.0" y="286.0">su..</text>
        </g>
        <g>
            <title>sun/nio/ch/KQueueSelectorImpl.doSelect (238 samples, 2.64%)</title>
            <rect x="743.0" y="259.0" width="31.2" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="746.0" y="270.0">su..</text>
        </g>
        <g>
            <title>sun/nio/ch/KQueueSelectorImpl.processEvents (238 samples, 2.64%)</title>
            <rect x="743.0" y="243.0" width="31.2" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="746.0" y="254.0">su..</text>
        </g>
        <g>
            <title>java/lang/Integer.valueOf (61 samples, 0.68%)</title>
            <rect x="743.0" y="227.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="746.0" y="238.0"></text>
        </g>
        <g>
            <title>java.lang.Integer (61 samples, 0.68%)</title>
            <rect x="743.0" y="211.0" width="8.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
            <text x="746.0" y="222.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.processReadyEvents (177 samples, 1.97%)</title>
            <rect x="751.0" y="227.0" width="23.2" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="754.0" y="238.0">s..</text>
        </g>
        <g>
            <title>java/util/HashSet.add (177 samples, 1.97%)</title>
            <rect x="751.0" y="211.0" width="23.2" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="754.0" y="222.0">j..</text>
        </g>
        <g>
            <title>java/util/HashMap.put (177 samples, 1.97%)</title>
            <rect x="751.0" y="195.0" width="23.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="754.0" y="206.0">j..</text>
        </g>
        <g>
            <title>java/util/HashMap.putVal (177 samples, 1.97%)</title>
            <rect x="751.0" y="179.0" width="23.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="754.0" y="190.0">j..</text>
        </g>
        <g>
            <title>java/util/HashMap.newNode (177 samples, 1.97%)</title>
            <rect x="751.0" y="163.0" width="23.2" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="754.0" y="174.0">j..</text>
        </g>
        <g>
            <title>java.util.HashMap$Node (177 samples, 1.97%)</title>
            <rect x="751.0" y="147.0" width="23.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
            <text x="754.0" y="158.0">j..</text>
        </g>
        <g>
            <title>one/nio/net/Session.process (3,174 samples, 35.24%)</title>
            <rect x="774.2" y="307.0" width="415.8" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="777.2" y="318.0">one/nio/net/Session.process</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processRead (3,174 samples, 35.24%)</title>
            <rect x="774.2" y="291.0" width="415.8" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="777.2" y="302.0">one/nio/http/HttpSession.processRead</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processHttpBuffer (2,921 samples, 32.43%)</title>
            <rect x="774.3" y="275.0" width="382.7" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="777.3" y="286.0">one/nio/http/HttpSession.processHttpBuffer</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.handleParsedRequest (1,205 samples, 13.38%)</title>
            <rect x="774.3" y="259.0" width="157.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="777.3" y="270.0">one/nio/http/HttpSes..</text>
        </g>
        <g>
            <title>one/nio/http/HttpServer.handleRequest (1,205 samples, 13.38%)</title>
            <rect x="774.3" y="243.0" width="157.9" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="777.3" y="254.0">one/nio/http/HttpSer..</text>
        </g>
        <g>
            <title>RequestHandler1_entity.handleRequest (939 samples, 10.43%)</title>
            <rect x="774.3" y="227.0" width="123.0" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="777.3" y="238.0">RequestHandler1..</text>
        </g>
        <g>
            <title>one/nio/http/Request.getParameter (224 samples, 2.49%)</title>
            <rect x="774.3" y="211.0" width="29.4" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="777.3" y="222.0">on..</text>
        </g>
        <g>
            <title>java/lang/String.substring (224 samples, 2.49%)</title>
            <rect x="774.3" y="195.0" width="29.4" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="777.3" y="206.0">ja..</text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (224 samples, 2.49%)</title>
            <rect x="774.3" y="179.0" width="29.4" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="777.3" y="190.0">ja..</text>
        </g>
        <g>
            <title>java.lang.String (118 samples, 1.31%)</title>
            <rect x="774.3" y="163.0" width="15.5" height="15" fill="#60cece" rx="2" ry="2"/>
            <text x="777.3" y="174.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (106 samples, 1.18%)</title>
            <rect x="789.8" y="163.0" width="13.9" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="792.8" y="174.0"></text>
        </g>
        <g>
            <title>byte[] (106 samples, 1.18%)</title>
            <rect x="789.8" y="147.0" width="13.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
            <text x="792.8" y="158.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.entity (715 samples, 7.94%)</title>
            <rect x="803.7" y="211.0" width="93.6" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="806.7" y="222.0">ru/mail/pol..</text>
        </g>
        <g>
            <title>java/lang/String.getBytes (108 samples, 1.20%)</title>
            <rect x="803.7" y="195.0" width="14.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="806.7" y="206.0"></text>
        </g>
        <g>
            <title>java/lang/StringCoding.encode (108 samples, 1.20%)</title>
            <rect x="803.7" y="179.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="806.7" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/StringCoding.encodeUTF8 (108 samples, 1.20%)</title>
            <rect x="803.7" y="163.0" width="14.1" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="806.7" y="174.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOf (108 samples, 1.20%)</title>
            <rect x="803.7" y="147.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="806.7" y="158.0"></text>
        </g>
        <g>
            <title>byte[] (108 samples, 1.20%)</title>
            <rect x="803.7" y="131.0" width="14.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
            <text x="806.7" y="142.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (113 samples, 1.25%)</title>
            <rect x="817.8" y="195.0" width="14.8" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="820.8" y="206.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (113 samples, 1.25%)</title>
            <rect x="817.8" y="179.0" width="14.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="820.8" y="190.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$71/993411733.get$Lambda (34 samples, 0.38%)</title>
            <rect x="817.8" y="163.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="820.8" y="174.0"></text>
        </g>
        <g>
            <title>ru.mail.polis.service.rubtsov.MyService$$Lambda$71 (34 samples, 0.38%)</title>
            <rect x="817.8" y="147.0" width="4.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
            <text x="820.8" y="158.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$80/897481377.get$Lambda (79 samples, 0.88%)</title>
            <rect x="822.3" y="163.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="825.3" y="174.0"></text>
        </g>
        <g>
            <title>ru.mail.polis.service.rubtsov.MyService$$Lambda$80 (79 samples, 0.88%)</title>
            <rect x="822.3" y="147.0" width="10.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
            <text x="825.3" y="158.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (228 samples, 2.53%)</title>
            <rect x="832.6" y="195.0" width="29.9" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="835.6" y="206.0">ja..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (228 samples, 2.53%)</title>
            <rect x="832.6" y="179.0" width="29.9" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="835.6" y="190.0">ja..</text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (228 samples, 2.53%)</title>
            <rect x="832.6" y="163.0" width="29.9" height="15" fill="#6cdada" rx="2" ry="2"/>
            <text x="835.6" y="174.0">ja..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.executeAsync (266 samples, 2.95%)</title>
            <rect x="862.5" y="195.0" width="34.8" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="865.5" y="206.0">ru..</text>
        </g>
        <g>
            <title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (145 samples, 1.61%)</title>
            <rect x="862.5" y="179.0" width="19.0" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="865.5" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (145 samples, 1.61%)</title>
            <rect x="862.5" y="163.0" width="19.0" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="865.5" y="174.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$74/1821403972.get$Lambda (145 samples, 1.61%)</title>
            <rect x="862.5" y="147.0" width="19.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="865.5" y="158.0"></text>
        </g>
        <g>
            <title>ru.mail.polis.service.rubtsov.MyService$$Lambda$74 (145 samples, 1.61%)</title>
            <rect x="862.5" y="131.0" width="19.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
            <text x="865.5" y="142.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.execute (121 samples, 1.34%)</title>
            <rect x="881.5" y="179.0" width="15.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="884.5" y="190.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/LinkedBlockingQueue.offer (121 samples, 1.34%)</title>
            <rect x="881.5" y="163.0" width="15.8" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="884.5" y="174.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.LinkedBlockingQueue$Node (119 samples, 1.32%)</title>
            <rect x="881.5" y="147.0" width="15.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
            <text x="884.5" y="158.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.02%)</title>
            <rect x="897.1" y="147.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="900.1" y="158.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.02%)</title>
            <rect x="897.1" y="131.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="900.1" y="142.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.02%)</title>
            <rect x="897.1" y="115.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="900.1" y="126.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.02%)</title>
            <rect x="897.1" y="99.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
            <text x="900.1" y="110.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getPath (266 samples, 2.95%)</title>
            <rect x="897.3" y="227.0" width="34.9" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="900.3" y="238.0">on..</text>
        </g>
        <g>
            <title>java/lang/String.substring (266 samples, 2.95%)</title>
            <rect x="897.3" y="211.0" width="34.9" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="900.3" y="222.0">ja..</text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (266 samples, 2.95%)</title>
            <rect x="897.3" y="195.0" width="34.9" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="900.3" y="206.0">ja..</text>
        </g>
        <g>
            <title>java.lang.String (135 samples, 1.50%)</title>
            <rect x="897.3" y="179.0" width="17.7" height="15" fill="#60cece" rx="2" ry="2"/>
            <text x="900.3" y="190.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (131 samples, 1.45%)</title>
            <rect x="915.0" y="179.0" width="17.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="918.0" y="190.0"></text>
        </g>
        <g>
            <title>byte[] (131 samples, 1.45%)</title>
            <rect x="915.0" y="163.0" width="17.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
            <text x="918.0" y="174.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.parseRequest (1,170 samples, 12.99%)</title>
            <rect x="932.2" y="259.0" width="153.3" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="935.2" y="270.0">one/nio/http/HttpSe..</text>
        </g>
        <g>
            <title>one.nio.http.Request (185 samples, 2.05%)</title>
            <rect x="932.2" y="243.0" width="24.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
            <text x="935.2" y="254.0">o..</text>
        </g>
        <g>
            <title>one/nio/http/Request.&lt;init&gt; (357 samples, 3.96%)</title>
            <rect x="956.4" y="243.0" width="46.8" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="959.4" y="254.0">one/..</text>
        </g>
        <g>
            <title>java.lang.String[] (357 samples, 3.96%)</title>
            <rect x="956.4" y="227.0" width="46.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
            <text x="959.4" y="238.0">java..</text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (628 samples, 6.97%)</title>
            <rect x="1003.2" y="243.0" width="82.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="1006.2" y="254.0">one/nio/u..</text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (628 samples, 6.97%)</title>
            <rect x="1003.2" y="227.0" width="82.3" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="1006.2" y="238.0">one/nio/u..</text>
        </g>
        <g>
            <title>char[] (301 samples, 3.34%)</title>
            <rect x="1003.2" y="211.0" width="39.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
            <text x="1006.2" y="222.0">cha..</text>
        </g>
        <g>
            <title>java.lang.String (119 samples, 1.32%)</title>
            <rect x="1042.6" y="211.0" width="15.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
            <text x="1045.6" y="222.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (208 samples, 2.31%)</title>
            <rect x="1058.2" y="211.0" width="27.3" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="1061.2" y="222.0">j..</text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (208 samples, 2.31%)</title>
            <rect x="1058.2" y="195.0" width="27.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="1061.2" y="206.0">j..</text>
        </g>
        <g>
            <title>java/lang/StringUTF16.compress (208 samples, 2.31%)</title>
            <rect x="1058.2" y="179.0" width="27.3" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="1061.2" y="190.0">j..</text>
        </g>
        <g>
            <title>byte[] (208 samples, 2.31%)</title>
            <rect x="1058.2" y="163.0" width="27.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
            <text x="1061.2" y="174.0">b..</text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (546 samples, 6.06%)</title>
            <rect x="1085.5" y="259.0" width="71.5" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="1088.5" y="270.0">one/nio/..</text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (546 samples, 6.06%)</title>
            <rect x="1085.5" y="243.0" width="71.5" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="1088.5" y="254.0">one/nio/..</text>
        </g>
        <g>
            <title>char[] (249 samples, 2.76%)</title>
            <rect x="1085.5" y="227.0" width="32.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
            <text x="1088.5" y="238.0">ch..</text>
        </g>
        <g>
            <title>java.lang.String (106 samples, 1.18%)</title>
            <rect x="1118.1" y="227.0" width="13.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
            <text x="1121.1" y="238.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (191 samples, 2.12%)</title>
            <rect x="1132.0" y="227.0" width="25.0" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="1135.0" y="238.0">j..</text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (191 samples, 2.12%)</title>
            <rect x="1132.0" y="211.0" width="25.0" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="1135.0" y="222.0">j..</text>
        </g>
        <g>
            <title>java/lang/StringUTF16.compress (191 samples, 2.12%)</title>
            <rect x="1132.0" y="195.0" width="25.0" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="1135.0" y="206.0">j..</text>
        </g>
        <g>
            <title>byte[] (191 samples, 2.12%)</title>
            <rect x="1132.0" y="179.0" width="25.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
            <text x="1135.0" y="190.0">b..</text>
        </g>
        <g>
            <title>one/nio/net/Session.read (252 samples, 2.80%)</title>
            <rect x="1157.0" y="275.0" width="33.0" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="1160.0" y="286.0">on..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.read (252 samples, 2.80%)</title>
            <rect x="1157.0" y="259.0" width="33.0" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="1160.0" y="270.0">on..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (246 samples, 2.73%)</title>
            <rect x="1157.0" y="243.0" width="32.2" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="1160.0" y="254.0">ja..</text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (246 samples, 2.73%)</title>
            <rect x="1157.0" y="227.0" width="32.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
            <text x="1160.0" y="238.0">ja..</text>
        </g>
        <g>
            <title>one/nio/net/SocketClosedException.&lt;init&gt; (5 samples, 0.06%)</title>
            <rect x="1189.2" y="243.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="1192.2" y="254.0"></text>
        </g>
        <g>
            <title>java/net/SocketException.&lt;init&gt; (5 samples, 0.06%)</title>
            <rect x="1189.2" y="227.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="1192.2" y="238.0"></text>
        </g>
        <g>
            <title>java/io/IOException.&lt;init&gt; (5 samples, 0.06%)</title>
            <rect x="1189.2" y="211.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="1192.2" y="222.0"></text>
        </g>
        <g>
            <title>java/lang/Exception.&lt;init&gt; (5 samples, 0.06%)</title>
            <rect x="1189.2" y="195.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="1192.2" y="206.0"></text>
        </g>
        <g>
            <title>java/lang/Throwable.&lt;init&gt; (5 samples, 0.06%)</title>
            <rect x="1189.2" y="179.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="1192.2" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/Throwable.fillInStackTrace (5 samples, 0.06%)</title>
            <rect x="1189.2" y="163.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="1192.2" y="174.0"></text>
        </g>
        <g>
            <title>java/lang/Throwable.fillInStackTrace (5 samples, 0.06%)</title>
            <rect x="1189.2" y="147.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="1192.2" y="158.0"></text>
        </g>
        <g>
            <title>java.lang.Object[] (2 samples, 0.02%)</title>
            <rect x="1189.3" y="131.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
            <text x="1192.3" y="142.0"></text>
        </g>
        <g>
            <title>long[] (2 samples, 0.02%)</title>
            <rect x="1189.6" y="131.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
            <text x="1192.6" y="142.0"></text>
        </g>
    </g>
</svg>
