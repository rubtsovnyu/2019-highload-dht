<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374"
     xmlns="http://www.w3.org/2000/svg">
    <style type="text/css">
        text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
        #search { opacity:0.1; cursor:pointer; }
        #search:hover, #search.show { opacity:1; }
        #subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
        #title { text-anchor:middle; font-size:17px}
        #unzoom { cursor:pointer; }
        #frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
        .hide { display:none; }
        .parent { opacity:0.5; }
    </style>
    <script type="text/ecmascript">
        <![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
    </script>
    <rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
    <text id="title" x="600" y="24">Flame Graph</text>
    <text id="details" x="10" y="357"></text>
    <text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
    <text id="search" x="1090" y="24">Search</text>
    <text id="matched" x="1090" y="357"></text>
    <g id="frames">
        <g>
            <title>all (937 samples, 100.00%)</title>
            <rect x="10.0" y="323.0" width="1180.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
            <text x="13.0" y="334.0">all</text>
        </g>
        <g>
            <title>[not_walkable] (1 samples, 0.11%)</title>
            <rect x="10.0" y="307.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
            <text x="13.0" y="318.0"></text>
        </g>
        <g>
            <title>java.lang.String (1 samples, 0.11%)</title>
            <rect x="10.0" y="291.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
            <text x="13.0" y="302.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.run (510 samples, 54.43%)</title>
            <rect x="11.3" y="307.0" width="642.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="14.3" y="318.0">java/lang/Thread.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.run (510 samples, 54.43%)</title>
            <rect x="11.3" y="291.0" width="642.2" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="14.3" y="302.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.runWorker (510 samples, 54.43%)</title>
            <rect x="11.3" y="275.0" width="642.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="14.3" y="286.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 1.49%)</title>
            <rect x="11.3" y="259.0" width="17.6" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="14.3" y="270.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue.take (14 samples, 1.49%)</title>
            <rect x="11.3" y="243.0" width="17.6" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="14.3" y="254.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (14 samples, 1.49%)</title>
            <rect x="11.3" y="227.0" width="17.6" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="14.3" y="238.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.snode (14 samples, 1.49%)</title>
            <rect x="11.3" y="211.0" width="17.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="14.3" y="222.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (14 samples, 1.49%)</title>
            <rect x="11.3" y="195.0" width="17.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
            <text x="14.3" y="206.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$69/406668019.run (496 samples, 52.93%)</title>
            <rect x="28.9" y="259.0" width="624.6" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="31.9" y="270.0">ru/mail/polis/service/rubtsov/MyService$$Lambda$69/406668019.run</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$4 (496 samples, 52.93%)</title>
            <rect x="28.9" y="243.0" width="624.6" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="31.9" y="254.0">ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$4</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.sendResponse (105 samples, 11.21%)</title>
            <rect x="28.9" y="227.0" width="132.2" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="31.9" y="238.0">one/nio/http/Htt..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.writeResponse (105 samples, 11.21%)</title>
            <rect x="28.9" y="211.0" width="132.2" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="31.9" y="222.0">one/nio/http/Htt..</text>
        </g>
        <g>
            <title>one/nio/http/Response.toBytes (46 samples, 4.91%)</title>
            <rect x="28.9" y="195.0" width="57.9" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="31.9" y="206.0">one/ni..</text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (46 samples, 4.91%)</title>
            <rect x="28.9" y="179.0" width="57.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="31.9" y="190.0">one/ni..</text>
        </g>
        <g>
            <title>byte[] (46 samples, 4.91%)</title>
            <rect x="28.9" y="163.0" width="57.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
            <text x="31.9" y="174.0">byte[]</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (59 samples, 6.30%)</title>
            <rect x="86.8" y="195.0" width="74.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="89.8" y="206.0">one/nio/..</text>
        </g>
        <g>
            <title>one.nio.net.Session$ArrayQueueItem (25 samples, 2.67%)</title>
            <rect x="86.8" y="179.0" width="31.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
            <text x="89.8" y="190.0">on..</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (34 samples, 3.63%)</title>
            <rect x="118.3" y="179.0" width="42.8" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="121.3" y="190.0">one/..</text>
        </g>
        <g>
            <title>one/nio/net/Session$ArrayQueueItem.write (34 samples, 3.63%)</title>
            <rect x="118.3" y="163.0" width="42.8" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="121.3" y="174.0">one/..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.write (34 samples, 3.63%)</title>
            <rect x="118.3" y="147.0" width="42.8" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="121.3" y="158.0">one/..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (34 samples, 3.63%)</title>
            <rect x="118.3" y="131.0" width="42.8" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="121.3" y="142.0">java..</text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (34 samples, 3.63%)</title>
            <rect x="118.3" y="115.0" width="42.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
            <text x="121.3" y="126.0">java..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$65/1136778337.act (206 samples, 21.99%)</title>
            <rect x="161.1" y="227.0" width="259.4" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="164.1" y="238.0">ru/mail/polis/service/rubtsov/MySer..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$0 (206 samples, 21.99%)</title>
            <rect x="161.1" y="211.0" width="259.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="164.1" y="222.0">ru/mail/polis/service/rubtsov/MySer..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.proxy (206 samples, 21.99%)</title>
            <rect x="161.1" y="195.0" width="259.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="164.1" y="206.0">ru/mail/polis/service/rubtsov/MySer..</text>
        </g>
        <g>
            <title>one/nio/http/HttpClient.invoke (206 samples, 21.99%)</title>
            <rect x="161.1" y="179.0" width="259.4" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="164.1" y="190.0">one/nio/http/HttpClient.invoke</text>
        </g>
        <g>
            <title>one/nio/http/HttpClient.invoke (206 samples, 21.99%)</title>
            <rect x="161.1" y="163.0" width="259.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="164.1" y="174.0">one/nio/http/HttpClient.invoke</text>
        </g>
        <g>
            <title>one.nio.http.HttpClient$ResponseReader (2 samples, 0.21%)</title>
            <rect x="161.1" y="147.0" width="2.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
            <text x="164.1" y="158.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (189 samples, 20.17%)</title>
            <rect x="163.6" y="147.0" width="238.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="166.6" y="158.0">one/nio/http/HttpClient$Response..</text>
        </g>
        <g>
            <title>byte[] (122 samples, 13.02%)</title>
            <rect x="163.6" y="131.0" width="153.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
            <text x="166.6" y="142.0">byte[]</text>
        </g>
        <g>
            <title>byte[] (62 samples, 6.62%)</title>
            <rect x="317.3" y="131.0" width="78.1" height="15" fill="#f69200" rx="2" ry="2"/>
            <text x="320.3" y="142.0">byte[]</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.read (5 samples, 0.53%)</title>
            <rect x="395.4" y="131.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="398.4" y="142.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (5 samples, 0.53%)</title>
            <rect x="395.4" y="115.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="398.4" y="126.0"></text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (5 samples, 0.53%)</title>
            <rect x="395.4" y="99.0" width="6.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
            <text x="398.4" y="110.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.readResponse (10 samples, 1.07%)</title>
            <rect x="401.7" y="147.0" width="12.5" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="404.7" y="158.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (1 samples, 0.11%)</title>
            <rect x="401.7" y="131.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="404.7" y="142.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (1 samples, 0.11%)</title>
            <rect x="401.7" y="115.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="404.7" y="126.0"></text>
        </g>
        <g>
            <title>java.lang.String (1 samples, 0.11%)</title>
            <rect x="401.7" y="99.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
            <text x="404.7" y="110.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.readLine (8 samples, 0.85%)</title>
            <rect x="402.9" y="131.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="405.9" y="142.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (8 samples, 0.85%)</title>
            <rect x="402.9" y="115.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="405.9" y="126.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (8 samples, 0.85%)</title>
            <rect x="402.9" y="99.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="405.9" y="110.0"></text>
        </g>
        <g>
            <title>char[] (4 samples, 0.43%)</title>
            <rect x="402.9" y="83.0" width="5.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
            <text x="405.9" y="94.0"></text>
        </g>
        <g>
            <title>java.lang.String (2 samples, 0.21%)</title>
            <rect x="408.0" y="83.0" width="2.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
            <text x="411.0" y="94.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (2 samples, 0.21%)</title>
            <rect x="410.5" y="83.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="413.5" y="94.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (2 samples, 0.21%)</title>
            <rect x="410.5" y="67.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="413.5" y="78.0"></text>
        </g>
        <g>
            <title>java/lang/StringUTF16.compress (2 samples, 0.21%)</title>
            <rect x="410.5" y="51.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="413.5" y="62.0"></text>
        </g>
        <g>
            <title>byte[] (2 samples, 0.21%)</title>
            <rect x="410.5" y="35.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
            <text x="413.5" y="46.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.getHeader (1 samples, 0.11%)</title>
            <rect x="413.0" y="131.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="416.0" y="142.0"></text>
        </g>
        <g>
            <title>java/lang/String.substring (1 samples, 0.11%)</title>
            <rect x="413.0" y="115.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="416.0" y="126.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (1 samples, 0.11%)</title>
            <rect x="413.0" y="99.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="416.0" y="110.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (1 samples, 0.11%)</title>
            <rect x="413.0" y="83.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="416.0" y="94.0"></text>
        </g>
        <g>
            <title>byte[] (1 samples, 0.11%)</title>
            <rect x="413.0" y="67.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
            <text x="416.0" y="78.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.toBytes (2 samples, 0.21%)</title>
            <rect x="414.2" y="147.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="417.2" y="158.0"></text>
        </g>
        <g>
            <title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.21%)</title>
            <rect x="414.2" y="131.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="417.2" y="142.0"></text>
        </g>
        <g>
            <title>byte[] (2 samples, 0.21%)</title>
            <rect x="414.2" y="115.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
            <text x="417.2" y="126.0"></text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.writeFully (2 samples, 0.21%)</title>
            <rect x="416.8" y="147.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="419.8" y="158.0"></text>
        </g>
        <g>
            <title>java/nio/channels/Channels$1.write (2 samples, 0.21%)</title>
            <rect x="416.8" y="131.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="419.8" y="142.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (2 samples, 0.21%)</title>
            <rect x="416.8" y="115.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="419.8" y="126.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (2 samples, 0.21%)</title>
            <rect x="416.8" y="99.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="419.8" y="110.0"></text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (2 samples, 0.21%)</title>
            <rect x="416.8" y="83.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
            <text x="419.8" y="94.0"></text>
        </g>
        <g>
            <title>one/nio/pool/Pool.returnObject (1 samples, 0.11%)</title>
            <rect x="419.3" y="147.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="422.3" y="158.0"></text>
        </g>
        <g>
            <title>java/util/LinkedList.addFirst (1 samples, 0.11%)</title>
            <rect x="419.3" y="131.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="422.3" y="142.0"></text>
        </g>
        <g>
            <title>java/util/LinkedList.linkFirst (1 samples, 0.11%)</title>
            <rect x="419.3" y="115.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="422.3" y="126.0"></text>
        </g>
        <g>
            <title>java.util.LinkedList$Node (1 samples, 0.11%)</title>
            <rect x="419.3" y="99.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
            <text x="422.3" y="110.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$66/694045435.act (185 samples, 19.74%)</title>
            <rect x="420.5" y="227.0" width="233.0" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="423.5" y="238.0">ru/mail/polis/service/rubtsov/M..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$2 (185 samples, 19.74%)</title>
            <rect x="420.5" y="211.0" width="233.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="423.5" y="222.0">ru/mail/polis/service/rubtsov/M..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.upsert (185 samples, 19.74%)</title>
            <rect x="420.5" y="195.0" width="233.0" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="423.5" y="206.0">ru/mail/polis/service/rubtsov/M..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (27 samples, 2.88%)</title>
            <rect x="420.5" y="179.0" width="34.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="423.5" y="190.0">ja..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (27 samples, 2.88%)</title>
            <rect x="420.5" y="163.0" width="34.0" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="423.5" y="174.0">ja..</text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (27 samples, 2.88%)</title>
            <rect x="420.5" y="147.0" width="34.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
            <text x="423.5" y="158.0">ja..</text>
        </g>
        <g>
            <title>one.nio.http.Response (9 samples, 0.96%)</title>
            <rect x="454.5" y="179.0" width="11.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
            <text x="457.5" y="190.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.&lt;init&gt; (61 samples, 6.51%)</title>
            <rect x="465.9" y="179.0" width="76.8" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="468.9" y="190.0">one/nio/..</text>
        </g>
        <g>
            <title>byte[] (30 samples, 3.20%)</title>
            <rect x="465.9" y="163.0" width="37.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
            <text x="468.9" y="174.0">byt..</text>
        </g>
        <g>
            <title>java.lang.String[] (19 samples, 2.03%)</title>
            <rect x="503.7" y="163.0" width="23.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
            <text x="506.7" y="174.0">j..</text>
        </g>
        <g>
            <title>java.lang.String (12 samples, 1.28%)</title>
            <rect x="527.6" y="163.0" width="15.1" height="15" fill="#50bebe" rx="2" ry="2"/>
            <text x="530.6" y="174.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MyDAO.upsert (88 samples, 9.39%)</title>
            <rect x="542.7" y="179.0" width="110.8" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="545.7" y="190.0">ru/mail/polis..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MemTablePool.upsert (88 samples, 9.39%)</title>
            <rect x="542.7" y="163.0" width="110.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="545.7" y="174.0">ru/mail/polis..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/MemTable.upsert (88 samples, 9.39%)</title>
            <rect x="542.7" y="147.0" width="110.8" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="545.7" y="158.0">ru/mail/polis..</text>
        </g>
        <g>
            <title>ru/mail/polis/dao/rubtsov/Item.of (88 samples, 9.39%)</title>
            <rect x="542.7" y="131.0" width="110.8" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="545.7" y="142.0">ru/mail/polis..</text>
        </g>
        <g>
            <title>java/nio/HeapByteBuffer.duplicate (69 samples, 7.36%)</title>
            <rect x="542.7" y="115.0" width="86.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="545.7" y="126.0">java/nio/H..</text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (69 samples, 7.36%)</title>
            <rect x="542.7" y="99.0" width="86.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
            <text x="545.7" y="110.0">java.nio.H..</text>
        </g>
        <g>
            <title>ru.mail.polis.dao.rubtsov.Item (19 samples, 2.03%)</title>
            <rect x="629.6" y="115.0" width="23.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
            <text x="632.6" y="126.0">r..</text>
        </g>
        <g>
            <title>one/nio/server/SelectorThread.run (426 samples, 45.46%)</title>
            <rect x="653.5" y="307.0" width="536.5" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="656.5" y="318.0">one/nio/server/SelectorThread.run</text>
        </g>
        <g>
            <title>one/nio/net/JavaSelector.select (52 samples, 5.55%)</title>
            <rect x="653.5" y="291.0" width="65.5" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="656.5" y="302.0">one/nio..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSelector.iteratorFor (34 samples, 3.63%)</title>
            <rect x="653.5" y="275.0" width="42.8" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="656.5" y="286.0">one/..</text>
        </g>
        <g>
            <title>one.nio.net.JavaSelector$1 (18 samples, 1.92%)</title>
            <rect x="653.5" y="259.0" width="22.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
            <text x="656.5" y="270.0">o..</text>
        </g>
        <g>
            <title>one.nio.net.Session[] (16 samples, 1.71%)</title>
            <rect x="676.2" y="259.0" width="20.1" height="15" fill="#50bebe" rx="2" ry="2"/>
            <text x="679.2" y="270.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.select (18 samples, 1.92%)</title>
            <rect x="696.3" y="275.0" width="22.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="699.3" y="286.0">s..</text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.lockAndDoSelect (18 samples, 1.92%)</title>
            <rect x="696.3" y="259.0" width="22.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="699.3" y="270.0">s..</text>
        </g>
        <g>
            <title>sun/nio/ch/KQueueSelectorImpl.doSelect (18 samples, 1.92%)</title>
            <rect x="696.3" y="243.0" width="22.7" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="699.3" y="254.0">s..</text>
        </g>
        <g>
            <title>sun/nio/ch/KQueueSelectorImpl.processEvents (18 samples, 1.92%)</title>
            <rect x="696.3" y="227.0" width="22.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="699.3" y="238.0">s..</text>
        </g>
        <g>
            <title>java/lang/Integer.valueOf (5 samples, 0.53%)</title>
            <rect x="696.3" y="211.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="699.3" y="222.0"></text>
        </g>
        <g>
            <title>java.lang.Integer (5 samples, 0.53%)</title>
            <rect x="696.3" y="195.0" width="6.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
            <text x="699.3" y="206.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.processReadyEvents (13 samples, 1.39%)</title>
            <rect x="702.6" y="211.0" width="16.4" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="705.6" y="222.0"></text>
        </g>
        <g>
            <title>java/util/HashSet.add (13 samples, 1.39%)</title>
            <rect x="702.6" y="195.0" width="16.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="705.6" y="206.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.put (13 samples, 1.39%)</title>
            <rect x="702.6" y="179.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="705.6" y="190.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.putVal (13 samples, 1.39%)</title>
            <rect x="702.6" y="163.0" width="16.4" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="705.6" y="174.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.newNode (13 samples, 1.39%)</title>
            <rect x="702.6" y="147.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="705.6" y="158.0"></text>
        </g>
        <g>
            <title>java.util.HashMap$Node (13 samples, 1.39%)</title>
            <rect x="702.6" y="131.0" width="16.4" height="15" fill="#60cece" rx="2" ry="2"/>
            <text x="705.6" y="142.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.process (374 samples, 39.91%)</title>
            <rect x="719.0" y="291.0" width="471.0" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="722.0" y="302.0">one/nio/net/Session.process</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processRead (374 samples, 39.91%)</title>
            <rect x="719.0" y="275.0" width="471.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="722.0" y="286.0">one/nio/http/HttpSession.processRead</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processHttpBuffer (355 samples, 37.89%)</title>
            <rect x="719.0" y="259.0" width="447.1" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="722.0" y="270.0">one/nio/http/HttpSession.processHttpBuffer</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.handleParsedRequest (108 samples, 11.53%)</title>
            <rect x="719.0" y="243.0" width="136.0" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="722.0" y="254.0">one/nio/http/Http..</text>
        </g>
        <g>
            <title>one/nio/http/HttpServer.handleRequest (108 samples, 11.53%)</title>
            <rect x="719.0" y="227.0" width="136.0" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="722.0" y="238.0">one/nio/http/Http..</text>
        </g>
        <g>
            <title>RequestHandler1_entity.handleRequest (82 samples, 8.75%)</title>
            <rect x="719.0" y="211.0" width="103.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="722.0" y="222.0">RequestHandl..</text>
        </g>
        <g>
            <title>one/nio/http/Request.getParameter (17 samples, 1.81%)</title>
            <rect x="719.0" y="195.0" width="21.4" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="722.0" y="206.0">o..</text>
        </g>
        <g>
            <title>java/lang/String.substring (17 samples, 1.81%)</title>
            <rect x="719.0" y="179.0" width="21.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="722.0" y="190.0">j..</text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (17 samples, 1.81%)</title>
            <rect x="719.0" y="163.0" width="21.4" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="722.0" y="174.0">j..</text>
        </g>
        <g>
            <title>java.lang.String (11 samples, 1.17%)</title>
            <rect x="719.0" y="147.0" width="13.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
            <text x="722.0" y="158.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (6 samples, 0.64%)</title>
            <rect x="732.9" y="147.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="735.9" y="158.0"></text>
        </g>
        <g>
            <title>byte[] (6 samples, 0.64%)</title>
            <rect x="732.9" y="131.0" width="7.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
            <text x="735.9" y="142.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.entity (65 samples, 6.94%)</title>
            <rect x="740.4" y="195.0" width="81.9" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="743.4" y="206.0">ru/mail/p..</text>
        </g>
        <g>
            <title>java/lang/String.getBytes (8 samples, 0.85%)</title>
            <rect x="740.4" y="179.0" width="10.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="743.4" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/StringCoding.encode (8 samples, 0.85%)</title>
            <rect x="740.4" y="163.0" width="10.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="743.4" y="174.0"></text>
        </g>
        <g>
            <title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.85%)</title>
            <rect x="740.4" y="147.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="743.4" y="158.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOf (8 samples, 0.85%)</title>
            <rect x="740.4" y="131.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="743.4" y="142.0"></text>
        </g>
        <g>
            <title>byte[] (8 samples, 0.85%)</title>
            <rect x="740.4" y="115.0" width="10.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
            <text x="743.4" y="126.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.96%)</title>
            <rect x="750.5" y="179.0" width="11.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="753.5" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.96%)</title>
            <rect x="750.5" y="163.0" width="11.3" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="753.5" y="174.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$65/1136778337.get$Lambda (1 samples, 0.11%)</title>
            <rect x="750.5" y="147.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="753.5" y="158.0"></text>
        </g>
        <g>
            <title>ru.mail.polis.service.rubtsov.MyService$$Lambda$65 (1 samples, 0.11%)</title>
            <rect x="750.5" y="131.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
            <text x="753.5" y="142.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$66/694045435.get$Lambda (8 samples, 0.85%)</title>
            <rect x="751.8" y="147.0" width="10.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="754.8" y="158.0"></text>
        </g>
        <g>
            <title>ru.mail.polis.service.rubtsov.MyService$$Lambda$66 (8 samples, 0.85%)</title>
            <rect x="751.8" y="131.0" width="10.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
            <text x="754.8" y="142.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (22 samples, 2.35%)</title>
            <rect x="761.8" y="179.0" width="27.7" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="764.8" y="190.0">j..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (22 samples, 2.35%)</title>
            <rect x="761.8" y="163.0" width="27.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="764.8" y="174.0">j..</text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (22 samples, 2.35%)</title>
            <rect x="761.8" y="147.0" width="27.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
            <text x="764.8" y="158.0">j..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/ConsistentHashTopology.primaryFor (3 samples, 0.32%)</title>
            <rect x="789.5" y="179.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="792.5" y="190.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/ConsistentHashTopology.primaryFor (3 samples, 0.32%)</title>
            <rect x="789.5" y="163.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="792.5" y="174.0"></text>
        </g>
        <g>
            <title>java/lang/Integer.valueOf (3 samples, 0.32%)</title>
            <rect x="789.5" y="147.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="792.5" y="158.0"></text>
        </g>
        <g>
            <title>java.lang.Integer (3 samples, 0.32%)</title>
            <rect x="789.5" y="131.0" width="3.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
            <text x="792.5" y="142.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.executeAsync (23 samples, 2.45%)</title>
            <rect x="793.3" y="179.0" width="29.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="796.3" y="190.0">ru..</text>
        </g>
        <g>
            <title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 1.28%)</title>
            <rect x="793.3" y="163.0" width="15.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="796.3" y="174.0"></text>
        </g>
        <g>
            <title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 1.28%)</title>
            <rect x="793.3" y="147.0" width="15.1" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="796.3" y="158.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$69/406668019.get$Lambda (12 samples, 1.28%)</title>
            <rect x="793.3" y="131.0" width="15.1" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="796.3" y="142.0"></text>
        </g>
        <g>
            <title>ru.mail.polis.service.rubtsov.MyService$$Lambda$69 (12 samples, 1.28%)</title>
            <rect x="793.3" y="115.0" width="15.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
            <text x="796.3" y="126.0"></text>
        </g>
        <g>
            <title>one/nio/server/Server.asyncExecute (11 samples, 1.17%)</title>
            <rect x="808.4" y="163.0" width="13.9" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="811.4" y="174.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 1.17%)</title>
            <rect x="808.4" y="147.0" width="13.9" height="15" fill="#67f867" rx="2" ry="2"/>
            <text x="811.4" y="158.0"></text>
        </g>
        <g>
            <title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (11 samples, 1.17%)</title>
            <rect x="808.4" y="131.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="811.4" y="142.0"></text>
        </g>
        <g>
            <title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (11 samples, 1.17%)</title>
            <rect x="808.4" y="115.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="811.4" y="126.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue.offer (11 samples, 1.17%)</title>
            <rect x="808.4" y="99.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="811.4" y="110.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (11 samples, 1.17%)</title>
            <rect x="808.4" y="83.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="811.4" y="94.0"></text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.snode (11 samples, 1.17%)</title>
            <rect x="808.4" y="67.0" width="13.9" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="811.4" y="78.0"></text>
        </g>
        <g>
            <title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (11 samples, 1.17%)</title>
            <rect x="808.4" y="51.0" width="13.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
            <text x="811.4" y="62.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getPath (26 samples, 2.77%)</title>
            <rect x="822.3" y="211.0" width="32.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="825.3" y="222.0">on..</text>
        </g>
        <g>
            <title>java/lang/String.substring (26 samples, 2.77%)</title>
            <rect x="822.3" y="195.0" width="32.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="825.3" y="206.0">ja..</text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (26 samples, 2.77%)</title>
            <rect x="822.3" y="179.0" width="32.7" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="825.3" y="190.0">ja..</text>
        </g>
        <g>
            <title>java.lang.String (13 samples, 1.39%)</title>
            <rect x="822.3" y="163.0" width="16.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
            <text x="825.3" y="174.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (13 samples, 1.39%)</title>
            <rect x="838.6" y="163.0" width="16.4" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="841.6" y="174.0"></text>
        </g>
        <g>
            <title>byte[] (13 samples, 1.39%)</title>
            <rect x="838.6" y="147.0" width="16.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
            <text x="841.6" y="158.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.parseRequest (107 samples, 11.42%)</title>
            <rect x="855.0" y="243.0" width="134.8" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="858.0" y="254.0">one/nio/http/Http..</text>
        </g>
        <g>
            <title>one.nio.http.Request (19 samples, 2.03%)</title>
            <rect x="855.0" y="227.0" width="23.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
            <text x="858.0" y="238.0">o..</text>
        </g>
        <g>
            <title>one/nio/http/Request.&lt;init&gt; (43 samples, 4.59%)</title>
            <rect x="878.9" y="227.0" width="54.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="881.9" y="238.0">one/n..</text>
        </g>
        <g>
            <title>java.lang.String[] (43 samples, 4.59%)</title>
            <rect x="878.9" y="211.0" width="54.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
            <text x="881.9" y="222.0">java...</text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (45 samples, 4.80%)</title>
            <rect x="933.1" y="227.0" width="56.7" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="936.1" y="238.0">one/ni..</text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (45 samples, 4.80%)</title>
            <rect x="933.1" y="211.0" width="56.7" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="936.1" y="222.0">one/ni..</text>
        </g>
        <g>
            <title>char[] (25 samples, 2.67%)</title>
            <rect x="933.1" y="195.0" width="31.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
            <text x="936.1" y="206.0">ch..</text>
        </g>
        <g>
            <title>java.lang.String (11 samples, 1.17%)</title>
            <rect x="964.6" y="195.0" width="13.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
            <text x="967.6" y="206.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (9 samples, 0.96%)</title>
            <rect x="978.4" y="195.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="981.4" y="206.0"></text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (9 samples, 0.96%)</title>
            <rect x="978.4" y="179.0" width="11.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="981.4" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/StringUTF16.compress (9 samples, 0.96%)</title>
            <rect x="978.4" y="163.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="981.4" y="174.0"></text>
        </g>
        <g>
            <title>byte[] (9 samples, 0.96%)</title>
            <rect x="978.4" y="147.0" width="11.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
            <text x="981.4" y="158.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.startParsingRequestBody (16 samples, 1.71%)</title>
            <rect x="989.8" y="243.0" width="20.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="992.8" y="254.0"></text>
        </g>
        <g>
            <title>byte[] (16 samples, 1.71%)</title>
            <rect x="989.8" y="227.0" width="20.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
            <text x="992.8" y="238.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getHeader (22 samples, 2.35%)</title>
            <rect x="1009.9" y="243.0" width="27.7" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="1012.9" y="254.0">o..</text>
        </g>
        <g>
            <title>java/lang/String.substring (22 samples, 2.35%)</title>
            <rect x="1009.9" y="227.0" width="27.7" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="1012.9" y="238.0">j..</text>
        </g>
        <g>
            <title>java/lang/StringLatin1.newString (22 samples, 2.35%)</title>
            <rect x="1009.9" y="211.0" width="27.7" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="1012.9" y="222.0">j..</text>
        </g>
        <g>
            <title>java.lang.String (8 samples, 0.85%)</title>
            <rect x="1009.9" y="195.0" width="10.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
            <text x="1012.9" y="206.0"></text>
        </g>
        <g>
            <title>java/util/Arrays.copyOfRange (14 samples, 1.49%)</title>
            <rect x="1020.0" y="195.0" width="17.6" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="1023.0" y="206.0"></text>
        </g>
        <g>
            <title>byte[] (14 samples, 1.49%)</title>
            <rect x="1020.0" y="179.0" width="17.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
            <text x="1023.0" y="190.0"></text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (102 samples, 10.89%)</title>
            <rect x="1037.6" y="243.0" width="128.5" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="1040.6" y="254.0">one/nio/util/Utf..</text>
        </g>
        <g>
            <title>one/nio/util/Utf8.read (102 samples, 10.89%)</title>
            <rect x="1037.6" y="227.0" width="128.5" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="1040.6" y="238.0">one/nio/util/Utf..</text>
        </g>
        <g>
            <title>char[] (44 samples, 4.70%)</title>
            <rect x="1037.6" y="211.0" width="55.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
            <text x="1040.6" y="222.0">char[]</text>
        </g>
        <g>
            <title>java.lang.String (22 samples, 2.35%)</title>
            <rect x="1093.0" y="211.0" width="27.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
            <text x="1096.0" y="222.0">j..</text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (36 samples, 3.84%)</title>
            <rect x="1120.7" y="211.0" width="45.4" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="1123.7" y="222.0">java..</text>
        </g>
        <g>
            <title>java/lang/String.&lt;init&gt; (36 samples, 3.84%)</title>
            <rect x="1120.7" y="195.0" width="45.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="1123.7" y="206.0">java..</text>
        </g>
        <g>
            <title>java/lang/StringUTF16.compress (36 samples, 3.84%)</title>
            <rect x="1120.7" y="179.0" width="45.4" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="1123.7" y="190.0">java..</text>
        </g>
        <g>
            <title>byte[] (36 samples, 3.84%)</title>
            <rect x="1120.7" y="163.0" width="45.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
            <text x="1123.7" y="174.0">byte[]</text>
        </g>
        <g>
            <title>one/nio/net/Session.read (19 samples, 2.03%)</title>
            <rect x="1166.1" y="259.0" width="23.9" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="1169.1" y="270.0">o..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.read (19 samples, 2.03%)</title>
            <rect x="1166.1" y="243.0" width="23.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="1169.1" y="254.0">o..</text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.wrap (19 samples, 2.03%)</title>
            <rect x="1166.1" y="227.0" width="23.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="1169.1" y="238.0">j..</text>
        </g>
        <g>
            <title>java.nio.HeapByteBuffer (19 samples, 2.03%)</title>
            <rect x="1166.1" y="211.0" width="23.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
            <text x="1169.1" y="222.0">j..</text>
        </g>
    </g>
</svg>
