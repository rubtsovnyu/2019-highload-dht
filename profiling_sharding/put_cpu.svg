<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422"
     xmlns="http://www.w3.org/2000/svg">
    <style type="text/css">
        text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
        #search { opacity:0.1; cursor:pointer; }
        #search:hover, #search.show { opacity:1; }
        #subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
        #title { text-anchor:middle; font-size:17px}
        #unzoom { cursor:pointer; }
        #frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
        .hide { display:none; }
        .parent { opacity:0.5; }
    </style>
    <script type="text/ecmascript">
        <![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
    </script>
    <rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
    <text id="title" x="600" y="24">Flame Graph</text>
    <text id="details" x="10" y="405"></text>
    <text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
    <text id="search" x="1090" y="24">Search</text>
    <text id="matched" x="1090" y="405"></text>
    <g id="frames">
        <g>
            <title>all (92 samples, 100.00%)</title>
            <rect x="10.0" y="371.0" width="1180.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="13.0" y="382.0">all</text>
        </g>
        <g>
            <title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 1.09%)</title>
            <rect x="10.0" y="355.0" width="12.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
            <text x="13.0" y="366.0"></text>
        </g>
        <g>
            <title>InstanceKlass::allocate_instance(Thread*) (1 samples, 1.09%)</title>
            <rect x="10.0" y="339.0" width="12.8" height="15" fill="#d5d540" rx="2" ry="2"/>
            <text x="13.0" y="350.0"></text>
        </g>
        <g>
            <title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 1.09%)</title>
            <rect x="10.0" y="323.0" width="12.8" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="13.0" y="334.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate() const (1 samples, 1.09%)</title>
            <rect x="10.0" y="307.0" width="12.8" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="13.0" y="318.0"></text>
        </g>
        <g>
            <title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 1.09%)</title>
            <rect x="10.0" y="291.0" width="12.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="13.0" y="302.0"></text>
        </g>
        <g>
            <title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 1.09%)
            </title>
            <rect x="10.0" y="275.0" width="12.8" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="13.0" y="286.0"></text>
        </g>
        <g>
            <title>java/lang/Thread.run (70 samples, 76.09%)</title>
            <rect x="22.8" y="355.0" width="897.9" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="25.8" y="366.0">java/lang/Thread.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor$Worker.run (70 samples, 76.09%)</title>
            <rect x="22.8" y="339.0" width="897.9" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="25.8" y="350.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.runWorker (70 samples, 76.09%)</title>
            <rect x="22.8" y="323.0" width="897.9" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="25.8" y="334.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.getTask (55 samples, 59.78%)</title>
            <rect x="22.8" y="307.0" width="705.5" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="25.8" y="318.0">java/util/concurrent/ThreadPoolExecutor.getTask</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue.take (55 samples, 59.78%)</title>
            <rect x="22.8" y="291.0" width="705.5" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="25.8" y="302.0">java/util/concurrent/SynchronousQueue.take</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (55 samples, 59.78%)</title>
            <rect x="22.8" y="275.0" width="705.5" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="25.8" y="286.0">java/util/concurrent/SynchronousQueue$TransferStack.transfer</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (55 samples, 59.78%)</title>
            <rect x="22.8" y="259.0" width="705.5" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="25.8" y="270.0">java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.park (55 samples, 59.78%)</title>
            <rect x="22.8" y="243.0" width="705.5" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="25.8" y="254.0">java/util/concurrent/locks/LockSupport.park</text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.park (19 samples, 20.65%)</title>
            <rect x="484.6" y="227.0" width="243.7" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="487.6" y="238.0">jdk/internal/misc/Unsafe.park</text>
        </g>
        <g>
            <title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (17 samples, 18.48%)</title>
            <rect x="510.2" y="211.0" width="218.1" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="513.2" y="222.0">Unsafe_Park(JNIEnv_*, _jobjec..</text>
        </g>
        <g>
            <title>Parker::park(bool, long) (17 samples, 18.48%)</title>
            <rect x="510.2" y="195.0" width="218.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
            <text x="513.2" y="206.0">Parker::park(bool, long)</text>
        </g>
        <g>
            <title>__psynch_cvwait (16 samples, 17.39%)</title>
            <rect x="510.2" y="179.0" width="205.2" height="15" fill="#e56060" rx="2" ry="2"/>
            <text x="513.2" y="190.0">__psynch_cvwait</text>
        </g>
        <g>
            <title>_pthread_cond_wait (1 samples, 1.09%)</title>
            <rect x="715.4" y="179.0" width="12.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="718.4" y="190.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$69/406668019.run (15 samples, 16.30%)</title>
            <rect x="728.3" y="307.0" width="192.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="731.3" y="318.0">ru/mail/polis/service/rub..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$executeAsync$4 (15 samples, 16.30%)</title>
            <rect x="728.3" y="291.0" width="192.4" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="731.3" y="302.0">ru/mail/polis/service/rub..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.sendResponse (6 samples, 6.52%)</title>
            <rect x="728.3" y="275.0" width="76.9" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="731.3" y="286.0">one/nio/..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.writeResponse (6 samples, 6.52%)</title>
            <rect x="728.3" y="259.0" width="76.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="731.3" y="270.0">one/nio/..</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (6 samples, 6.52%)</title>
            <rect x="728.3" y="243.0" width="76.9" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="731.3" y="254.0">one/nio/..</text>
        </g>
        <g>
            <title>one/nio/net/Session.write (6 samples, 6.52%)</title>
            <rect x="728.3" y="227.0" width="76.9" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="731.3" y="238.0">one/nio/..</text>
        </g>
        <g>
            <title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 6.52%)</title>
            <rect x="728.3" y="211.0" width="76.9" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="731.3" y="222.0">one/nio/..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.write (6 samples, 6.52%)</title>
            <rect x="728.3" y="195.0" width="76.9" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="731.3" y="206.0">one/nio/..</text>
        </g>
        <g>
            <title>sun/nio/ch/SocketChannelImpl.write (6 samples, 6.52%)</title>
            <rect x="728.3" y="179.0" width="76.9" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="731.3" y="190.0">sun/nio/..</text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.write (6 samples, 6.52%)</title>
            <rect x="728.3" y="163.0" width="76.9" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="731.3" y="174.0">sun/nio/..</text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.write (6 samples, 6.52%)</title>
            <rect x="728.3" y="147.0" width="76.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="731.3" y="158.0">sun/nio/..</text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.writeFromNativeBuffer (4 samples, 4.35%)</title>
            <rect x="728.3" y="131.0" width="51.3" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="731.3" y="142.0">sun/n..</text>
        </g>
        <g>
            <title>sun/nio/ch/SocketDispatcher.write (4 samples, 4.35%)</title>
            <rect x="728.3" y="115.0" width="51.3" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="731.3" y="126.0">sun/n..</text>
        </g>
        <g>
            <title>sun/nio/ch/FileDispatcherImpl.write0 (4 samples, 4.35%)</title>
            <rect x="728.3" y="99.0" width="51.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="731.3" y="110.0">sun/n..</text>
        </g>
        <g>
            <title>write (4 samples, 4.35%)</title>
            <rect x="728.3" y="83.0" width="51.3" height="15" fill="#eb6767" rx="2" ry="2"/>
            <text x="731.3" y="94.0">write</text>
        </g>
        <g>
            <title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 2.17%)</title>
            <rect x="779.6" y="131.0" width="25.6" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="782.6" y="142.0">s..</text>
        </g>
        <g>
            <title>sun/nio/ch/Util$BufferCache.get (2 samples, 2.17%)</title>
            <rect x="779.6" y="115.0" width="25.6" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="782.6" y="126.0">s..</text>
        </g>
        <g>
            <title>java/nio/MappedByteBuffer.limit (1 samples, 1.09%)</title>
            <rect x="792.4" y="99.0" width="12.8" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="795.4" y="110.0"></text>
        </g>
        <g>
            <title>java/nio/MappedByteBuffer.limit (1 samples, 1.09%)</title>
            <rect x="792.4" y="83.0" width="12.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="795.4" y="94.0"></text>
        </g>
        <g>
            <title>java/nio/ByteBuffer.limit (1 samples, 1.09%)</title>
            <rect x="792.4" y="67.0" width="12.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="795.4" y="78.0"></text>
        </g>
        <g>
            <title>java/nio/Buffer.limit (1 samples, 1.09%)</title>
            <rect x="792.4" y="51.0" width="12.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="795.4" y="62.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$65/1136778337.act (8 samples, 8.70%)</title>
            <rect x="805.2" y="275.0" width="102.6" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="808.2" y="286.0">ru/mail/poli..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$0 (8 samples, 8.70%)</title>
            <rect x="805.2" y="259.0" width="102.6" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="808.2" y="270.0">ru/mail/poli..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.proxy (8 samples, 8.70%)</title>
            <rect x="805.2" y="243.0" width="102.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="808.2" y="254.0">ru/mail/poli..</text>
        </g>
        <g>
            <title>java/util/HashMap.get (1 samples, 1.09%)</title>
            <rect x="805.2" y="227.0" width="12.8" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="808.2" y="238.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.getNode (1 samples, 1.09%)</title>
            <rect x="805.2" y="211.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="808.2" y="222.0"></text>
        </g>
        <g>
            <title>java/lang/String.equals (1 samples, 1.09%)</title>
            <rect x="805.2" y="195.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="808.2" y="206.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient.invoke (7 samples, 7.61%)</title>
            <rect x="818.0" y="227.0" width="89.8" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="821.0" y="238.0">one/nio/ht..</text>
        </g>
        <g>
            <title>one/nio/http/HttpClient.invoke (7 samples, 7.61%)</title>
            <rect x="818.0" y="211.0" width="89.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="821.0" y="222.0">one/nio/ht..</text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (1 samples, 1.09%)</title>
            <rect x="818.0" y="195.0" width="12.9" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="821.0" y="206.0"></text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.read (1 samples, 1.09%)</title>
            <rect x="818.0" y="179.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="821.0" y="190.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SocketChannelImpl.read (1 samples, 1.09%)</title>
            <rect x="818.0" y="163.0" width="12.9" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="821.0" y="174.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.read (1 samples, 1.09%)</title>
            <rect x="818.0" y="147.0" width="12.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="821.0" y="158.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.read (1 samples, 1.09%)</title>
            <rect x="818.0" y="131.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
            <text x="821.0" y="142.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 1.09%)</title>
            <rect x="818.0" y="115.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="821.0" y="126.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/SocketDispatcher.read (1 samples, 1.09%)</title>
            <rect x="818.0" y="99.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="821.0" y="110.0"></text>
        </g>
        <g>
            <title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 1.09%)</title>
            <rect x="818.0" y="83.0" width="12.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="821.0" y="94.0"></text>
        </g>
        <g>
            <title>read (1 samples, 1.09%)</title>
            <rect x="818.0" y="67.0" width="12.9" height="15" fill="#f77777" rx="2" ry="2"/>
            <text x="821.0" y="78.0"></text>
        </g>
        <g>
            <title>one/nio/http/HttpClient$ResponseReader.readResponse (1 samples, 1.09%)</title>
            <rect x="830.9" y="195.0" width="12.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="833.9" y="206.0"></text>
        </g>
        <g>
            <title>one/nio/http/Response.getHeader (1 samples, 1.09%)</title>
            <rect x="830.9" y="179.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="833.9" y="190.0"></text>
        </g>
        <g>
            <title>java/lang/String.regionMatches (1 samples, 1.09%)</title>
            <rect x="830.9" y="163.0" width="12.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
            <text x="833.9" y="174.0"></text>
        </g>
        <g>
            <title>java/lang/StringLatin1.regionMatchesCI (1 samples, 1.09%)</title>
            <rect x="830.9" y="147.0" width="12.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
            <text x="833.9" y="158.0"></text>
        </g>
        <g>
            <title>one/nio/net/JavaSocket.writeFully (5 samples, 5.43%)</title>
            <rect x="843.7" y="195.0" width="64.1" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="846.7" y="206.0">one/nio..</text>
        </g>
        <g>
            <title>java/nio/channels/Channels$1.write (3 samples, 3.26%)</title>
            <rect x="843.7" y="179.0" width="38.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
            <text x="846.7" y="190.0">jav..</text>
        </g>
        <g>
            <title>java/nio/channels/Channels.writeFully (3 samples, 3.26%)</title>
            <rect x="843.7" y="163.0" width="38.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="846.7" y="174.0">jav..</text>
        </g>
        <g>
            <title>java/nio/channels/Channels.writeFullyImpl (3 samples, 3.26%)</title>
            <rect x="843.7" y="147.0" width="38.5" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="846.7" y="158.0">jav..</text>
        </g>
        <g>
            <title>sun/nio/ch/SocketChannelImpl.write (3 samples, 3.26%)</title>
            <rect x="843.7" y="131.0" width="38.5" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="846.7" y="142.0">sun..</text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.write (3 samples, 3.26%)</title>
            <rect x="843.7" y="115.0" width="38.5" height="15" fill="#58e958" rx="2" ry="2"/>
            <text x="846.7" y="126.0">sun..</text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.write (3 samples, 3.26%)</title>
            <rect x="843.7" y="99.0" width="38.5" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="846.7" y="110.0">sun..</text>
        </g>
        <g>
            <title>sun/nio/ch/IOUtil.writeFromNativeBuffer (3 samples, 3.26%)</title>
            <rect x="843.7" y="83.0" width="38.5" height="15" fill="#51e251" rx="2" ry="2"/>
            <text x="846.7" y="94.0">sun..</text>
        </g>
        <g>
            <title>sun/nio/ch/SocketDispatcher.write (3 samples, 3.26%)</title>
            <rect x="843.7" y="67.0" width="38.5" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="846.7" y="78.0">sun..</text>
        </g>
        <g>
            <title>sun/nio/ch/FileDispatcherImpl.write0 (3 samples, 3.26%)</title>
            <rect x="843.7" y="51.0" width="38.5" height="15" fill="#61f261" rx="2" ry="2"/>
            <text x="846.7" y="62.0">sun..</text>
        </g>
        <g>
            <title>write (3 samples, 3.26%)</title>
            <rect x="843.7" y="35.0" width="38.5" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="846.7" y="46.0">write</text>
        </g>
        <g>
            <title>sun/nio/ch/SocketAdaptor.getOutputStream (2 samples, 2.17%)</title>
            <rect x="882.2" y="179.0" width="25.6" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="885.2" y="190.0">s..</text>
        </g>
        <g>
            <title>java/security/AccessController.doPrivileged (2 samples, 2.17%)</title>
            <rect x="882.2" y="163.0" width="25.6" height="15" fill="#65f665" rx="2" ry="2"/>
            <text x="885.2" y="174.0">j..</text>
        </g>
        <g>
            <title>JVM_DoPrivileged (1 samples, 1.09%)</title>
            <rect x="882.2" y="147.0" width="12.8" height="15" fill="#e76363" rx="2" ry="2"/>
            <text x="885.2" y="158.0"></text>
        </g>
        <g>
            <title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 1.09%)</title>
            <rect x="882.2" y="131.0" width="12.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="885.2" y="142.0"></text>
        </g>
        <g>
            <title>Method::is_ignored_by_security_stack_walk() const (1 samples, 1.09%)</title>
            <rect x="882.2" y="115.0" width="12.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="885.2" y="126.0"></text>
        </g>
        <g>
            <title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples,
                1.09%)
            </title>
            <rect x="895.0" y="147.0" width="12.8" height="15" fill="#e3e345" rx="2" ry="2"/>
            <text x="898.0" y="158.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService$$Lambda$66/694045435.act (1 samples, 1.09%)</title>
            <rect x="907.8" y="275.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
            <text x="910.8" y="286.0"></text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.lambda$entity$2 (1 samples, 1.09%)</title>
            <rect x="907.8" y="259.0" width="12.9" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="910.8" y="270.0"></text>
        </g>
        <g>
            <title>one/nio/http/Request.getBody (1 samples, 1.09%)</title>
            <rect x="907.8" y="243.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="910.8" y="254.0"></text>
        </g>
        <g>
            <title>one/nio/server/SelectorThread.run (11 samples, 11.96%)</title>
            <rect x="920.7" y="355.0" width="141.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
            <text x="923.7" y="366.0">one/nio/server/Sel..</text>
        </g>
        <g>
            <title>one/nio/net/JavaSelector.select (8 samples, 8.70%)</title>
            <rect x="920.7" y="339.0" width="102.6" height="15" fill="#68f968" rx="2" ry="2"/>
            <text x="923.7" y="350.0">one/nio/net/..</text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.select (7 samples, 7.61%)</title>
            <rect x="920.7" y="323.0" width="89.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="923.7" y="334.0">sun/nio/ch..</text>
        </g>
        <g>
            <title>sun/nio/ch/SelectorImpl.lockAndDoSelect (7 samples, 7.61%)</title>
            <rect x="920.7" y="307.0" width="89.7" height="15" fill="#64f564" rx="2" ry="2"/>
            <text x="923.7" y="318.0">sun/nio/ch..</text>
        </g>
        <g>
            <title>sun/nio/ch/KQueueSelectorImpl.doSelect (7 samples, 7.61%)</title>
            <rect x="920.7" y="291.0" width="89.7" height="15" fill="#60f160" rx="2" ry="2"/>
            <text x="923.7" y="302.0">sun/nio/ch..</text>
        </g>
        <g>
            <title>sun/nio/ch/KQueue.poll (7 samples, 7.61%)</title>
            <rect x="920.7" y="275.0" width="89.7" height="15" fill="#62f362" rx="2" ry="2"/>
            <text x="923.7" y="286.0">sun/nio/ch..</text>
        </g>
        <g>
            <title>kevent (6 samples, 6.52%)</title>
            <rect x="933.5" y="259.0" width="76.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="936.5" y="270.0">kevent</text>
        </g>
        <g>
            <title>sun/nio/ch/Util$2.clear (1 samples, 1.09%)</title>
            <rect x="1010.4" y="323.0" width="12.9" height="15" fill="#63f463" rx="2" ry="2"/>
            <text x="1013.4" y="334.0"></text>
        </g>
        <g>
            <title>java/util/HashSet.clear (1 samples, 1.09%)</title>
            <rect x="1010.4" y="307.0" width="12.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
            <text x="1013.4" y="318.0"></text>
        </g>
        <g>
            <title>java/util/HashMap.clear (1 samples, 1.09%)</title>
            <rect x="1010.4" y="291.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="1013.4" y="302.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.process (3 samples, 3.26%)</title>
            <rect x="1023.3" y="339.0" width="38.4" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="1026.3" y="350.0">one..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processRead (3 samples, 3.26%)</title>
            <rect x="1023.3" y="323.0" width="38.4" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="1026.3" y="334.0">one..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 2.17%)</title>
            <rect x="1023.3" y="307.0" width="25.6" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="1026.3" y="318.0">o..</text>
        </g>
        <g>
            <title>one/nio/http/HttpSession.handleParsedRequest (2 samples, 2.17%)</title>
            <rect x="1023.3" y="291.0" width="25.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="1026.3" y="302.0">o..</text>
        </g>
        <g>
            <title>one/nio/http/HttpServer.handleRequest (2 samples, 2.17%)</title>
            <rect x="1023.3" y="275.0" width="25.6" height="15" fill="#53e453" rx="2" ry="2"/>
            <text x="1026.3" y="286.0">o..</text>
        </g>
        <g>
            <title>RequestHandler1_entity.handleRequest (2 samples, 2.17%)</title>
            <rect x="1023.3" y="259.0" width="25.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
            <text x="1026.3" y="270.0">R..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.entity (2 samples, 2.17%)</title>
            <rect x="1023.3" y="243.0" width="25.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
            <text x="1026.3" y="254.0">r..</text>
        </g>
        <g>
            <title>ru/mail/polis/service/rubtsov/MyService.executeAsync (2 samples, 2.17%)</title>
            <rect x="1023.3" y="227.0" width="25.6" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="1026.3" y="238.0">r..</text>
        </g>
        <g>
            <title>one/nio/server/Server.asyncExecute (2 samples, 2.17%)</title>
            <rect x="1023.3" y="211.0" width="25.6" height="15" fill="#55e655" rx="2" ry="2"/>
            <text x="1026.3" y="222.0">o..</text>
        </g>
        <g>
            <title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 2.17%)</title>
            <rect x="1023.3" y="195.0" width="25.6" height="15" fill="#66f766" rx="2" ry="2"/>
            <text x="1026.3" y="206.0">j..</text>
        </g>
        <g>
            <title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (2 samples, 2.17%)</title>
            <rect x="1023.3" y="179.0" width="25.6" height="15" fill="#59ea59" rx="2" ry="2"/>
            <text x="1026.3" y="190.0">o..</text>
        </g>
        <g>
            <title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (2 samples, 2.17%)</title>
            <rect x="1023.3" y="163.0" width="25.6" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="1026.3" y="174.0">o..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue.offer (2 samples, 2.17%)</title>
            <rect x="1023.3" y="147.0" width="25.6" height="15" fill="#69fa69" rx="2" ry="2"/>
            <text x="1026.3" y="158.0">j..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2 samples, 2.17%)</title>
            <rect x="1023.3" y="131.0" width="25.6" height="15" fill="#57e857" rx="2" ry="2"/>
            <text x="1026.3" y="142.0">j..</text>
        </g>
        <g>
            <title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (2 samples, 2.17%)</title>
            <rect x="1023.3" y="115.0" width="25.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
            <text x="1026.3" y="126.0">j..</text>
        </g>
        <g>
            <title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 2.17%)</title>
            <rect x="1023.3" y="99.0" width="25.6" height="15" fill="#56e756" rx="2" ry="2"/>
            <text x="1026.3" y="110.0">j..</text>
        </g>
        <g>
            <title>jdk/internal/misc/Unsafe.unpark (1 samples, 1.09%)</title>
            <rect x="1036.1" y="83.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
            <text x="1039.1" y="94.0"></text>
        </g>
        <g>
            <title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 1.09%)</title>
            <rect x="1036.1" y="67.0" width="12.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="1039.1" y="78.0"></text>
        </g>
        <g>
            <title>__psynch_cvsignal (1 samples, 1.09%)</title>
            <rect x="1036.1" y="51.0" width="12.8" height="15" fill="#fe8080" rx="2" ry="2"/>
            <text x="1039.1" y="62.0"></text>
        </g>
        <g>
            <title>one/nio/net/Session.read (1 samples, 1.09%)</title>
            <rect x="1048.9" y="307.0" width="12.8" height="15" fill="#52e352" rx="2" ry="2"/>
            <text x="1051.9" y="318.0"></text>
        </g>
        <g>
            <title>one/nio/net/JavaSelector.select (1 samples, 1.09%)</title>
            <rect x="1048.9" y="291.0" width="12.8" height="15" fill="#50e150" rx="2" ry="2"/>
            <text x="1051.9" y="302.0"></text>
        </g>
        <g>
            <title>thread_start (10 samples, 10.87%)</title>
            <rect x="1061.7" y="355.0" width="128.3" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="1064.7" y="366.0">thread_start</text>
        </g>
        <g>
            <title>_pthread_start (10 samples, 10.87%)</title>
            <rect x="1061.7" y="339.0" width="128.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
            <text x="1064.7" y="350.0">_pthread_start</text>
        </g>
        <g>
            <title>thread_native_entry(Thread*) (10 samples, 10.87%)</title>
            <rect x="1061.7" y="323.0" width="128.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
            <text x="1064.7" y="334.0">thread_native_en..</text>
        </g>
        <g>
            <title>Thread::call_run() (10 samples, 10.87%)</title>
            <rect x="1061.7" y="307.0" width="128.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
            <text x="1064.7" y="318.0">Thread::call_run()</text>
        </g>
        <g>
            <title>ConcurrentGCThread::run() (1 samples, 1.09%)</title>
            <rect x="1061.7" y="291.0" width="12.9" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1064.7" y="302.0"></text>
        </g>
        <g>
            <title>G1YoungRemSetSamplingThread::run_service() (1 samples, 1.09%)</title>
            <rect x="1061.7" y="275.0" width="12.9" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1064.7" y="286.0"></text>
        </g>
        <g>
            <title>G1YoungRemSetSamplingThread::sleep_before_next_cycle() (1 samples, 1.09%)</title>
            <rect x="1061.7" y="259.0" width="12.9" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1064.7" y="270.0"></text>
        </g>
        <g>
            <title>Monitor::wait(bool, long, bool) (1 samples, 1.09%)</title>
            <rect x="1061.7" y="243.0" width="12.9" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1064.7" y="254.0"></text>
        </g>
        <g>
            <title>Monitor::IWait(Thread*, long) (1 samples, 1.09%)</title>
            <rect x="1061.7" y="227.0" width="12.9" height="15" fill="#caca3c" rx="2" ry="2"/>
            <text x="1064.7" y="238.0"></text>
        </g>
        <g>
            <title>os::PlatformEvent::park(long) (1 samples, 1.09%)</title>
            <rect x="1061.7" y="211.0" width="12.9" height="15" fill="#e0e044" rx="2" ry="2"/>
            <text x="1064.7" y="222.0"></text>
        </g>
        <g>
            <title>__psynch_cvwait (1 samples, 1.09%)</title>
            <rect x="1061.7" y="195.0" width="12.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="1064.7" y="206.0"></text>
        </g>
        <g>
            <title>GangWorker::loop() (2 samples, 2.17%)</title>
            <rect x="1074.6" y="291.0" width="25.6" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1077.6" y="302.0">G..</text>
        </g>
        <g>
            <title>G1ParTask::work(unsigned int) (2 samples, 2.17%)</title>
            <rect x="1074.6" y="275.0" width="25.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1077.6" y="286.0">G..</text>
        </g>
        <g>
            <title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 2.17%)</title>
            <rect x="1074.6" y="259.0" width="25.6" height="15" fill="#dada42" rx="2" ry="2"/>
            <text x="1077.6" y="270.0">G..</text>
        </g>
        <g>
            <title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (2 samples, 2.17%)</title>
            <rect x="1074.6" y="243.0" width="25.6" height="15" fill="#cece3e" rx="2" ry="2"/>
            <text x="1077.6" y="254.0">P..</text>
        </g>
        <g>
            <title>_block_invoke.modules (2 samples, 2.17%)</title>
            <rect x="1074.6" y="227.0" width="25.6" height="15" fill="#f37373" rx="2" ry="2"/>
            <text x="1077.6" y="238.0">_..</text>
        </g>
        <g>
            <title>JavaThread::thread_main_inner() (2 samples, 2.17%)</title>
            <rect x="1100.2" y="291.0" width="25.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
            <text x="1103.2" y="302.0">J..</text>
        </g>
        <g>
            <title>CompileBroker::compiler_thread_loop() (1 samples, 1.09%)</title>
            <rect x="1100.2" y="275.0" width="12.8" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1103.2" y="286.0"></text>
        </g>
        <g>
            <title>CompileQueue::get() (1 samples, 1.09%)</title>
            <rect x="1100.2" y="259.0" width="12.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="1103.2" y="270.0"></text>
        </g>
        <g>
            <title>Monitor::wait(bool, long, bool) (1 samples, 1.09%)</title>
            <rect x="1100.2" y="243.0" width="12.8" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1103.2" y="254.0"></text>
        </g>
        <g>
            <title>Monitor::IWait(Thread*, long) (1 samples, 1.09%)</title>
            <rect x="1100.2" y="227.0" width="12.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="1103.2" y="238.0"></text>
        </g>
        <g>
            <title>os::PlatformEvent::park(long) (1 samples, 1.09%)</title>
            <rect x="1100.2" y="211.0" width="12.8" height="15" fill="#dddd43" rx="2" ry="2"/>
            <text x="1103.2" y="222.0"></text>
        </g>
        <g>
            <title>__psynch_cvwait (1 samples, 1.09%)</title>
            <rect x="1100.2" y="195.0" width="12.8" height="15" fill="#f37373" rx="2" ry="2"/>
            <text x="1103.2" y="206.0"></text>
        </g>
        <g>
            <title>attach_listener_thread_entry(JavaThread*, Thread*) (1 samples, 1.09%)</title>
            <rect x="1113.0" y="275.0" width="12.9" height="15" fill="#e76262" rx="2" ry="2"/>
            <text x="1116.0" y="286.0"></text>
        </g>
        <g>
            <title>load_agent(AttachOperation*, outputStream*) (1 samples, 1.09%)</title>
            <rect x="1113.0" y="259.0" width="12.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
            <text x="1116.0" y="270.0"></text>
        </g>
        <g>
            <title>JvmtiExport::load_agent_library(char const*, char const*, char const*, outputStream*) (1 samples,
                1.09%)
            </title>
            <rect x="1113.0" y="243.0" width="12.9" height="15" fill="#e5e545" rx="2" ry="2"/>
            <text x="1116.0" y="254.0"></text>
        </g>
        <g>
            <title>os::dll_load(char const*, char*, int) (1 samples, 1.09%)</title>
            <rect x="1113.0" y="227.0" width="12.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="1116.0" y="238.0"></text>
        </g>
        <g>
            <title>_dispatch_queue_attr_concurrent (1 samples, 1.09%)</title>
            <rect x="1113.0" y="211.0" width="12.9" height="15" fill="#f47474" rx="2" ry="2"/>
            <text x="1116.0" y="222.0"></text>
        </g>
        <g>
            <title>[unknown] (1 samples, 1.09%)</title>
            <rect x="1113.0" y="195.0" width="12.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="1116.0" y="206.0"></text>
        </g>
        <g>
            <title>[unknown] (1 samples, 1.09%)</title>
            <rect x="1113.0" y="179.0" width="12.9" height="15" fill="#ea6666" rx="2" ry="2"/>
            <text x="1116.0" y="190.0"></text>
        </g>
        <g>
            <title>[unknown] (1 samples, 1.09%)</title>
            <rect x="1113.0" y="163.0" width="12.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
            <text x="1116.0" y="174.0"></text>
        </g>
        <g>
            <title>[unknown] (1 samples, 1.09%)</title>
            <rect x="1113.0" y="147.0" width="12.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
            <text x="1116.0" y="158.0"></text>
        </g>
        <g>
            <title>[unknown] (1 samples, 1.09%)</title>
            <rect x="1113.0" y="131.0" width="12.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
            <text x="1116.0" y="142.0"></text>
        </g>
        <g>
            <title>[unknown] (1 samples, 1.09%)</title>
            <rect x="1113.0" y="115.0" width="12.9" height="15" fill="#f77878" rx="2" ry="2"/>
            <text x="1116.0" y="126.0"></text>
        </g>
        <g>
            <title>[unknown] (1 samples, 1.09%)</title>
            <rect x="1113.0" y="99.0" width="12.9" height="15" fill="#eb6868" rx="2" ry="2"/>
            <text x="1116.0" y="110.0"></text>
        </g>
        <g>
            <title>[unknown] (1 samples, 1.09%)</title>
            <rect x="1113.0" y="83.0" width="12.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
            <text x="1116.0" y="94.0"></text>
        </g>
        <g>
            <title>VMThread::run() (1 samples, 1.09%)</title>
            <rect x="1125.9" y="291.0" width="12.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
            <text x="1128.9" y="302.0"></text>
        </g>
        <g>
            <title>VMThread::loop() (1 samples, 1.09%)</title>
            <rect x="1125.9" y="275.0" width="12.8" height="15" fill="#d9d941" rx="2" ry="2"/>
            <text x="1128.9" y="286.0"></text>
        </g>
        <g>
            <title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 1.09%)</title>
            <rect x="1125.9" y="259.0" width="12.8" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1128.9" y="270.0"></text>
        </g>
        <g>
            <title>VM_Operation::evaluate() (1 samples, 1.09%)</title>
            <rect x="1125.9" y="243.0" width="12.8" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1128.9" y="254.0"></text>
        </g>
        <g>
            <title>VM_G1CollectForAllocation::doit() (1 samples, 1.09%)</title>
            <rect x="1125.9" y="227.0" width="12.8" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1128.9" y="238.0"></text>
        </g>
        <g>
            <title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 1.09%)</title>
            <rect x="1125.9" y="211.0" width="12.8" height="15" fill="#e2e244" rx="2" ry="2"/>
            <text x="1128.9" y="222.0"></text>
        </g>
        <g>
            <title>G1CollectedHeap::pre_evacuate_collection_set() (1 samples, 1.09%)</title>
            <rect x="1125.9" y="195.0" width="12.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1128.9" y="206.0"></text>
        </g>
        <g>
            <title>G1RemSetScanState::reset() (1 samples, 1.09%)</title>
            <rect x="1125.9" y="179.0" width="12.8" height="15" fill="#dede43" rx="2" ry="2"/>
            <text x="1128.9" y="190.0"></text>
        </g>
        <g>
            <title>HeapRegionManager::iterate(HeapRegionClosure*) const (1 samples, 1.09%)</title>
            <rect x="1125.9" y="163.0" width="12.8" height="15" fill="#d8d841" rx="2" ry="2"/>
            <text x="1128.9" y="174.0"></text>
        </g>
        <g>
            <title>G1RemSetScanState::G1ResetScanTopClosure::do_heap_region(HeapRegion*) (1 samples, 1.09%)</title>
            <rect x="1125.9" y="147.0" width="12.8" height="15" fill="#e1e144" rx="2" ry="2"/>
            <text x="1128.9" y="158.0"></text>
        </g>
        <g>
            <title>WatcherThread::run() (4 samples, 4.35%)</title>
            <rect x="1138.7" y="291.0" width="51.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
            <text x="1141.7" y="302.0">Watch..</text>
        </g>
        <g>
            <title>WatcherThread::sleep() const (4 samples, 4.35%)</title>
            <rect x="1138.7" y="275.0" width="51.3" height="15" fill="#e4e445" rx="2" ry="2"/>
            <text x="1141.7" y="286.0">Watch..</text>
        </g>
        <g>
            <title>Monitor::wait(bool, long, bool) (4 samples, 4.35%)</title>
            <rect x="1138.7" y="259.0" width="51.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1141.7" y="270.0">Monit..</text>
        </g>
        <g>
            <title>Monitor::IWait(Thread*, long) (4 samples, 4.35%)</title>
            <rect x="1138.7" y="243.0" width="51.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
            <text x="1141.7" y="254.0">Monit..</text>
        </g>
        <g>
            <title>os::PlatformEvent::park(long) (4 samples, 4.35%)</title>
            <rect x="1138.7" y="227.0" width="51.3" height="15" fill="#d7d741" rx="2" ry="2"/>
            <text x="1141.7" y="238.0">os::P..</text>
        </g>
        <g>
            <title>__psynch_cvwait (3 samples, 3.26%)</title>
            <rect x="1138.7" y="211.0" width="38.5" height="15" fill="#fe8181" rx="2" ry="2"/>
            <text x="1141.7" y="222.0">__p..</text>
        </g>
        <g>
            <title>to_abstime(timespec*, long, bool) (1 samples, 1.09%)</title>
            <rect x="1177.2" y="211.0" width="12.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
            <text x="1180.2" y="222.0"></text>
        </g>
    </g>
</svg>
